{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/position.ts","webpack:///./src/doDraw.ts","webpack:///./src/playground.ts","webpack:///./src/Styles.ts","webpack:///./src/serializer.ts","webpack:///./src/PentaWarningError.ts","webpack:///./src/Pentatonic.ts","webpack:///./src/area.ts","webpack:///./src/Cell.ts","webpack:///./src/diff.ts","webpack:///./src/sister.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Position","[object Object]","j","this","pos","Math","abs","playground_1","Styles_1","serializer_1","canvas","penaltyArea","ceil","window","onload","textEditPenta","document","getElementById","buttonConvert","errors","warnings","success","canvasElement","context2D","getContext","ground","Playground","Styles","onclick","penta","Serializer","serialize","drawPentatonic","context","styles","offsetX","offsetY","totalWidth","width","style","border","borderWidth","borderColor","margin","background","console","log","xAxis","yAxis","radius","beginPath","arc","PI","fillStyle","fillColor","fill","lineWidth","strokeStyle","stroke","text","font","Heading","color","textColor","fillText","x1","y1","x2","y2","moveTo","lineTo","isReverseArrow","x2ofLine","y2OfLine","height","fillRect","lineColor","strokeRect","pentaWarningError","textContent","join","length","pentatonic","cellSize","columns","heightCanvas","lines","setAttribute","toString","drawEachCell","drawVerticalSeparations","drawHorizontalSeparations","drawAllClues","drawRectangleBorderLine","drawRectangleThinLine","cells","area","id","drawLine","cellArray","filter","cell","values","sistersHave","position","forEach","writeText","getSisterSymbol","Default","widthCell","heightCell","PentaWarningError_1","area_1","Cell_1","position_1","diff_1","sister_1","PentaWarningError","split","minLines","addError","author","trim","lineCol","map","Number","fillAreas","fillEnonce","startLine","line","mapAreas","index","lineCells","addWarning","Cell","Area","push","fillAreaSize","countArray","toSister","startsWith","lineCols","substr","pos1","pos2","isNear","diffOnes","Diff","nb","nLine","nCol","isNaN","keyChar","sisters","Sister","Pentatonic_1","Pentatonic","warn","error","version","areas","difficulty","filename","getAllAreas","areaCells","getAreaCells","size","res","row","set","Set","add","diff","position1","position2","sis","positions","indexOf","symbol"],"mappings":"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","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","export class Position {\r\n\r\n    i: number;\r\n    j: number;\r\n\r\n    constructor(i: number, j: number) {\r\n        this.i = i;\r\n        this.j = j;\r\n    }\r\n\r\n    isNear(pos: Position): boolean {\r\n        if (Math.abs(pos.i - this.i) > 1 || Math.abs(pos.j - this.j) > 1) {\r\n            return false;\r\n        }\r\n        if (pos.i == this.i && pos.j == this.j) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}","import {Playground} from \"./playground\";\r\nimport {Styles} from \"./Styles\";\r\nimport {PentaWarningError} from \"./PentaWarningError\";\r\nimport {Serializer} from \"./serializer\";\r\n\r\nlet _height = 500;\r\nlet _width = 1000;\r\nlet canvas = {\r\n    width: _width,\r\n    height: _height,\r\n    halfWidth: _width / 2,\r\n    lineWidth: 2,\r\n    background: {Default: \"#08a107\", Orange: \"#f60\", Green: \"#f80\"},\r\n    borderColor: {White: \"#fff\", Green: \"#f80\"},\r\n    colorMap: {Orange: \"#f60\", Green: \"#f80\"}\r\n};\r\nlet common = {\r\n    fillColor: {Default: \"#0d5f0c\", Green: \"green\", Red: \"red\", Orange: \"#f60\", White: \"#fff\"},\r\n    borderColor: \"#fff\",\r\n    fontFamily: \" 'Segoe UI',Arial,sans-serif\",\r\n    font: {Default: \"12px 'Segoe UI',Arial,sans-serif\", Heading: \"14px 'Segoe UI',Arial,sans-serif\"},\r\n    lineWidth: {Pixel1: 1, Pixel2: 2, Pixel3: 3, Pixel4: 4, Pixel5: 5},\r\n    arrowLength: {Default: 70, Pixel50: 50}\r\n};\r\n\r\nlet penaltyArea = {\r\n    height: Math.ceil((canvas.height * 70) / 100),\r\n    width: Math.ceil((canvas.width * 12) / 100),\r\n    yPosition: Math.ceil(((canvas.height * 30) / 100) / 2),\r\n    xPosition: {TeamA: 0, TeamB: canvas.width - Math.ceil((canvas.width * 12) / 100)}\r\n};\r\nlet goalArea = {\r\n    height: Math.ceil((penaltyArea.height * 60) / 100),\r\n    width: Math.ceil(penaltyArea.width / 2),\r\n    yPositon: (canvas.height - penaltyArea.height),\r\n    xPosition: {TeamA: 0, TeamB: Math.ceil(canvas.width - (penaltyArea.width / 2))}\r\n};\r\nlet penaltyArc = {\r\n    xPosition: {\r\n        TeamA: penaltyArea.width - goalArea.width / 4,\r\n        TeamB: canvas.width - penaltyArea.width + goalArea.width / 4\r\n    },\r\n    yPosition: canvas.height / 2,\r\n    radius: goalArea.height / 3\r\n};\r\n\r\nlet groundCorner = {\r\n    radius: Math.ceil((canvas.height * 2) / 100)\r\n};\r\nlet captionText = \"\";\r\n\r\nwindow.onload = function () {\r\n    let textEditPenta = document.getElementById(\"text-penta\") as HTMLTextAreaElement;\r\n    let buttonConvert = document.getElementById(\"btn-convert\") as HTMLButtonElement;\r\n    let errors: Node = document.getElementById(\"errors\");\r\n    let warnings: Node = document.getElementById(\"warnings\");\r\n    let success: Node = document.getElementById(\"success\");\r\n    let canvasElement = document.getElementById(\"penta-representation\") as HTMLCanvasElement;\r\n    let context2D: CanvasRenderingContext2D = canvasElement.getContext(\"2d\");\r\n\r\n    let ground = new Playground(canvasElement, context2D, new Styles(20, 20));\r\n    buttonConvert.onclick = () => {\r\n        let penta: PentaWarningError = Serializer.serialize(textEditPenta.value);\r\n        ground.drawPentatonic(penta, errors, warnings, success);\r\n    };\r\n};","import {Styles} from \"./Styles\";\r\nimport {PentaWarningError} from \"./PentaWarningError\";\r\nimport {Pentatonic} from \"./Pentatonic\";\r\n\r\nexport class Playground {\r\n    private canvasElement: HTMLCanvasElement;\r\n    private context: CanvasRenderingContext2D;\r\n\r\n    private styles: Styles;\r\n\r\n    private cellSize: number;\r\n    private offsetX = 30;\r\n    private offsetY = 30;\r\n    private totalWidth: number;\r\n\r\n    constructor(canvasElement: HTMLCanvasElement, context: CanvasRenderingContext2D, styles: Styles) {\r\n        this.canvasElement = canvasElement;\r\n        this.totalWidth = this.canvasElement.width;\r\n\r\n        this.context = context;\r\n        this.styles = styles;\r\n\r\n        this.canvasElement.style.border = this.styles.borderWidth + \"px solid \" + this.styles.borderColor;\r\n        this.canvasElement.style.margin = \"auto 25px\";\r\n        this.canvasElement.style.background = this.styles.background;\r\n\r\n    }\r\n\r\n    setGroundStyles(): void {\r\n        console.log(\"Width is \" + this.totalWidth);\r\n        // this.canvasElement.setAttribute(\"width\", \"500\");\r\n        // this.canvasElement.setAttribute(\"height\", \"500\");\r\n        this.canvasElement.style.border = this.styles.borderWidth + \"px solid \" + this.styles.borderColor;\r\n        this.canvasElement.style.margin = \"auto 25px\";\r\n        this.canvasElement.style.background = this.styles.background;\r\n    }\r\n\r\n    drawCenterSpot(xAxis: number, yAxis: number, radius: number) {\r\n        this.context.beginPath();\r\n        this.context.arc(xAxis, yAxis, radius, 0, 2 * Math.PI);\r\n        this.context.fillStyle = this.styles.fillColor;\r\n        this.context.fill();\r\n        this.context.lineWidth = this.styles.lineWidth;\r\n        this.context.strokeStyle = this.styles.borderColor;\r\n        this.context.stroke();\r\n    }\r\n\r\n    drawCorner(xAxis: number, yAxis: number) {\r\n        this.context.beginPath();\r\n        this.context.arc(xAxis, yAxis, 10, 0, 2 * Math.PI);\r\n        this.context.fillStyle = this.styles.fillColor;\r\n        this.context.fill();\r\n        this.context.lineWidth = this.styles.lineWidth;\r\n        this.context.strokeStyle = this.styles.borderColor;\r\n        this.context.stroke();\r\n    }\r\n\r\n    writeText(text: string, xAxis: number, yAxis: number, font: string = this.styles.font.Heading,\r\n              color: string = this.styles.textColor) {\r\n        this.context.font = font;\r\n        this.context.fillStyle = color;\r\n        this.context.fillText(text, xAxis, yAxis);\r\n\r\n    }\r\n\r\n    drawLine(x1: number, y1: number, x2: number, y2: number) {\r\n        this.context.beginPath();\r\n        this.context.lineWidth = this.styles.borderWidth;\r\n        this.context.fillStyle = this.styles.borderColor;\r\n        this.context.moveTo(x1, y1);\r\n        this.context.lineTo(x2, y2);\r\n        this.context.stroke();\r\n        this.context.fill();\r\n    }\r\n\r\n    drawArrowLine(x1: number, y1: number, x2: number, y2: number, isReverseArrow = false) {\r\n        let i;\r\n        this.context.beginPath();\r\n        this.context.moveTo(x1, y1);\r\n        this.context.lineTo(x2, y2);\r\n        this.context.strokeStyle = this.styles.fillColor;\r\n        this.context.lineWidth = this.styles.lineWidth;\r\n        this.context.stroke();\r\n\r\n        let x2ofLine = x2;\r\n        let y2OfLine = y2;\r\n\r\n        if (!isReverseArrow) {\r\n            for (i = 0; i <= 2; i++) {\r\n                x1 = x2ofLine;\r\n                y1 = ((i == 0) || (i == 2)) ? (y2OfLine - 4) : (y2OfLine + 4);\r\n                x2 = (i == 2) ? (x2ofLine) : (x2ofLine + 4);\r\n                y2 = (i == 2) ? (y2OfLine + 4) : y2OfLine;\r\n\r\n                this.context.beginPath();\r\n                this.context.moveTo(x1, y1);\r\n                this.context.lineTo(x2, y2);\r\n                this.context.lineWidth = this.styles.lineWidth;\r\n                this.context.strokeStyle = this.styles.fillColor;\r\n                this.context.stroke();\r\n            }\r\n        }\r\n        else {\r\n            for (i = 0; i <= 2; i++) {\r\n                x1 = x2ofLine;\r\n                y1 = ((i == 0) || (i == 2)) ? (y2OfLine + 4) : (y2OfLine - 4);\r\n                x2 = (i == 2) ? (x2ofLine) : (x2ofLine - 4);\r\n                y2 = (i == 2) ? (y2OfLine - 4) : y2OfLine;\r\n\r\n                this.context.beginPath();\r\n                this.context.moveTo(x1, y1);\r\n                this.context.lineTo(x2, y2);\r\n                this.context.lineWidth = 2;\r\n                this.context.strokeStyle = this.styles.fillColor;\r\n                this.context.stroke();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    //Rectangular Area\r\n    drawRectangleThinLine(xAxis: number, yAxis: number, width: number, height: number) {\r\n        this.context.beginPath();\r\n        this.context.fillStyle = this.styles.fillColor;\r\n        this.context.fill();\r\n        this.context.fillRect(xAxis, yAxis, width, height);\r\n        this.context.lineWidth = this.styles.lineWidth;\r\n        this.context.strokeStyle = this.styles.lineColor;\r\n        this.context.strokeRect(xAxis, yAxis, width, height);\r\n    }\r\n\r\n    drawRectangleBorderLine(xAxis: number, yAxis: number, width: number, height: number) {\r\n        this.context.beginPath();\r\n        this.context.fillStyle = this.styles.fillColor;\r\n        this.context.fill();\r\n        this.context.fillRect(xAxis, yAxis, width, height);\r\n        this.context.lineWidth = this.styles.borderWidth;\r\n        this.context.strokeStyle = this.styles.borderColor;\r\n        this.context.strokeRect(xAxis, yAxis, width, height);\r\n    }\r\n\r\n    drawPentatonic(pentaWarningError: PentaWarningError, errors: Node, warnings: Node, success: Node) {\r\n        console.log(\"trying to draw: \", pentaWarningError);\r\n        console.log(\"errors: \" + pentaWarningError.errors);\r\n        console.log(\"Warnings: \" + pentaWarningError.warnings);\r\n        errors.textContent = pentaWarningError.errors.join(\"<br>\");\r\n        warnings.textContent = pentaWarningError.warnings.join(\"<br>\");\r\n        if (pentaWarningError.errors.length == 0 && pentaWarningError.warnings.length == 0) {\r\n            success.textContent = \"Success!\";\r\n        } else {\r\n            success.textContent = \"\";\r\n        }\r\n        let pentatonic = pentaWarningError.penta;\r\n        this.cellSize = (this.totalWidth - 2 * this.offsetX) / pentatonic.columns;\r\n        let heightCanvas = this.totalWidth * pentatonic.lines / pentatonic.columns;\r\n        this.canvasElement.setAttribute(\"height\", heightCanvas.toString());\r\n\r\n        this.drawEachCell(pentatonic);\r\n        // TODO draw penta\r\n        this.drawVerticalSeparations(pentatonic);\r\n        this.drawHorizontalSeparations(pentatonic);\r\n        this.drawAllClues(pentatonic);\r\n    }\r\n\r\n    private drawEachCell(pentatonic: Pentatonic) {\r\n        this.drawRectangleBorderLine(this.offsetX, this.offsetY, pentatonic.columns * this.cellSize, pentatonic.lines * this.cellSize);\r\n        for (let i = 0; i < pentatonic.lines; i++) {\r\n            for (let j = 0; j < pentatonic.columns; j++) {\r\n                this.drawRectangleThinLine(this.offsetX + j * this.cellSize, this.offsetY + i * this.cellSize, this.cellSize, this.cellSize);\r\n            }\r\n        }\r\n    }\r\n\r\n    private drawVerticalSeparations(pentatonic: Pentatonic) {\r\n        for (let i = 0; i < pentatonic.lines; i++) {\r\n            for (let j = 1; j < pentatonic.columns; j++) {\r\n                if (pentatonic.cells[i][j].area.id != pentatonic.cells[i][j - 1].area.id) {\r\n                    console.log(\"(\" + i + \",\" + (j - 1) + \") et (\" + i + \",\" + j + \") ne sont PAS dans la meme zone \");\r\n                    this.drawLine(this.offsetX + j * this.cellSize,\r\n                        this.offsetY + i * this.cellSize,\r\n                        this.offsetX + j * this.cellSize,\r\n                        this.offsetY + (i + 1) * this.cellSize);\r\n                }else {\r\n                    console.log(\"(\" + i + \",\" + (j - 1) + \") et (\" + i + \",\" + j + \") SONT dans la meme zone \");\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    private drawHorizontalSeparations(pentatonic: Pentatonic) {\r\n        for (let j = 0; j < pentatonic.columns; j++) {\r\n            for (let i = 1; i < pentatonic.lines; i++) {\r\n                if (pentatonic.cells[i][j].area.id != pentatonic.cells[i - 1][j].area.id) {\r\n                    this.drawLine(this.offsetX + j * this.cellSize,\r\n                        this.offsetY + i * this.cellSize,\r\n                        this.offsetX + (j + 1) * this.cellSize,\r\n                        this.offsetY + i * this.cellSize);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private drawAllClues(pentatonic: Pentatonic) {\r\n        pentatonic.cellArray().filter(cell => cell.values.length == 1 || pentatonic.sistersHave(cell.position))\r\n            .forEach(c => {\r\n                if (c.values.length == 1) {\r\n                    this.writeText(c.values[0], this.offsetX + c.position.j * this.cellSize + this.cellSize / 3,\r\n                        this.offsetY + c.position.i * this.cellSize + this.cellSize * 3 / 5);\r\n                }\r\n                if (pentatonic.sistersHave(c.position)) {\r\n                    this.writeText(pentatonic.getSisterSymbol(c.position),\r\n                        this.offsetX + c.position.j * this.cellSize + 0.2 * this.cellSize,\r\n                        this.offsetY + c.position.i * this.cellSize + 0.2 * this.cellSize, this.styles.font.Default);\r\n                }\r\n            });\r\n\r\n    }\r\n}\r\n","export class Styles {\r\n    widthCell: number;\r\n    heightCell: number;\r\n    background: string;\r\n    borderColor: string;\r\n    lineColor: string;\r\n    lineWidth: number;\r\n    borderWidth: number;\r\n    fillColor: string;\r\n    textColor: string;\r\n    font: { Default: string, Heading: string };\r\n\r\n    constructor(width: number, height: number) {\r\n        this.widthCell = width;\r\n        this.heightCell = height;\r\n        this.background = \"#9a2424\";\r\n        this.borderColor = \"#343653\";\r\n        this.lineWidth = 2;\r\n        this.borderWidth = 10;\r\n        this.fillColor = \"#fff0e6\";\r\n        this.textColor = \"#d62061\";\r\n        this.lineColor = \"#6dc2ff\";\r\n        this.font = {Default: \"12px 'Segoe UI',Arial,sans-serif\", Heading: \"34px 'Segoe UI',Arial,sans-serif\"};\r\n    }\r\n\r\n}","import {PentaWarningError} from \"./PentaWarningError\";\r\nimport {Area} from \"./area\";\r\nimport {Cell} from \"./Cell\";\r\nimport {Position} from \"./position\";\r\nimport {Diff} from \"./diff\";\r\nimport {Sister} from \"./sister\";\r\n\r\nexport class Serializer {\r\n    private static minLines: number = 2;\r\n\r\n    static serialize(textContent: string): PentaWarningError {\r\n        let pentaWarningError = new PentaWarningError();\r\n        let penta = pentaWarningError.penta;\r\n        console.log(\"We want to serialize: \" + textContent);\r\n        let lines = textContent.split(/[\\r\\n]+/);\r\n        if (lines.length < this.minLines) {\r\n            pentaWarningError.addError(\"Text for penta should contain: \\n\" +\r\n                \"author, nbLine nbCols, penta\");\r\n            return pentaWarningError;\r\n        }\r\n        penta.author = lines[0].trim();\r\n        console.log(\"Author is :\" + penta.author);\r\n\r\n        let lineCol = lines[1].trim().split(\" \").map(s => Number(s));\r\n        console.log(\"We have lineCol: \" + lineCol);\r\n        if (lineCol.length != 2) {\r\n            pentaWarningError.addError(\r\n                \"2nd line should provide nb of lines and columns like this \\\"\\<nbLines> \\<nbCols>\\\"\");\r\n            return pentaWarningError;\r\n        }\r\n        penta.lines = lineCol[0];\r\n        penta.columns = lineCol[1];\r\n        if (lines.length < this.minLines + penta.lines) {\r\n            pentaWarningError.addError(\"You didn't provide a pentatonic with \" + penta.lines + \" lines\");\r\n            return pentaWarningError;\r\n        }\r\n        this.fillAreas(pentaWarningError, lines, 2);\r\n        this.fillEnonce(pentaWarningError, lines, 2 + penta.lines);\r\n\r\n        return pentaWarningError;\r\n    }\r\n\r\n    static fillAreas(penta: PentaWarningError, lines: Array<string>, startLine: number) {\r\n        let mapAreas: { [key: string]: Area } = {};\r\n        let line: string;\r\n        for (let index = startLine; index < startLine + penta.penta.lines; index++) {\r\n            let i = index - startLine;\r\n            line = lines[index].trim();\r\n            if (line == \"\" || line == null) {\r\n                continue;\r\n            }\r\n            let lineCells = [];\r\n            if(line.length != penta.penta.columns) {\r\n                penta.addWarning(\"Check the number of cells for this line: \"+line);\r\n            }\r\n\r\n            for (let j = 0; j < penta.penta.columns; j++) {\r\n                if(line.length <= j) {\r\n                    penta.addError(\"Please check the number of columns you provided fo each line of the pentatonic \" +\r\n                        \"(index\" + j + \">=\" + penta.penta.columns + \": for the line \" + line + \")\");\r\n                    break;\r\n                }\r\n                if (j > penta.penta.columns) {\r\n                    penta.addError(\"Please check the number of columns you provided fo each line of the pentatonic \" +\r\n                        \"(\" + j + \">\" + penta.penta.columns + \")\");\r\n                    break;\r\n                }\r\n                let cell = new Cell(i, j);\r\n                let area = mapAreas[line[j]];\r\n                if (area == null) {\r\n                    area = new Area(line[j]);\r\n                    mapAreas[line[j]] = area;\r\n                }\r\n                cell.area = area;\r\n                lineCells.push(cell);\r\n            }\r\n            penta.penta.cells.push(lineCells);\r\n        }\r\n        penta.penta.fillAreaSize();\r\n    }\r\n\r\n    static fillEnonce(penta: PentaWarningError, lines: Array<string>, startLine: number) {\r\n        let line: string;\r\n        let countArray: number = lines.length;\r\n        let toSister: { [c: string]: Array<Position> } = {};\r\n        for (let i = startLine; i < countArray; i++) {\r\n            line = lines[i].trim();\r\n            if (line == \"\") continue;\r\n\r\n            // we got a number or a constraint\r\n            if (line.startsWith(\"-\")) {\r\n                // DiffOne\r\n                let lineCols = line.substr(1).split(\",\").map(n => +n);\r\n                if (lineCols.length != 4) {\r\n                    penta.addError(\"For a diffOne, you should have 4 numbers: \\\"-i1,j1,i2,j2\\\" for example. But you typed \\\"\" + line + \"\\\"\");\r\n                    continue;\r\n                }\r\n                let pos1 = new Position(lineCols[0], lineCols[1]);\r\n                let pos2 = new Position(lineCols[2], lineCols[3]);\r\n                if (pos1 == pos2) {\r\n                    penta.addError(\"Difference one should concern 2 different positions. But you typed \\\"\" + line + \"\\\"\");\r\n                    continue;\r\n                }\r\n                if (!pos1.isNear(pos2)) {\r\n                    penta.addWarning(\"Difference one should concert 2 near positions. But you typed \\\"\" + line + \"\\\"\");\r\n                }\r\n                penta.penta.diffOnes.push(new Diff(pos1, pos2));\r\n                continue;\r\n            }\r\n            // we got a\r\n            let split = line.split(\",\");\r\n            if (split.length != 3) {\r\n                penta.addError(\"Bad input, should be n,i,j, but was \" + line);\r\n                continue;\r\n            }\r\n            if (split[0].length != 1) {\r\n                penta.addError(\"Bad input: \" + split[0] + \" in line \" + line);\r\n                continue;\r\n            }\r\n            let nb = split[0];\r\n            let nLine = +split[1];\r\n            let nCol = +split[2];\r\n            let cell = penta.penta.cells[nLine][nCol];\r\n            let n: number = +nb;\r\n            if (!Number.isNaN(n)) {\r\n                console.log(\"nb is \" + nb);\r\n                let n: number = +nb;\r\n                console.log(\"Success converting nb to number: \" + n);\r\n                cell.values.push(nb);\r\n            } else {\r\n                if (toSister[nb] == null) {\r\n                    toSister[nb] = [new Position(nLine, nCol)];\r\n                } else {\r\n                    toSister[nb].push(new Position(nLine, nCol));\r\n                }\r\n            }\r\n        }\r\n        for (let keyChar in toSister) {\r\n            penta.penta.sisters.push(new Sister(keyChar, keyChar, toSister[keyChar]));\r\n        }\r\n    }\r\n\r\n}","import {Pentatonic} from \"./Pentatonic\";\r\n\r\nexport class PentaWarningError {\r\n    penta: Pentatonic;\r\n    warnings: Array<string>;\r\n    errors: Array<string>;\r\n\r\n    constructor() {\r\n        this.penta = new Pentatonic();\r\n        this.warnings = [];\r\n        this.errors = [];\r\n    }\r\n\r\n    public addWarning(warn: string) {\r\n        this.warnings.push(warn);\r\n    }\r\n\r\n    public addError(error: string) {\r\n        this.errors.push(error);\r\n    }\r\n\r\n}","import {Cell} from \"./Cell\";\r\nimport {Area} from \"./area\";\r\nimport {Diff} from \"./diff\";\r\nimport {Sister} from \"./sister\";\r\nimport {Position} from \"./position\";\r\n\r\nexport class Pentatonic {\r\n    id: number = 0;\r\n    version: number = 0;\r\n    areas: string = \"\";\r\n    difficulty: number = 0;\r\n    author: string = \"\";\r\n    filename: string = \"\";\r\n    lines: number;\r\n    columns: number;\r\n    cells: Array<Array<Cell>>;\r\n    diffOnes: Array<Diff>;\r\n    sisters: Array<Sister>;\r\n\r\n    constructor(lines: number = 0, columns: number = 0) {\r\n        this.lines = lines;\r\n        this.columns = columns;\r\n        this.cells = [];\r\n        this.diffOnes = [];\r\n        this.sisters = [];\r\n    }\r\n\r\n    fillAreaSize() {\r\n        let allAreas = this.getAllAreas();\r\n        allAreas.forEach(area => {\r\n            let areaCells: Set<Cell> = this.getAreaCells(area);\r\n            let size = areaCells.size;\r\n            areaCells.forEach(c => c.area.size = size);\r\n        })\r\n    }\r\n\r\n    public cellArray(): Array<Cell> {\r\n        let res: Array<Cell> = [];\r\n        for (let row of this.cells) {\r\n            for (let cell of row) {\r\n                res.push(cell);\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n\r\n    private getAllAreas(): Set<Area> {\r\n        let set: Set<Area> = new Set();\r\n        let merge: Array<Cell> = this.cellArray();\r\n\r\n        merge.forEach((c: Cell) => {\r\n            set.add(c.area)\r\n        });\r\n        return set;\r\n    }\r\n\r\n    private getAreaCells(area: Area): Set<Cell> {\r\n        return new Set(this.cellArray().filter(c => c.area.id == area.id));\r\n\r\n    }\r\n\r\n    public diffOnesHave(position: Position): boolean {\r\n        for (let diff of this.diffOnes) {\r\n            if (diff.position1 == position || diff.position2 == position) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public sistersHave(position: Position): boolean {\r\n        for (let sis of this.sisters) {\r\n            let index = sis.positions.indexOf(position);\r\n            console.log(\"indexOf = \" + index);\r\n            if (index != -1) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getSisterSymbol(position: Position): string {\r\n        for (let sis of this.sisters) {\r\n            if (sis.positions.indexOf(position) > -1) return sis.symbol;\r\n        }\r\n        return \"\";\r\n    }\r\n}","export class Area {\r\n    id: string;\r\n    size: number;\r\n\r\n    constructor(id: string = \"0\", size: number = 0) {\r\n        this.id = id;\r\n        this.size = size;\r\n    }\r\n}","import {Area} from \"./area\";\r\nimport {Position} from \"./position\";\r\n\r\nexport class Cell {\r\n    position: Position;\r\n    area: Area;\r\n    values: Array<string>;\r\n\r\n    constructor(i: number, j: number) {\r\n        this.position = new Position(i, j);\r\n        this.values = [];\r\n    }\r\n}","import {Position} from \"./position\";\r\n\r\nexport class Diff {\r\n    position1: Position;\r\n    position2: Position;\r\n\r\n    constructor(pos1: Position, pos2: Position) {\r\n        this.position1 = pos1;\r\n        this.position2 = pos2;\r\n    }\r\n}","import {Position} from \"./position\";\r\n\r\nexport class Sister {\r\n    id: string;\r\n    symbol: string;\r\n    positions: Array<Position>;\r\n\r\n    constructor(id: string, symbol: string, positions: Array<Position>) {\r\n        this.id = id;\r\n        this.symbol = symbol;\r\n        this.positions = positions;\r\n    }\r\n}"],"sourceRoot":""}