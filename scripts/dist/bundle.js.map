{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/relativePosition.ts","webpack:///./src/position.ts","webpack:///./src/doDraw.ts","webpack:///./src/playground.ts","webpack:///./src/Styles.ts","webpack:///./src/serializer.ts","webpack:///./src/PentaWarningError.ts","webpack:///./src/Pentatonic.ts","webpack:///./src/area.ts","webpack:///./src/Cell.ts","webpack:///./src/diff.ts","webpack:///./src/sister.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","RelativePosition","relativePosition_1","Position","[object Object]","j","this","pos","Math","abs","position","isNear","ILLEGAL","bottom","right","TOP_LEFT","TOP","TOP_RIGHT","LEFT","RIGHT","BOTTOM_LEFT","BOTTOM","BOTTOM_RIGHT","playground_1","Styles_1","serializer_1","canvas","penaltyArea","ceil","window","onload","textEditPenta","document","getElementById","buttonConvert","errors","warnings","success","canvasElement","context2D","getContext","ground","Playground","Styles","onclick","penta","Serializer","serialize","drawPentatonic","context","styles","offsetX","offsetY","totalWidth","width","style","border","borderWidth","borderColor","margin","background","console","log","xAxis","yAxis","radius","beginPath","arc","PI","fillStyle","fillColor","fill","lineWidth","strokeStyle","stroke","text","font","Heading","color","textColor","fillText","x1","y1","x2","y2","moveTo","lineTo","diffWidth","diffColor","isReverseArrow","x2ofLine","y2OfLine","height","fillRect","lineColor","strokeRect","pentaWarningError","textContent","join","length","pentatonic","cellSize","columns","heightCanvas","lines","setAttribute","toString","drawEachCell","drawVerticalSeparations","drawHorizontalSeparations","drawAllClues","drawRectangleBorderLine","drawRectangleThinLine","cells","area","id","drawLine","cellArray","filter","cell","values","sistersHave","forEach","writeText","getSisterSymbol","Default","drawDiffOnes","xArray","yArray","diffOnes","diffOne","k","push","position1","xStart","xEnd","yStart","yEnd","getPositionRelativeToMe","position2","widthCell","heightCell","PentaWarningError_1","area_1","Cell_1","position_1","diff_1","sister_1","PentaWarningError","split","minLines","addError","author","trim","lineCol","map","Number","fillAreas","fillEnonce","startLine","line","mapAreas","index","lineCells","addWarning","Cell","Area","fillAreaSize","countArray","toSister","startsWith","lineCols","substr","pos1","pos2","Diff","nb","nLine","nCol","isNaN","keyChar","sisters","Sister","Pentatonic_1","Pentatonic","warn","error","version","areas","difficulty","filename","getAllAreas","areaCells","getAreaCells","size","res","row","set","Set","add","diff","sis","positions","indexOf","symbol"],"mappings":"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","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","export enum RelativePosition {\n    TOP, TOP_RIGHT, RIGHT, BOTTOM_RIGHT, BOTTOM, BOTTOM_LEFT, LEFT, TOP_LEFT, ILLEGAL\n}","import {RelativePosition} from \"./relativePosition\";\n\nexport class Position {\n\n    i: number;\n    j: number;\n\n    constructor(i: number, j: number) {\n        this.i = i;\n        this.j = j;\n    }\n\n    isNear(pos: Position): boolean {\n        if (Math.abs(pos.i - this.i) > 1 || Math.abs(pos.j - this.j) > 1) {\n            return false;\n        }\n        if (pos.i == this.i && pos.j == this.j) {\n            return false;\n        }\n        return true;\n    }\n\n    getPositionRelativeToMe(position: Position): RelativePosition {\n        if (!position.isNear(this)) {\n            return RelativePosition.ILLEGAL;\n        }\n        /**\n         * bottom == 1 => bottom\n         * bottom == 0 => middle\n         * bottom == -1 => top\n         */\n        let bottom = position.i - this.i;\n        /**\n         * right == 1 => right\n         * right == 0 => middle\n         * right == -1 => left\n         */\n        let right = position.j - this.j;\n        if (Math.abs(bottom) > 1 || Math.abs(right) > 1) return RelativePosition.ILLEGAL;\n\n        if (bottom < 0 && right < 0) return RelativePosition.TOP_LEFT;\n        if (bottom < 0 && right == 0) return RelativePosition.TOP;\n        if (bottom < 0 && right > 0) return RelativePosition.TOP_RIGHT;\n\n        if (bottom == 0 && right < 0) return RelativePosition.LEFT;\n        if (bottom == 0 && right > 0) return RelativePosition.RIGHT;\n\n        if (bottom > 0 && right < 0) return RelativePosition.BOTTOM_LEFT;\n        if (bottom > 0 && right == 0) return RelativePosition.BOTTOM;\n        if (bottom > 0 && right > 0) return RelativePosition.BOTTOM_RIGHT;\n        return RelativePosition.ILLEGAL;\n    }\n\n}\n\n","import {Playground} from \"./playground\";\r\nimport {Styles} from \"./Styles\";\r\nimport {PentaWarningError} from \"./PentaWarningError\";\r\nimport {Serializer} from \"./serializer\";\r\n\r\nlet _height = 500;\r\nlet _width = 1000;\r\nlet canvas = {\r\n    width: _width,\r\n    height: _height,\r\n    halfWidth: _width / 2,\r\n    lineWidth: 2,\r\n    background: {Default: \"#08a107\", Orange: \"#f60\", Green: \"#f80\"},\r\n    borderColor: {White: \"#fff\", Green: \"#f80\"},\r\n    colorMap: {Orange: \"#f60\", Green: \"#f80\"}\r\n};\r\nlet common = {\r\n    fillColor: {Default: \"#0d5f0c\", Green: \"green\", Red: \"red\", Orange: \"#f60\", White: \"#fff\"},\r\n    borderColor: \"#fff\",\r\n    fontFamily: \" 'Segoe UI',Arial,sans-serif\",\r\n    font: {Default: \"12px 'Segoe UI',Arial,sans-serif\", Heading: \"14px 'Segoe UI',Arial,sans-serif\"},\r\n    lineWidth: {Pixel1: 1, Pixel2: 2, Pixel3: 3, Pixel4: 4, Pixel5: 5},\r\n    arrowLength: {Default: 70, Pixel50: 50}\r\n};\r\n\r\nlet penaltyArea = {\r\n    height: Math.ceil((canvas.height * 70) / 100),\r\n    width: Math.ceil((canvas.width * 12) / 100),\r\n    yPosition: Math.ceil(((canvas.height * 30) / 100) / 2),\r\n    xPosition: {TeamA: 0, TeamB: canvas.width - Math.ceil((canvas.width * 12) / 100)}\r\n};\r\nlet goalArea = {\r\n    height: Math.ceil((penaltyArea.height * 60) / 100),\r\n    width: Math.ceil(penaltyArea.width / 2),\r\n    yPositon: (canvas.height - penaltyArea.height),\r\n    xPosition: {TeamA: 0, TeamB: Math.ceil(canvas.width - (penaltyArea.width / 2))}\r\n};\r\nlet penaltyArc = {\r\n    xPosition: {\r\n        TeamA: penaltyArea.width - goalArea.width / 4,\r\n        TeamB: canvas.width - penaltyArea.width + goalArea.width / 4\r\n    },\r\n    yPosition: canvas.height / 2,\r\n    radius: goalArea.height / 3\r\n};\r\n\r\nlet groundCorner = {\r\n    radius: Math.ceil((canvas.height * 2) / 100)\r\n};\r\nlet captionText = \"\";\r\n\r\nwindow.onload = function () {\r\n    let textEditPenta = document.getElementById(\"text-penta\") as HTMLTextAreaElement;\r\n    let buttonConvert = document.getElementById(\"btn-convert\") as HTMLButtonElement;\r\n    let errors: Node = document.getElementById(\"errors\");\r\n    let warnings: Node = document.getElementById(\"warnings\");\r\n    let success: Node = document.getElementById(\"success\");\r\n    let canvasElement = document.getElementById(\"penta-representation\") as HTMLCanvasElement;\r\n    let context2D: CanvasRenderingContext2D = canvasElement.getContext(\"2d\");\r\n\r\n    let ground = new Playground(canvasElement, context2D, new Styles(20, 20));\r\n    buttonConvert.onclick = () => {\r\n        let penta: PentaWarningError = Serializer.serialize(textEditPenta.value);\r\n        ground.drawPentatonic(penta, errors, warnings, success);\r\n    };\r\n};","import {Styles} from \"./Styles\";\nimport {PentaWarningError} from \"./PentaWarningError\";\nimport {Pentatonic} from \"./Pentatonic\";\nimport {RelativePosition} from \"./relativePosition\";\n\nexport class Playground {\n    private canvasElement: HTMLCanvasElement;\n    private context: CanvasRenderingContext2D;\n\n    private styles: Styles;\n\n    private cellSize: number;\n    private offsetX = 30;\n    private offsetY = 30;\n    private totalWidth: number;\n\n    constructor(canvasElement: HTMLCanvasElement, context: CanvasRenderingContext2D, styles: Styles) {\n        this.canvasElement = canvasElement;\n        this.totalWidth = this.canvasElement.width;\n\n        this.context = context;\n        this.styles = styles;\n\n        this.canvasElement.style.border = this.styles.borderWidth + \"px solid \" + this.styles.borderColor;\n        this.canvasElement.style.margin = \"auto 25px\";\n        this.canvasElement.style.background = this.styles.background;\n\n    }\n\n    setGroundStyles(): void {\n        console.log(\"Width is \" + this.totalWidth);\n        // this.canvasElement.setAttribute(\"width\", \"500\");\n        // this.canvasElement.setAttribute(\"height\", \"500\");\n        this.canvasElement.style.border = this.styles.borderWidth + \"px solid \" + this.styles.borderColor;\n        this.canvasElement.style.margin = \"auto 25px\";\n        this.canvasElement.style.background = this.styles.background;\n    }\n\n    drawCenterSpot(xAxis: number, yAxis: number, radius: number) {\n        this.context.beginPath();\n        this.context.arc(xAxis, yAxis, radius, 0, 2 * Math.PI);\n        this.context.fillStyle = this.styles.fillColor;\n        this.context.fill();\n        this.context.lineWidth = this.styles.lineWidth;\n        this.context.strokeStyle = this.styles.borderColor;\n        this.context.stroke();\n    }\n\n    drawCorner(xAxis: number, yAxis: number) {\n        this.context.beginPath();\n        this.context.arc(xAxis, yAxis, 10, 0, 2 * Math.PI);\n        this.context.fillStyle = this.styles.fillColor;\n        this.context.fill();\n        this.context.lineWidth = this.styles.lineWidth;\n        this.context.strokeStyle = this.styles.borderColor;\n        this.context.stroke();\n    }\n\n    writeText(text: string, xAxis: number, yAxis: number, font: string = this.styles.font.Heading,\n              color: string = this.styles.textColor) {\n        this.context.font = font;\n        this.context.fillStyle = color;\n        this.context.fillText(text, xAxis, yAxis);\n\n    }\n\n    drawLine(x1: number, y1: number, x2: number, y2: number) {\n        this.context.beginPath();\n        this.context.lineWidth = this.styles.borderWidth;\n        this.context.fillStyle = this.styles.borderColor;\n        this.context.strokeStyle = this.styles.borderColor;\n        this.context.moveTo(x1, y1);\n        this.context.lineTo(x2, y2);\n        this.context.stroke();\n        this.context.fill();\n    }\n\n    drawDiffLine(x1: number,y1: number, x2: number, y2: number) {\n        this.context.beginPath();\n        this.context.lineWidth = this.styles.diffWidth;\n        this.context.fillStyle = this.styles.diffColor;\n        this.context.strokeStyle = this.styles.diffColor;\n        this.context.moveTo(x1, y1);\n        this.context.lineTo(x2, y2);\n        this.context.stroke();\n        this.context.fill();\n    }\n\n\n    drawArrowLine(x1: number, y1: number, x2: number, y2: number, isReverseArrow = false) {\n        let i;\n        this.context.beginPath();\n        this.context.moveTo(x1, y1);\n        this.context.lineTo(x2, y2);\n        this.context.strokeStyle = this.styles.fillColor;\n        this.context.lineWidth = this.styles.lineWidth;\n        this.context.stroke();\n\n        let x2ofLine = x2;\n        let y2OfLine = y2;\n\n        if (!isReverseArrow) {\n            for (i = 0; i <= 2; i++) {\n                x1 = x2ofLine;\n                y1 = ((i == 0) || (i == 2)) ? (y2OfLine - 4) : (y2OfLine + 4);\n                x2 = (i == 2) ? (x2ofLine) : (x2ofLine + 4);\n                y2 = (i == 2) ? (y2OfLine + 4) : y2OfLine;\n\n                this.context.beginPath();\n                this.context.moveTo(x1, y1);\n                this.context.lineTo(x2, y2);\n                this.context.lineWidth = this.styles.lineWidth;\n                this.context.strokeStyle = this.styles.fillColor;\n                this.context.stroke();\n            }\n        }\n        else {\n            for (i = 0; i <= 2; i++) {\n                x1 = x2ofLine;\n                y1 = ((i == 0) || (i == 2)) ? (y2OfLine + 4) : (y2OfLine - 4);\n                x2 = (i == 2) ? (x2ofLine) : (x2ofLine - 4);\n                y2 = (i == 2) ? (y2OfLine - 4) : y2OfLine;\n\n                this.context.beginPath();\n                this.context.moveTo(x1, y1);\n                this.context.lineTo(x2, y2);\n                this.context.lineWidth = 2;\n                this.context.strokeStyle = this.styles.fillColor;\n                this.context.stroke();\n            }\n        }\n\n    }\n\n    //Rectangular Area\n    drawRectangleThinLine(xAxis: number, yAxis: number, width: number, height: number) {\n        this.context.beginPath();\n        this.context.fillStyle = this.styles.fillColor;\n        this.context.fill();\n        this.context.fillRect(xAxis, yAxis, width, height);\n        this.context.lineWidth = this.styles.lineWidth;\n        this.context.strokeStyle = this.styles.lineColor;\n        this.context.strokeRect(xAxis, yAxis, width, height);\n    }\n\n    drawRectangleBorderLine(xAxis: number, yAxis: number, width: number, height: number) {\n        this.context.beginPath();\n        this.context.fillStyle = this.styles.fillColor;\n        this.context.fill();\n        this.context.fillRect(xAxis, yAxis, width, height);\n        this.context.lineWidth = this.styles.borderWidth;\n        this.context.strokeStyle = this.styles.borderColor;\n        this.context.strokeRect(xAxis, yAxis, width, height);\n    }\n\n    drawPentatonic(pentaWarningError: PentaWarningError, errors: Node, warnings: Node, success: Node) {\n        console.log(\"trying to draw: \", pentaWarningError);\n        console.log(\"errors: \" + pentaWarningError.errors);\n        console.log(\"Warnings: \" + pentaWarningError.warnings);\n        errors.textContent = pentaWarningError.errors.join(\"<br>\");\n        warnings.textContent = pentaWarningError.warnings.join(\"<br>\");\n        if (pentaWarningError.errors.length == 0 && pentaWarningError.warnings.length == 0) {\n            success.textContent = \"Success!\";\n        } else {\n            success.textContent = \"\";\n        }\n        let pentatonic = pentaWarningError.penta;\n        this.cellSize = (this.totalWidth - 2 * this.offsetX) / pentatonic.columns;\n        let heightCanvas = this.totalWidth * pentatonic.lines / pentatonic.columns;\n        this.canvasElement.setAttribute(\"height\", heightCanvas.toString());\n\n        this.drawEachCell(pentatonic);\n        // TODO draw penta\n        this.drawVerticalSeparations(pentatonic);\n        this.drawHorizontalSeparations(pentatonic);\n        this.drawAllClues(pentatonic);\n    }\n\n    private drawEachCell(pentatonic: Pentatonic) {\n        this.drawRectangleBorderLine(this.offsetX, this.offsetY, pentatonic.columns * this.cellSize, pentatonic.lines * this.cellSize);\n        for (let i = 0; i < pentatonic.lines; i++) {\n            for (let j = 0; j < pentatonic.columns; j++) {\n                this.drawRectangleThinLine(this.offsetX + j * this.cellSize, this.offsetY + i * this.cellSize, this.cellSize, this.cellSize);\n            }\n        }\n    }\n\n    private drawVerticalSeparations(pentatonic: Pentatonic) {\n        for (let i = 0; i < pentatonic.lines; i++) {\n            for (let j = 1; j < pentatonic.columns; j++) {\n                if (pentatonic.cells[i][j].area.id != pentatonic.cells[i][j - 1].area.id) {\n                    console.log(\"(\" + i + \",\" + (j - 1) + \") et (\" + i + \",\" + j + \") ne sont PAS dans la meme zone \");\n                    this.drawLine(this.offsetX + j * this.cellSize,\n                        this.offsetY + i * this.cellSize,\n                        this.offsetX + j * this.cellSize,\n                        this.offsetY + (i + 1) * this.cellSize);\n                }else {\n                    console.log(\"(\" + i + \",\" + (j - 1) + \") et (\" + i + \",\" + j + \") SONT dans la meme zone \");\n                }\n            }\n\n        }\n    }\n\n    private drawHorizontalSeparations(pentatonic: Pentatonic) {\n        for (let j = 0; j < pentatonic.columns; j++) {\n            for (let i = 1; i < pentatonic.lines; i++) {\n                if (pentatonic.cells[i][j].area.id != pentatonic.cells[i - 1][j].area.id) {\n                    this.drawLine(this.offsetX + j * this.cellSize,\n                        this.offsetY + i * this.cellSize,\n                        this.offsetX + (j + 1) * this.cellSize,\n                        this.offsetY + i * this.cellSize);\n                }\n            }\n        }\n    }\n\n    private drawAllClues(pentatonic: Pentatonic) {\n        pentatonic.cellArray().filter(cell => cell.values.length == 1 || pentatonic.sistersHave(cell.position))\n            .forEach(c => {\n                if (c.values.length == 1) {\n                    this.writeText(c.values[0], this.offsetX + c.position.j * this.cellSize + this.cellSize / 3,\n                        this.offsetY + c.position.i * this.cellSize + this.cellSize * 3 / 5);\n                }\n                if (pentatonic.sistersHave(c.position)) {\n                    this.writeText(pentatonic.getSisterSymbol(c.position),\n                        this.offsetX + c.position.j * this.cellSize + 0.2 * this.cellSize,\n                        this.offsetY + c.position.i * this.cellSize + 0.2 * this.cellSize, this.styles.font.Default);\n                }\n            });\n        this.drawDiffOnes(pentatonic);\n\n    }\n\n    private drawDiffOnes(pentatonic: Pentatonic) {\n        let xArray: number[] = [];\n        let yArray: number[] = [];\n        pentatonic.diffOnes.forEach(diffOne => {\n            for (let k = 0; k < 5; k++) {\n                xArray.push(this.offsetX + diffOne.position1.j * this.cellSize + (this.cellSize * k) / 4);\n                yArray.push(this.offsetY + diffOne.position1.i * this.cellSize + (this.cellSize * k) / 4);\n            }\n            let xStart, xEnd, yStart, yEnd: number;\n            switch (diffOne.position1.getPositionRelativeToMe(diffOne.position2)) {\n                case RelativePosition.TOP:\n                    xStart = xArray[2];\n                    xEnd = xArray[2];\n                    yStart = 2 * yArray[0] - yArray[1];\n                    yEnd = yArray[1];\n                    break;\n                case RelativePosition.RIGHT:\n                    xStart = 2 * xArray[4] - xArray[3];\n                    xEnd = xArray[3];\n                    yStart = yArray[2];\n                    yEnd = yArray[2];\n                    break;\n                case RelativePosition.BOTTOM:\n                    xStart = xArray[2];\n                    xEnd = xArray[2];\n                    yStart = 2 * yArray[4] - yArray[3];\n                    yEnd = yArray[3];\n                    break;\n                case  RelativePosition.LEFT:\n                    xStart = 2 * xArray[0] - xArray[1];\n                    xEnd = xArray[1];\n                    yStart = yArray[2];\n                    yEnd = yArray[2];\n                    break;\n                case RelativePosition.TOP_RIGHT:\n                    xStart = 2 * xArray[4] - xArray[3];\n                    xEnd = xArray[3];\n                    yStart = 2 * yArray[0] - yArray[1];\n                    yEnd = yArray[1];\n                    break;\n                case RelativePosition.BOTTOM_RIGHT:\n                    xStart = 2 * xArray[4] - xArray[3];\n                    xEnd = xArray[3];\n                    yStart = 2 * yArray[4] - yArray[3];\n                    yEnd = yArray[3];\n                    break;\n                case RelativePosition.BOTTOM_LEFT:\n                    xStart = 2 * xArray[0] - xArray[1];\n                    xEnd = xArray[1];\n                    yStart = 2 * yArray[4] - yArray[3];\n                    yEnd = yArray[3];\n                    break;\n                case RelativePosition.TOP_LEFT:\n                    xStart = 2 * xArray[0] - xArray[1];\n                    xEnd = xArray[1];\n                    yStart = 2 * yArray[0] - yArray[1];\n                    yEnd = yArray[1];\n                    break;\n                case RelativePosition.ILLEGAL:\n                    console.log(\"Illegal position\");\n                    return;\n            }\n            this.drawLine(xStart, yStart, xEnd, yEnd);\n        })\n    }\n}\n","export class Styles {\n    widthCell: number;\n    heightCell: number;\n    background: string;\n    borderColor: string;\n    lineColor: string;\n    lineWidth: number;\n    borderWidth: number;\n    fillColor: string;\n    textColor: string;\n    font: { Default: string, Heading: string };\n    diffColor: string;\n    diffWidth: number;\n\n    constructor(width: number, height: number) {\n        this.widthCell = width;\n        this.heightCell = height;\n        this.background = \"#9a2424\";\n        this.borderColor = \"#343653\";\n        this.lineWidth = 2;\n        this.borderWidth = 10;\n        this.diffWidth = 5;\n        this.fillColor = \"#fff0e6\";\n        this.textColor = \"#d62061\";\n        this.lineColor = \"#6dc2ff\";\n        this.diffColor = \"#ff2955\";\n        this.font = {Default: \"12px 'Segoe UI',Arial,sans-serif\", Heading: \"34px 'Segoe UI',Arial,sans-serif\"};\n    }\n\n}","import {PentaWarningError} from \"./PentaWarningError\";\nimport {Area} from \"./area\";\nimport {Cell} from \"./Cell\";\nimport {Position} from \"./position\";\nimport {Diff} from \"./diff\";\nimport {Sister} from \"./sister\";\n\nexport class Serializer {\n    private static minLines: number = 2;\n\n    static serialize(textContent: string): PentaWarningError {\n        let pentaWarningError = new PentaWarningError();\n        let penta = pentaWarningError.penta;\n        console.log(\"We want to serialize: \" + textContent);\n        let lines = textContent.split(/[\\r\\n]+/);\n        if (lines.length < this.minLines) {\n            pentaWarningError.addError(\"Text for penta should contain: \\n\" +\n                \"author, nbLine nbCols, penta\");\n            return pentaWarningError;\n        }\n        penta.author = lines[0].trim();\n        console.log(\"Author is :\" + penta.author);\n\n        let lineCol = lines[1].trim().split(\" \").map(s => Number(s));\n        console.log(\"We have lineCol: \" + lineCol);\n        if (lineCol.length != 2) {\n            pentaWarningError.addError(\n                \"2nd line should provide nb of lines and columns like this \\\"\\<nbLines> \\<nbCols>\\\"\");\n            return pentaWarningError;\n        }\n        penta.lines = lineCol[0];\n        penta.columns = lineCol[1];\n        if (lines.length < this.minLines + penta.lines) {\n            pentaWarningError.addError(\"You didn't provide a pentatonic with \" + penta.lines + \" lines\");\n            return pentaWarningError;\n        }\n        this.fillAreas(pentaWarningError, lines, 2);\n        this.fillEnonce(pentaWarningError, lines, 2 + penta.lines);\n\n        return pentaWarningError;\n    }\n\n    static fillAreas(penta: PentaWarningError, lines: Array<string>, startLine: number) {\n        let mapAreas: { [key: string]: Area } = {};\n        let line: string;\n        for (let index = startLine; index < startLine + penta.penta.lines; index++) {\n            let i = index - startLine;\n            line = lines[index].trim();\n            if (line == \"\" || line == null) {\n                continue;\n            }\n            let lineCells = [];\n            if(line.length != penta.penta.columns) {\n                penta.addWarning(\"Check the number of cells for this line: \"+line);\n            }\n\n            for (let j = 0; j < penta.penta.columns; j++) {\n                if(line.length <= j) {\n                    penta.addError(\"Please check the number of columns you provided fo each line of the pentatonic \" +\n                        \"(index\" + j + \">=\" + penta.penta.columns + \": for the line \" + line + \")\");\n                    break;\n                }\n                if (j > penta.penta.columns) {\n                    penta.addError(\"Please check the number of columns you provided fo each line of the pentatonic \" +\n                        \"(\" + j + \">\" + penta.penta.columns + \")\");\n                    break;\n                }\n                let cell = new Cell(i, j);\n                let area = mapAreas[line[j]];\n                if (area == null) {\n                    area = new Area(line[j]);\n                    mapAreas[line[j]] = area;\n                }\n                cell.area = area;\n                lineCells.push(cell);\n            }\n            penta.penta.cells.push(lineCells);\n        }\n        penta.penta.fillAreaSize();\n    }\n\n    static fillEnonce(penta: PentaWarningError, lines: Array<string>, startLine: number) {\n        let line: string;\n        let countArray: number = lines.length;\n        let toSister: { [c: string]: Array<Position> } = {};\n        for (let i = startLine; i < countArray; i++) {\n            line = lines[i].trim();\n            if (line == \"\") continue;\n\n            // we got a number or a constraint\n            if (line.startsWith(\"-\")) {\n                // DiffOne\n                let lineCols = line.substr(1).split(\",\").map(n => +n);\n                if (lineCols.length != 4) {\n                    penta.addError(\"For a diffOne, you should have 4 numbers: \\\"-i1,j1,i2,j2\\\" for example. But you typed \\\"\" + line + \"\\\"\");\n                    continue;\n                }\n                let pos1 = new Position(lineCols[0], lineCols[1]);\n                let pos2 = new Position(lineCols[2], lineCols[3]);\n                if (pos1 == pos2) {\n                    penta.addError(\"Difference one should concern 2 different positions. But you typed \\\"\" + line + \"\\\"\");\n                    continue;\n                }\n                if (!pos1.isNear(pos2)) {\n                    penta.addWarning(\"Difference one should concert 2 near positions. But you typed \\\"\" + line + \"\\\"\");\n                }\n                penta.penta.diffOnes.push(new Diff(pos1, pos2));\n                continue;\n            }\n            // we got a\n            let split = line.split(\",\");\n            if (split.length != 3) {\n                penta.addError(\"Bad input, should be n,i,j, but was \" + line);\n                continue;\n            }\n            if (split[0].length != 1) {\n                penta.addError(\"Bad input: \" + split[0] + \" in line \" + line);\n                continue;\n            }\n            let nb = split[0];\n            let nLine = +split[1];\n            let nCol = +split[2];\n            let cell = penta.penta.cells[nLine][nCol];\n            let n: number = +nb;\n            if (!Number.isNaN(n)) {\n                console.log(\"nb is \" + nb);\n                let n: number = +nb;\n                console.log(\"Success converting nb to number: \" + n);\n                cell.values.push(nb);\n            } else {\n                if (toSister[nb] == null) {\n                    toSister[nb] = [new Position(nLine, nCol)];\n                } else {\n                    toSister[nb].push(new Position(nLine, nCol));\n                }\n            }\n        }\n        for (let keyChar in toSister) {\n            penta.penta.sisters.push(new Sister(keyChar, keyChar, toSister[keyChar]));\n        }\n    }\n\n}","import {Pentatonic} from \"./Pentatonic\";\r\n\r\nexport class PentaWarningError {\r\n    penta: Pentatonic;\r\n    warnings: Array<string>;\r\n    errors: Array<string>;\r\n\r\n    constructor() {\r\n        this.penta = new Pentatonic();\r\n        this.warnings = [];\r\n        this.errors = [];\r\n    }\r\n\r\n    public addWarning(warn: string) {\r\n        this.warnings.push(warn);\r\n    }\r\n\r\n    public addError(error: string) {\r\n        this.errors.push(error);\r\n    }\r\n\r\n}","import {Cell} from \"./Cell\";\nimport {Area} from \"./area\";\nimport {Diff} from \"./diff\";\nimport {Sister} from \"./sister\";\nimport {Position} from \"./position\";\n\nexport class Pentatonic {\n    id: number = 0;\n    version: number = 0;\n    areas: string = \"\";\n    difficulty: number = 0;\n    author: string = \"\";\n    filename: string = \"\";\n    lines: number;\n    columns: number;\n    cells: Array<Array<Cell>>;\n    diffOnes: Array<Diff>;\n    sisters: Array<Sister>;\n\n    constructor(lines: number = 0, columns: number = 0) {\n        this.lines = lines;\n        this.columns = columns;\n        this.cells = [];\n        this.diffOnes = [];\n        this.sisters = [];\n    }\n\n    fillAreaSize() {\n        let allAreas = this.getAllAreas();\n        allAreas.forEach(area => {\n            let areaCells: Set<Cell> = this.getAreaCells(area);\n            let size = areaCells.size;\n            areaCells.forEach(c => c.area.size = size);\n        })\n    }\n\n    public cellArray(): Array<Cell> {\n        let res: Array<Cell> = [];\n        for (let row of this.cells) {\n            for (let cell of row) {\n                res.push(cell);\n            }\n        }\n        return res;\n    }\n\n    private getAllAreas(): Set<Area> {\n        let set: Set<Area> = new Set();\n        let merge: Array<Cell> = this.cellArray();\n\n        merge.forEach((c: Cell) => {\n            set.add(c.area)\n        });\n        return set;\n    }\n\n    private getAreaCells(area: Area): Set<Cell> {\n        return new Set(this.cellArray().filter(c => c.area.id == area.id));\n\n    }\n\n    public diffOnesHave(position: Position): boolean {\n        for (let diff of this.diffOnes) {\n            if (diff.position1 == position || diff.position2 == position) return true;\n        }\n        return false;\n    }\n\n    public sistersHave(position: Position): boolean {\n        for (let sis of this.sisters) {\n            if (sis.positions.indexOf(position) != -1) return true;\n        }\n        return false;\n    }\n\n    getSisterSymbol(position: Position): string {\n        for (let sis of this.sisters) {\n            if (sis.positions.indexOf(position) > -1) return sis.symbol;\n        }\n        return \"\";\n    }\n}","export class Area {\r\n    id: string;\r\n    size: number;\r\n\r\n    constructor(id: string = \"0\", size: number = 0) {\r\n        this.id = id;\r\n        this.size = size;\r\n    }\r\n}","import {Area} from \"./area\";\r\nimport {Position} from \"./position\";\r\n\r\nexport class Cell {\r\n    position: Position;\r\n    area: Area;\r\n    values: Array<string>;\r\n\r\n    constructor(i: number, j: number) {\r\n        this.position = new Position(i, j);\r\n        this.values = [];\r\n    }\r\n}","import {Position} from \"./position\";\r\n\r\nexport class Diff {\r\n    position1: Position;\r\n    position2: Position;\r\n\r\n    constructor(pos1: Position, pos2: Position) {\r\n        this.position1 = pos1;\r\n        this.position2 = pos2;\r\n    }\r\n}","import {Position} from \"./position\";\n\nexport class Sister {\n    id: string;\n    symbol: string;\n    positions: Array<Position>;\n\n    constructor(id: string, symbol: string, positions: Array<Position>) {\n        this.id = id;\n        this.symbol = symbol;\n        this.positions = positions;\n    }\n}"],"sourceRoot":""}