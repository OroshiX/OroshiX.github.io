{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/relativePosition.ts","webpack:///./src/position.ts","webpack:///./src/doDraw.ts","webpack:///./src/playground.ts","webpack:///./src/Styles.ts","webpack:///./src/serializer.ts","webpack:///./src/PentaWarningError.ts","webpack:///./src/Pentatonic.ts","webpack:///./src/area.ts","webpack:///./src/Cell.ts","webpack:///./src/diff.ts","webpack:///./src/sister.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","RelativePosition","relativePosition_1","Position","[object Object]","j","this","pos","Math","abs","position","isNear","ILLEGAL","bottom","right","TOP_LEFT","TOP","TOP_RIGHT","LEFT","RIGHT","BOTTOM_LEFT","BOTTOM","BOTTOM_RIGHT","playground_1","Styles_1","serializer_1","canvas","penaltyArea","ceil","window","onload","textEditPenta","document","getElementById","buttonConvert","errors","warnings","success","canvasElement","context2D","getContext","ground","Playground","Styles","onclick","penta","Serializer","serialize","drawPentatonic","context","styles","offsetX","offsetY","totalWidth","parentElement","getBoundingClientRect","width","setAttribute","toString","style","border","canvasBorderWidth","canvasBorderColor","margin","background","xAxis","yAxis","radius","beginPath","arc","PI","fillStyle","fillColor","fill","lineWidth","strokeStyle","borderColor","stroke","text","font","Heading","color","textColor","fillText","x1","y1","x2","y2","borderWidth","moveTo","lineTo","diffWidth","diffColor","isReverseArrow","x2ofLine","y2OfLine","height","fillRect","lineColor","strokeRect","pentaWarningError","console","log","length","innerHTML","join","innerText","textContent","pentatonic","cellSize","columns","heightCanvas","lines","drawEachCell","drawVerticalSeparations","drawHorizontalSeparations","drawAllClues","drawRectangleThinLine","drawRectangleBorderLine","cells","area","id","drawLine","cellArray","filter","cell","values","sistersHave","forEach","writeText","getSisterSymbol","Default","sisterColor","drawDiffOnes","diffOnes","diffOne","xStart","xEnd","yStart","yEnd","xArray","yArray","k","push","position1","getPositionRelativeToMe","position2","drawDiffLine","widthCell","heightCell","PentaWarningError_1","area_1","Cell_1","position_1","diff_1","sister_1","PentaWarningError","split","minLines","addError","author","trim","lineCol","map","Number","fillAreas","fillEnonce","startLine","line","mapAreas","index","lineCells","Cell","Area","fillAreaSize","addWarnings","countArray","toSister","startsWith","lineCols","substr","pos1","pos2","addWarning","Diff","nb","nLine","nCol","isNaN","keyChar","sisters","Sister","Pentatonic_1","Pentatonic","warn","error","version","areas","difficulty","filename","MAX_AREA_SIZE","getAllAreas","areaCells","getAreaCells","size","res","row","set","Set","add","diff","sis","positions","symbol"],"mappings":"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","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","export enum RelativePosition {\r\n    TOP, TOP_RIGHT, RIGHT, BOTTOM_RIGHT, BOTTOM, BOTTOM_LEFT, LEFT, TOP_LEFT, ILLEGAL\r\n}","import {RelativePosition} from \"./relativePosition\";\r\n\r\nexport class Position {\r\n\r\n    i: number;\r\n    j: number;\r\n\r\n    constructor(i: number, j: number) {\r\n        this.i = i;\r\n        this.j = j;\r\n    }\r\n\r\n    isNear(pos: Position): boolean {\r\n        if (Math.abs(pos.i - this.i) > 1 || Math.abs(pos.j - this.j) > 1) {\r\n            return false;\r\n        }\r\n        if (pos.i == this.i && pos.j == this.j) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    getPositionRelativeToMe(position: Position): RelativePosition {\r\n        if (!position.isNear(this)) {\r\n            return RelativePosition.ILLEGAL;\r\n        }\r\n        /**\r\n         * bottom == 1 => bottom\r\n         * bottom == 0 => middle\r\n         * bottom == -1 => top\r\n         */\r\n        let bottom = position.i - this.i;\r\n        /**\r\n         * right == 1 => right\r\n         * right == 0 => middle\r\n         * right == -1 => left\r\n         */\r\n        let right = position.j - this.j;\r\n        if (Math.abs(bottom) > 1 || Math.abs(right) > 1) return RelativePosition.ILLEGAL;\r\n\r\n        if (bottom < 0 && right < 0) return RelativePosition.TOP_LEFT;\r\n        if (bottom < 0 && right == 0) return RelativePosition.TOP;\r\n        if (bottom < 0 && right > 0) return RelativePosition.TOP_RIGHT;\r\n\r\n        if (bottom == 0 && right < 0) return RelativePosition.LEFT;\r\n        if (bottom == 0 && right > 0) return RelativePosition.RIGHT;\r\n\r\n        if (bottom > 0 && right < 0) return RelativePosition.BOTTOM_LEFT;\r\n        if (bottom > 0 && right == 0) return RelativePosition.BOTTOM;\r\n        if (bottom > 0 && right > 0) return RelativePosition.BOTTOM_RIGHT;\r\n        return RelativePosition.ILLEGAL;\r\n    }\r\n\r\n}\r\n\r\n","import {Playground} from \"./playground\";\r\nimport {Styles} from \"./Styles\";\r\nimport {PentaWarningError} from \"./PentaWarningError\";\r\nimport {Serializer} from \"./serializer\";\r\n\r\nlet _height = 500;\r\nlet _width = 1000;\r\nlet canvas = {\r\n    width: _width,\r\n    height: _height,\r\n    halfWidth: _width / 2,\r\n    lineWidth: 2,\r\n    background: {Default: \"#08a107\", Orange: \"#f60\", Green: \"#f80\"},\r\n    borderColor: {White: \"#fff\", Green: \"#f80\"},\r\n    colorMap: {Orange: \"#f60\", Green: \"#f80\"}\r\n};\r\nlet common = {\r\n    fillColor: {Default: \"#0d5f0c\", Green: \"green\", Red: \"red\", Orange: \"#f60\", White: \"#fff\"},\r\n    borderColor: \"#fff\",\r\n    fontFamily: \" 'Segoe UI',Arial,sans-serif\",\r\n    font: {Default: \"12px 'Segoe UI',Arial,sans-serif\", Heading: \"14px 'Segoe UI',Arial,sans-serif\"},\r\n    lineWidth: {Pixel1: 1, Pixel2: 2, Pixel3: 3, Pixel4: 4, Pixel5: 5},\r\n    arrowLength: {Default: 70, Pixel50: 50}\r\n};\r\n\r\nlet penaltyArea = {\r\n    height: Math.ceil((canvas.height * 70) / 100),\r\n    width: Math.ceil((canvas.width * 12) / 100),\r\n    yPosition: Math.ceil(((canvas.height * 30) / 100) / 2),\r\n    xPosition: {TeamA: 0, TeamB: canvas.width - Math.ceil((canvas.width * 12) / 100)}\r\n};\r\nlet goalArea = {\r\n    height: Math.ceil((penaltyArea.height * 60) / 100),\r\n    width: Math.ceil(penaltyArea.width / 2),\r\n    yPositon: (canvas.height - penaltyArea.height),\r\n    xPosition: {TeamA: 0, TeamB: Math.ceil(canvas.width - (penaltyArea.width / 2))}\r\n};\r\nlet penaltyArc = {\r\n    xPosition: {\r\n        TeamA: penaltyArea.width - goalArea.width / 4,\r\n        TeamB: canvas.width - penaltyArea.width + goalArea.width / 4\r\n    },\r\n    yPosition: canvas.height / 2,\r\n    radius: goalArea.height / 3\r\n};\r\n\r\nlet groundCorner = {\r\n    radius: Math.ceil((canvas.height * 2) / 100)\r\n};\r\nlet captionText = \"\";\r\n\r\nwindow.onload = function () {\r\n    let textEditPenta = document.getElementById(\"text-penta\") as HTMLTextAreaElement;\r\n    let buttonConvert = document.getElementById(\"btn-convert\") as HTMLButtonElement;\r\n    let errors: Node = document.getElementById(\"errors\");\r\n    let warnings: Node = document.getElementById(\"warnings\");\r\n    let success: Node = document.getElementById(\"success\");\r\n    let canvasElement = document.getElementById(\"penta-representation\") as HTMLCanvasElement;\r\n    let context2D: CanvasRenderingContext2D = canvasElement.getContext(\"2d\");\r\n\r\n    let ground = new Playground(canvasElement, context2D, new Styles(20, 20));\r\n    buttonConvert.onclick = () => {\r\n        let penta: PentaWarningError = Serializer.serialize(textEditPenta.value);\r\n        ground.drawPentatonic(penta, errors, warnings, success);\r\n    };\r\n};","import {Styles} from \"./Styles\";\r\nimport {PentaWarningError} from \"./PentaWarningError\";\r\nimport {Pentatonic} from \"./Pentatonic\";\r\nimport {RelativePosition} from \"./relativePosition\";\r\n\r\nexport class Playground {\r\n    private canvasElement: HTMLCanvasElement;\r\n    private context: CanvasRenderingContext2D;\r\n\r\n    private styles: Styles;\r\n\r\n    private cellSize: number;\r\n    private offsetX = 30;\r\n    private offsetY = 30;\r\n    private totalWidth: number;\r\n\r\n    constructor(canvasElement: HTMLCanvasElement, context: CanvasRenderingContext2D, styles: Styles) {\r\n        this.canvasElement = canvasElement;\r\n        this.totalWidth = this.canvasElement.parentElement.getBoundingClientRect().width;\r\n        this.canvasElement.setAttribute(\"width\", this.totalWidth.toString());\r\n\r\n        this.context = context;\r\n        this.styles = styles;\r\n\r\n        this.canvasElement.style.border = this.styles.canvasBorderWidth + \"px solid \" + this.styles.canvasBorderColor;\r\n        this.canvasElement.style.margin = \"auto 20px\";\r\n        this.canvasElement.style.background = this.styles.background;\r\n\r\n    }\r\n\r\n    drawCenterSpot(xAxis: number, yAxis: number, radius: number) {\r\n        this.context.beginPath();\r\n        this.context.arc(xAxis, yAxis, radius, 0, 2 * Math.PI);\r\n        this.context.fillStyle = this.styles.fillColor;\r\n        this.context.fill();\r\n        this.context.lineWidth = this.styles.lineWidth;\r\n        this.context.strokeStyle = this.styles.borderColor;\r\n        this.context.stroke();\r\n    }\r\n\r\n    drawCorner(xAxis: number, yAxis: number) {\r\n        this.context.beginPath();\r\n        this.context.arc(xAxis, yAxis, 10, 0, 2 * Math.PI);\r\n        this.context.fillStyle = this.styles.fillColor;\r\n        this.context.fill();\r\n        this.context.lineWidth = this.styles.lineWidth;\r\n        this.context.strokeStyle = this.styles.borderColor;\r\n        this.context.stroke();\r\n    }\r\n\r\n    writeText(text: string, xAxis: number, yAxis: number, font: string = this.styles.font.Heading,\r\n              color: string = this.styles.textColor) {\r\n        this.context.font = font;\r\n        this.context.fillStyle = color;\r\n        this.context.fillText(text, xAxis, yAxis);\r\n\r\n    }\r\n\r\n    drawLine(x1: number, y1: number, x2: number, y2: number) {\r\n        this.context.beginPath();\r\n        this.context.lineWidth = this.styles.borderWidth;\r\n        this.context.fillStyle = this.styles.borderColor;\r\n        this.context.strokeStyle = this.styles.borderColor;\r\n        this.context.moveTo(x1, y1);\r\n        this.context.lineTo(x2, y2);\r\n        this.context.stroke();\r\n        this.context.fill();\r\n    }\r\n\r\n    drawDiffLine(x1: number, y1: number, x2: number, y2: number) {\r\n        this.context.beginPath();\r\n        this.context.lineWidth = this.styles.diffWidth;\r\n        this.context.fillStyle = this.styles.diffColor;\r\n        this.context.strokeStyle = this.styles.diffColor;\r\n        this.context.moveTo(x1, y1);\r\n        this.context.lineTo(x2, y2);\r\n        this.context.stroke();\r\n        this.context.fill();\r\n    }\r\n\r\n\r\n    drawArrowLine(x1: number, y1: number, x2: number, y2: number, isReverseArrow = false) {\r\n        let i;\r\n        this.context.beginPath();\r\n        this.context.moveTo(x1, y1);\r\n        this.context.lineTo(x2, y2);\r\n        this.context.strokeStyle = this.styles.fillColor;\r\n        this.context.lineWidth = this.styles.lineWidth;\r\n        this.context.stroke();\r\n\r\n        let x2ofLine = x2;\r\n        let y2OfLine = y2;\r\n\r\n        if (!isReverseArrow) {\r\n            for (i = 0; i <= 2; i++) {\r\n                x1 = x2ofLine;\r\n                y1 = ((i == 0) || (i == 2)) ? (y2OfLine - 4) : (y2OfLine + 4);\r\n                x2 = (i == 2) ? (x2ofLine) : (x2ofLine + 4);\r\n                y2 = (i == 2) ? (y2OfLine + 4) : y2OfLine;\r\n\r\n                this.context.beginPath();\r\n                this.context.moveTo(x1, y1);\r\n                this.context.lineTo(x2, y2);\r\n                this.context.lineWidth = this.styles.lineWidth;\r\n                this.context.strokeStyle = this.styles.fillColor;\r\n                this.context.stroke();\r\n            }\r\n        }\r\n        else {\r\n            for (i = 0; i <= 2; i++) {\r\n                x1 = x2ofLine;\r\n                y1 = ((i == 0) || (i == 2)) ? (y2OfLine + 4) : (y2OfLine - 4);\r\n                x2 = (i == 2) ? (x2ofLine) : (x2ofLine - 4);\r\n                y2 = (i == 2) ? (y2OfLine - 4) : y2OfLine;\r\n\r\n                this.context.beginPath();\r\n                this.context.moveTo(x1, y1);\r\n                this.context.lineTo(x2, y2);\r\n                this.context.lineWidth = 2;\r\n                this.context.strokeStyle = this.styles.fillColor;\r\n                this.context.stroke();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    //Rectangular Area\r\n    drawRectangleThinLine(xAxis: number, yAxis: number, width: number, height: number) {\r\n        this.context.beginPath();\r\n        this.context.fillStyle = this.styles.fillColor;\r\n        this.context.fill();\r\n        this.context.fillRect(xAxis, yAxis, width, height);\r\n        this.context.lineWidth = this.styles.lineWidth;\r\n        this.context.strokeStyle = this.styles.lineColor;\r\n        this.context.strokeRect(xAxis, yAxis, width, height);\r\n    }\r\n\r\n    drawRectangleBorderLine(xAxis: number, yAxis: number, width: number, height: number) {\r\n        this.context.beginPath();\r\n        // this.context.fillStyle = this.styles.fillColor;\r\n        // this.context.fill();\r\n        // this.context.fillRect(xAxis, yAxis, width, height);\r\n        this.context.lineWidth = this.styles.borderWidth;\r\n        this.context.strokeStyle = this.styles.borderColor;\r\n        this.context.strokeRect(xAxis, yAxis, width, height);\r\n    }\r\n\r\n\r\n    drawPentatonic(pentaWarningError: PentaWarningError, errors: Node, warnings: Node, success: Node) {\r\n        console.log(\"trying to draw: \", pentaWarningError);\r\n        console.log(\"errors: \" + pentaWarningError.errors);\r\n        console.log(\"Warnings: \" + pentaWarningError.warnings);\r\n\r\n        let t: HTMLDivElement = <HTMLDivElement>errors;\r\n        if (pentaWarningError.errors.length > 0) {\r\n            t.innerHTML = \"<ul><li>\" + pentaWarningError.errors.join(\"</li><li>\") + \"</li></ul>\";\r\n        } else {\r\n            t.innerText = \"\";\r\n        }\r\n        if (pentaWarningError.warnings.length > 0) {\r\n            (<HTMLDivElement>warnings).innerHTML =\r\n                \"<ul><li>\" + pentaWarningError.warnings.join(\"</li><li>\") + \"</li></ul>\";\r\n        } else {\r\n            warnings.textContent = \"\";\r\n        }\r\n        if (pentaWarningError.errors.length == 0 && pentaWarningError.warnings.length == 0) {\r\n            success.textContent = \"Success!\";\r\n        } else {\r\n            success.textContent = \"\";\r\n        }\r\n        let pentatonic = pentaWarningError.penta;\r\n        this.cellSize = (this.totalWidth - 2 * this.offsetX) / pentatonic.columns;\r\n        let heightCanvas = this.totalWidth * pentatonic.lines / pentatonic.columns;\r\n        this.canvasElement.setAttribute(\"height\", heightCanvas.toString());\r\n\r\n        this.drawEachCell(pentatonic);\r\n        if (pentaWarningError.errors.length > 0) return;\r\n        this.drawVerticalSeparations(pentatonic);\r\n        this.drawHorizontalSeparations(pentatonic);\r\n        this.drawAllClues(pentatonic);\r\n    }\r\n\r\n    private drawEachCell(pentatonic: Pentatonic) {\r\n        for (let i = 0; i < pentatonic.lines; i++) {\r\n            for (let j = 0; j < pentatonic.columns; j++) {\r\n                this.drawRectangleThinLine(this.offsetX + j * this.cellSize, this.offsetY + i * this.cellSize, this.cellSize, this.cellSize);\r\n            }\r\n        }\r\n        this.drawRectangleBorderLine(this.offsetX, this.offsetY, pentatonic.columns * this.cellSize, pentatonic.lines * this.cellSize);\r\n    }\r\n\r\n    private drawVerticalSeparations(pentatonic: Pentatonic) {\r\n        for (let i = 0; i < pentatonic.lines; i++) {\r\n            for (let j = 1; j < pentatonic.columns; j++) {\r\n                if (pentatonic.cells[i][j].area.id != pentatonic.cells[i][j - 1].area.id) {\r\n                    this.drawLine(this.offsetX + j * this.cellSize,\r\n                        this.offsetY + i * this.cellSize,\r\n                        this.offsetX + j * this.cellSize,\r\n                        this.offsetY + (i + 1) * this.cellSize);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    private drawHorizontalSeparations(pentatonic: Pentatonic) {\r\n        for (let j = 0; j < pentatonic.columns; j++) {\r\n            for (let i = 1; i < pentatonic.lines; i++) {\r\n                if (pentatonic.cells[i][j].area.id != pentatonic.cells[i - 1][j].area.id) {\r\n                    this.drawLine(this.offsetX + j * this.cellSize,\r\n                        this.offsetY + i * this.cellSize,\r\n                        this.offsetX + (j + 1) * this.cellSize,\r\n                        this.offsetY + i * this.cellSize);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private drawAllClues(pentatonic: Pentatonic) {\r\n        pentatonic.cellArray().filter(cell => cell.values.length == 1 || pentatonic.sistersHave(cell.position))\r\n            .forEach(c => {\r\n                if (c.values.length == 1) {\r\n                    this.writeText(c.values[0], this.offsetX + c.position.j * this.cellSize + this.cellSize / 3,\r\n                        this.offsetY + c.position.i * this.cellSize + this.cellSize * 3 / 5);\r\n                }\r\n                if (pentatonic.sistersHave(c.position)) {\r\n                    this.writeText(pentatonic.getSisterSymbol(c.position),\r\n                        this.offsetX + c.position.j * this.cellSize + 0.2 * this.cellSize,\r\n                        this.offsetY + c.position.i * this.cellSize + 0.4 * this.cellSize, this.styles.font.Default, this.styles.sisterColor);\r\n                }\r\n            });\r\n        this.drawDiffOnes(pentatonic);\r\n\r\n    }\r\n\r\n    private drawDiffOnes(pentatonic: Pentatonic) {\r\n        pentatonic.diffOnes.forEach(diffOne => {\r\n            let xArray: number[] = [];\r\n            let yArray: number[] = [];\r\n\r\n            for (let k = 0; k < 5; k++) {\r\n                xArray.push(this.offsetX + diffOne.position1.j * this.cellSize + (this.cellSize * k) / 4);\r\n                yArray.push(this.offsetY + diffOne.position1.i * this.cellSize + (this.cellSize * k) / 4);\r\n            }\r\n            let xStart, xEnd, yStart, yEnd: number;\r\n            switch (diffOne.position1.getPositionRelativeToMe(diffOne.position2)) {\r\n                case RelativePosition.TOP:\r\n                    xStart = xArray[2];\r\n                    xEnd = xArray[2];\r\n                    yStart = 2 * yArray[0] - yArray[1];\r\n                    yEnd = yArray[1];\r\n                    break;\r\n                case RelativePosition.RIGHT:\r\n                    xStart = 2 * xArray[4] - xArray[3];\r\n                    xEnd = xArray[3];\r\n                    yStart = yArray[2];\r\n                    yEnd = yArray[2];\r\n                    break;\r\n                case RelativePosition.BOTTOM:\r\n                    xStart = xArray[2];\r\n                    xEnd = xArray[2];\r\n                    yStart = 2 * yArray[4] - yArray[3];\r\n                    yEnd = yArray[3];\r\n                    break;\r\n                case  RelativePosition.LEFT:\r\n                    xStart = 2 * xArray[0] - xArray[1];\r\n                    xEnd = xArray[1];\r\n                    yStart = yArray[2];\r\n                    yEnd = yArray[2];\r\n                    break;\r\n                case RelativePosition.TOP_RIGHT:\r\n                    xStart = 2 * xArray[4] - xArray[3];\r\n                    xEnd = xArray[3];\r\n                    yStart = 2 * yArray[0] - yArray[1];\r\n                    yEnd = yArray[1];\r\n                    break;\r\n                case RelativePosition.BOTTOM_RIGHT:\r\n                    xStart = 2 * xArray[4] - xArray[3];\r\n                    xEnd = xArray[3];\r\n                    yStart = 2 * yArray[4] - yArray[3];\r\n                    yEnd = yArray[3];\r\n                    break;\r\n                case RelativePosition.BOTTOM_LEFT:\r\n                    xStart = 2 * xArray[0] - xArray[1];\r\n                    xEnd = xArray[1];\r\n                    yStart = 2 * yArray[4] - yArray[3];\r\n                    yEnd = yArray[3];\r\n                    break;\r\n                case RelativePosition.TOP_LEFT:\r\n                    xStart = 2 * xArray[0] - xArray[1];\r\n                    xEnd = xArray[1];\r\n                    yStart = 2 * yArray[0] - yArray[1];\r\n                    yEnd = yArray[1];\r\n                    break;\r\n                case RelativePosition.ILLEGAL:\r\n                    console.log(\"Illegal position\");\r\n                    return;\r\n            }\r\n            this.drawDiffLine(xStart, yStart, xEnd, yEnd);\r\n        })\r\n    }\r\n}\r\n","export class Styles {\r\n    widthCell: number;\r\n    heightCell: number;\r\n    background: string;\r\n    borderColor: string;\r\n    lineColor: string;\r\n    lineWidth: number;\r\n    borderWidth: number;\r\n    canvasBorderWidth: number;\r\n    canvasBorderColor: string;\r\n    fillColor: string;\r\n    textColor: string;\r\n    font: { Default: string, Heading: string };\r\n    diffColor: string;\r\n    diffWidth: number;\r\n    sisterColor: string;\r\n\r\n    constructor(width: number, height: number) {\r\n        this.widthCell = width;\r\n        this.heightCell = height;\r\n        this.background = \"#fff5ea\";\r\n        this.borderColor = \"#343653\";\r\n        this.canvasBorderColor =\"#ae0066\";\r\n        this.canvasBorderWidth = 1;\r\n        this.lineWidth = 2;\r\n        this.borderWidth = 10;\r\n        this.diffWidth = 5;\r\n        this.fillColor = \"#fff0e6\";\r\n        this.textColor = \"#d62061\";\r\n        this.lineColor = \"#6dc2ff\";\r\n        this.diffColor = \"#ff2955\";\r\n        this.sisterColor = \"#339bcb\";\r\n        this.font = {Default: \"27px 'Segoe UI',Arial,sans-serif\", Heading: \"44px 'Segoe UI',Arial,sans-serif\"};\r\n    }\r\n\r\n}","import {PentaWarningError} from \"./PentaWarningError\";\r\nimport {Area} from \"./area\";\r\nimport {Cell} from \"./Cell\";\r\nimport {Position} from \"./position\";\r\nimport {Diff} from \"./diff\";\r\nimport {Sister} from \"./sister\";\r\n\r\nexport class Serializer {\r\n    private static minLines: number = 2;\r\n\r\n    static serialize(textContent: string): PentaWarningError {\r\n        let pentaWarningError = new PentaWarningError();\r\n        let penta = pentaWarningError.penta;\r\n        console.log(\"We want to serialize: \" + textContent);\r\n        let lines = textContent.split(/[\\r\\n]+/);\r\n        if (lines.length < this.minLines) {\r\n            pentaWarningError.addError(\"Text for penta should contain: \\n\" +\r\n                \"author, nbLine nbCols, penta\");\r\n            return pentaWarningError;\r\n        }\r\n        penta.author = lines[0].trim();\r\n        console.log(\"Author is :\" + penta.author);\r\n\r\n        let lineCol = lines[1].trim().split(\" \").map(s => Number(s));\r\n        console.log(\"We have lineCol: \" + lineCol);\r\n        if (lineCol.length != 2) {\r\n            pentaWarningError.addError(\r\n                \"2nd line should provide nb of lines and columns like this \\\"nbLines nbCols\\\"\");\r\n            return pentaWarningError;\r\n        }\r\n        penta.lines = lineCol[0];\r\n        penta.columns = lineCol[1];\r\n        if (lines.length < this.minLines + penta.lines) {\r\n            pentaWarningError.addError(\"You didn't provide a pentatonic with \" + penta.lines + \" lines\");\r\n            return pentaWarningError;\r\n        }\r\n\r\n        this.fillAreas(pentaWarningError, lines, 2);\r\n        if (pentaWarningError.errors.length > 0) return pentaWarningError;\r\n        this.fillEnonce(pentaWarningError, lines, 2 + penta.lines);\r\n\r\n        return pentaWarningError;\r\n    }\r\n\r\n    static fillAreas(penta: PentaWarningError, lines: Array<string>, startLine: number) {\r\n        let mapAreas: { [key: string]: Area } = {};\r\n        let line: string;\r\n        for (let index = startLine; index < startLine + penta.penta.lines; index++) {\r\n            let i = index - startLine;\r\n            line = lines[index].trim();\r\n            if (line == \"\" || line == null) {\r\n                continue;\r\n            }\r\n            let lineCells = [];\r\n            if(line.length != penta.penta.columns) {\r\n                penta.addError(\r\n                    \"Mismatch between number of columns (\" + penta.penta.columns +\r\n                    \") and the size of the line\\\"\" + line + \"\\\" (cf. line number \" + (index + 1) + \")\");\r\n                break;\r\n            }\r\n\r\n            for (let j = 0; j < penta.penta.columns; j++) {\r\n                let cell = new Cell(i, j);\r\n                let area = mapAreas[line[j]];\r\n                if (area == null) {\r\n                    area = new Area(line[j]);\r\n                    mapAreas[line[j]] = area;\r\n                }\r\n                cell.area = area;\r\n                lineCells.push(cell);\r\n            }\r\n            penta.penta.cells.push(lineCells);\r\n        }\r\n        let warnings = penta.penta.fillAreaSize();\r\n        penta.addWarnings(warnings);\r\n    }\r\n\r\n    static fillEnonce(penta: PentaWarningError, lines: Array<string>, startLine: number) {\r\n        let line: string;\r\n        let countArray: number = lines.length;\r\n        let toSister: { [c: string]: Array<Position> } = {};\r\n        for (let i = startLine; i < countArray; i++) {\r\n            line = lines[i].trim();\r\n            if (line == \"\") continue;\r\n\r\n            // we got a number or a constraint\r\n            if (line.startsWith(\"-\")) {\r\n                // DiffOne\r\n                let lineCols = line.substr(1).split(\",\").map(n => +n);\r\n                if (lineCols.length != 4) {\r\n                    penta.addError(\"For a diffOne, you should have 4 numbers: \\\"-i1,j1,i2,j2\\\" for example. But you typed \\\"\" + line + \"\\\"\");\r\n                    break;\r\n                }\r\n                let pos1 = new Position(lineCols[0], lineCols[1]);\r\n                let pos2 = new Position(lineCols[2], lineCols[3]);\r\n                if (pos1 == pos2) {\r\n                    penta.addError(\"Difference one should concern 2 different positions. But you typed \\\"\" + line + \"\\\"\");\r\n                    continue;\r\n                }\r\n                if (!pos1.isNear(pos2)) {\r\n                    penta.addWarning(\"Difference one should concert 2 near positions. But you typed \\\"\" + line + \"\\\"\");\r\n                }\r\n                penta.penta.diffOnes.push(new Diff(pos1, pos2));\r\n                continue;\r\n            }\r\n            // we got a\r\n            let split = line.split(\",\");\r\n            if (split.length != 3) {\r\n                penta.addError(\"Bad input, should be n,i,j, but was \" + line);\r\n                continue;\r\n            }\r\n            if (split[0].length != 1) {\r\n                penta.addError(\"Bad input: \" + split[0] + \" in line \" + line);\r\n                continue;\r\n            }\r\n            let nb = split[0];\r\n            let nLine = +split[1];\r\n            let nCol = +split[2];\r\n            if (nLine >= penta.penta.lines) {\r\n                penta.addError(\r\n                    \"Line i = \" + nLine + \" is out of bounds in \\\"\" + line + \"\\\": number of lines = \" + penta.penta.lines + \" (cf. line \" + (i + 1) + \")\");\r\n                continue;\r\n            }\r\n            if (nCol >= penta.penta.columns) {\r\n                penta.addError(\r\n                    \"Column j = \" + nCol + \" is out of bounds in \\\"\" + line + \"\\\": number of columns = \" + penta.penta.columns + \" (cf. line \" + (i + 1) + \")\");\r\n                continue;\r\n            }\r\n            let cell = penta.penta.cells[nLine][nCol];\r\n            let n: number = +nb;\r\n            if (!Number.isNaN(n)) {\r\n                console.log(\"nb is \" + nb);\r\n                let n: number = +nb;\r\n                console.log(\"Success converting nb to number: \" + n);\r\n                cell.values.push(nb);\r\n            } else {\r\n                if (toSister[nb] == null) {\r\n                    toSister[nb] = [new Position(nLine, nCol)];\r\n                } else {\r\n                    toSister[nb].push(new Position(nLine, nCol));\r\n                }\r\n            }\r\n        }\r\n        for (let keyChar in toSister) {\r\n            penta.penta.sisters.push(new Sister(keyChar, keyChar, toSister[keyChar]));\r\n        }\r\n    }\r\n\r\n}","import {Pentatonic} from \"./Pentatonic\";\r\n\r\nexport class PentaWarningError {\r\n    penta: Pentatonic;\r\n    warnings: Array<string>;\r\n    errors: Array<string>;\r\n\r\n    constructor() {\r\n        this.penta = new Pentatonic();\r\n        this.warnings = [];\r\n        this.errors = [];\r\n    }\r\n\r\n    public addWarning(warn: string) {\r\n        this.warnings.push(warn);\r\n    }\r\n\r\n    public addWarnings(warnings: Array<string>) {\r\n        warnings.forEach(warn => this.addWarning(warn));\r\n    }\r\n\r\n    public addError(error: string) {\r\n        this.errors.push(error);\r\n    }\r\n\r\n}","import {Cell} from \"./Cell\";\r\nimport {Area} from \"./area\";\r\nimport {Diff} from \"./diff\";\r\nimport {Sister} from \"./sister\";\r\nimport {Position} from \"./position\";\r\n\r\nexport class Pentatonic {\r\n    id: number = 0;\r\n    version: number = 0;\r\n    areas: string = \"\";\r\n    difficulty: number = 0;\r\n    author: string = \"\";\r\n    filename: string = \"\";\r\n    lines: number;\r\n    columns: number;\r\n    cells: Array<Array<Cell>>;\r\n    diffOnes: Array<Diff>;\r\n    sisters: Array<Sister>;\r\n    private MAX_AREA_SIZE: number = 5;\r\n\r\n    constructor(lines: number = 0, columns: number = 0) {\r\n        this.lines = lines;\r\n        this.columns = columns;\r\n        this.cells = [];\r\n        this.diffOnes = [];\r\n        this.sisters = [];\r\n    }\r\n\r\n    fillAreaSize(): Array<string> {\r\n        let warnings: Array<string> = [];\r\n        let allAreas = this.getAllAreas();\r\n        allAreas.forEach(area => {\r\n            let areaCells: Set<Cell> = this.getAreaCells(area);\r\n            let size = areaCells.size;\r\n            areaCells.forEach(c => c.area.size = size);\r\n            if (size > this.MAX_AREA_SIZE) {\r\n                warnings.push(\r\n                    \"Area with id \" + area.id + \" is bigger than the max (\" + size + \" > \" + this.MAX_AREA_SIZE + \")\");\r\n            }\r\n        });\r\n        return warnings;\r\n    }\r\n\r\n    public cellArray(): Array<Cell> {\r\n        let res: Array<Cell> = [];\r\n        for (let row of this.cells) {\r\n            for (let cell of row) {\r\n                res.push(cell);\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n\r\n    private getAllAreas(): Set<Area> {\r\n        let set: Set<Area> = new Set();\r\n        let merge: Array<Cell> = this.cellArray();\r\n\r\n        merge.forEach((c: Cell) => {\r\n            set.add(c.area)\r\n        });\r\n        return set;\r\n    }\r\n\r\n    private getAreaCells(area: Area): Set<Cell> {\r\n        return new Set(this.cellArray().filter(c => c.area.id == area.id));\r\n\r\n    }\r\n\r\n    public diffOnesHave(position: Position): boolean {\r\n        for (let diff of this.diffOnes) {\r\n            if (diff.position1 == position || diff.position2 == position) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public sistersHave(position: Position): boolean {\r\n        for (let sis of this.sisters) {\r\n            if (sis.positions.filter(pos => pos.i == position.i && pos.j == position.j).length > 0) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getSisterSymbol(position: Position): string {\r\n        for (let sis of this.sisters) {\r\n            if (sis.positions.filter(pos => pos.i == position.i && pos.j == position.j).length > 0) return sis.symbol;\r\n        }\r\n        return \"\";\r\n    }\r\n}","export class Area {\r\n    id: string;\r\n    size: number;\r\n\r\n    constructor(id: string = \"0\", size: number = 0) {\r\n        this.id = id;\r\n        this.size = size;\r\n    }\r\n}","import {Area} from \"./area\";\r\nimport {Position} from \"./position\";\r\n\r\nexport class Cell {\r\n    position: Position;\r\n    area: Area;\r\n    values: Array<string>;\r\n\r\n    constructor(i: number, j: number) {\r\n        this.position = new Position(i, j);\r\n        this.values = [];\r\n    }\r\n}","import {Position} from \"./position\";\r\n\r\nexport class Diff {\r\n    position1: Position;\r\n    position2: Position;\r\n\r\n    constructor(pos1: Position, pos2: Position) {\r\n        this.position1 = pos1;\r\n        this.position2 = pos2;\r\n    }\r\n}","import {Position} from \"./position\";\r\n\r\nexport class Sister {\r\n    id: string;\r\n    symbol: string;\r\n    positions: Array<Position>;\r\n\r\n    constructor(id: string, symbol: string, positions: Array<Position>) {\r\n        this.id = id;\r\n        this.symbol = symbol;\r\n        this.positions = positions;\r\n    }\r\n}"],"sourceRoot":""}