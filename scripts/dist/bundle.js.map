{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/relativePosition.ts","webpack:///./src/position.ts","webpack:///./src/doDraw.ts","webpack:///./src/playground.ts","webpack:///./src/Styles.ts","webpack:///./src/serializer.ts","webpack:///./src/PentaWarningError.ts","webpack:///./src/Pentatonic.ts","webpack:///./src/area.ts","webpack:///./src/Cell.ts","webpack:///./src/diff.ts","webpack:///./src/sister.ts","webpack:///./src/PentaChecker.ts","webpack:///./src/pentaJson.ts","webpack:///./src/value.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","RelativePosition","relativePosition_1","Position","[object Object]","j","this","pos","Math","abs","position","isNear","ILLEGAL","bottom","right","TOP_LEFT","TOP","TOP_RIGHT","LEFT","RIGHT","BOTTOM_LEFT","BOTTOM","BOTTOM_RIGHT","playground_1","Styles_1","serializer_1","PentaChecker_1","pentaJson_1","window","onload","textEditPenta","document","getElementById","buttonVisualise","buttonConvert","inputDifficulty","inputTitle","errors","warnings","success","canvasElement","context2D","getContext","visualise","penta","Serializer","serialize","difficulty","filename","PentaChecker","check","ground","drawPentatonic","Playground","Styles","onclick","hasWarningsOrErrors","alert","pentaJson","PentaJson","fromPentatonic","jsonString","JSON","stringify","text","element","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","download","context","styles","offsetX","offsetY","totalWidth","parentElement","getBoundingClientRect","width","toString","border","canvasBorderWidth","canvasBorderColor","background","xAxis","yAxis","radius","beginPath","arc","PI","fillStyle","fillColor","fill","lineWidth","strokeStyle","borderColor","stroke","font","Heading","color","textColor","fillText","x1","y1","x2","y2","borderWidth","moveTo","lineTo","diffWidth","diffColor","isReverseArrow","x2ofLine","y2OfLine","height","fillRect","lineColor","strokeRect","pentaWarningError","console","log","length","innerHTML","join","innerText","textContent","pentatonic","cellSize","columns","heightCanvas","lines","drawEachCell","drawVerticalSeparations","drawHorizontalSeparations","drawAllClues","drawRectangleThinLine","drawRectangleBorderLine","cells","area","id","drawLine","cellArray","filter","cell","values","sistersHave","forEach","writeText","getSisterSymbol","Default","sisterColor","drawDiffOnes","diffOnes","diffOne","xStart","xEnd","yStart","yEnd","xArray","yArray","k","push","position1","getPositionRelativeToMe","position2","drawDiffLine","widthCell","heightCell","PentaWarningError_1","area_1","Cell_1","position_1","diff_1","sister_1","PentaWarningError","split","minLines","addError","author","trim","lineCol","map","Number","fillAreas","fillEnonce","startLine","line","mapAreas","index","lineCells","Cell","Area","fillAreaSize","addWarnings","countArray","toSister","startsWith","lineCols","substr","pos1","pos2","addWarning","Diff","nb","nLine","nCol","isNaN","keyChar","sisters","Sister","Pentatonic_1","Pentatonic","warn","error","version","areas","MAX_AREA_SIZE","getAllAreas","areaCells","getAreaCells","size","res","row","set","Set","add","diff","sis","positions","symbol","pentaWithWarnings","checkAreas","areaPositions","getAreaPositions","positionsArray","checkAdjacent","processed","indexToRemove","indexOf","splice","getFirstAdjacentSets","others","isAdjacent","firstAdj","getFirstAdjacent","value_1","data","differences","Value","val"],"mappings":"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","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","export enum RelativePosition {\r\n    TOP, TOP_RIGHT, RIGHT, BOTTOM_RIGHT, BOTTOM, BOTTOM_LEFT, LEFT, TOP_LEFT, ILLEGAL\r\n}","import {RelativePosition} from \"./relativePosition\";\r\n\r\nexport class Position {\r\n\r\n    i: number;\r\n    j: number;\r\n\r\n    constructor(i: number, j: number) {\r\n        this.i = i;\r\n        this.j = j;\r\n    }\r\n\r\n    isNear(pos: Position): boolean {\r\n        if (Math.abs(pos.i - this.i) > 1 || Math.abs(pos.j - this.j) > 1) {\r\n            return false;\r\n        }\r\n        if (pos.i == this.i && pos.j == this.j) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isAdjacent(pos: Position): boolean {\r\n        return Math.abs(pos.i - this.i) + Math.abs(pos.j - this.j) == 1;\r\n    }\r\n\r\n    getPositionRelativeToMe(position: Position): RelativePosition {\r\n        if (!position.isNear(this)) {\r\n            return RelativePosition.ILLEGAL;\r\n        }\r\n        /**\r\n         * bottom == 1 => bottom\r\n         * bottom == 0 => middle\r\n         * bottom == -1 => top\r\n         */\r\n        let bottom = position.i - this.i;\r\n        /**\r\n         * right == 1 => right\r\n         * right == 0 => middle\r\n         * right == -1 => left\r\n         */\r\n        let right = position.j - this.j;\r\n        if (Math.abs(bottom) > 1 || Math.abs(right) > 1) return RelativePosition.ILLEGAL;\r\n\r\n        if (bottom < 0 && right < 0) return RelativePosition.TOP_LEFT;\r\n        if (bottom < 0 && right == 0) return RelativePosition.TOP;\r\n        if (bottom < 0 && right > 0) return RelativePosition.TOP_RIGHT;\r\n\r\n        if (bottom == 0 && right < 0) return RelativePosition.LEFT;\r\n        if (bottom == 0 && right > 0) return RelativePosition.RIGHT;\r\n\r\n        if (bottom > 0 && right < 0) return RelativePosition.BOTTOM_LEFT;\r\n        if (bottom > 0 && right == 0) return RelativePosition.BOTTOM;\r\n        if (bottom > 0 && right > 0) return RelativePosition.BOTTOM_RIGHT;\r\n        return RelativePosition.ILLEGAL;\r\n    }\r\n\r\n}\r\n\r\n","import {Playground} from \"./playground\";\r\nimport {Styles} from \"./Styles\";\r\nimport {PentaWarningError} from \"./PentaWarningError\";\r\nimport {Serializer} from \"./serializer\";\r\nimport {PentaChecker} from \"./PentaChecker\";\r\nimport {PentaJson} from \"./pentaJson\";\r\nwindow.onload = function () {\r\n    let textEditPenta = document.getElementById(\"text-penta\") as HTMLTextAreaElement;\r\n    let buttonVisualise = document.getElementById(\"btn-visualise\") as HTMLButtonElement;\r\n    let buttonConvert = document.getElementById(\"btn-convert\") as HTMLButtonElement;\r\n\r\n    let inputDifficulty = document.getElementById(\"difficulty-input\") as HTMLInputElement;\r\n    let inputTitle = document.getElementById(\"title-input\") as HTMLInputElement;\r\n    let errors: Node = document.getElementById(\"errors\");\r\n    let warnings: Node = document.getElementById(\"warnings\");\r\n    let success: Node = document.getElementById(\"success\");\r\n    let canvasElement = document.getElementById(\"penta-representation\") as HTMLCanvasElement;\r\n    let context2D: CanvasRenderingContext2D = canvasElement.getContext(\"2d\");\r\n\r\n    function visualise(): PentaWarningError {\r\n        let penta: PentaWarningError = Serializer.serialize(textEditPenta.value);\r\n        penta.penta.difficulty = +inputDifficulty.value;\r\n        penta.penta.filename = inputTitle.value;\r\n        PentaChecker.check(penta);\r\n        ground.drawPentatonic(penta, errors, warnings, success);\r\n        return penta;\r\n    }\r\n\r\n    function download(filename: string, text: string) {\r\n        let element = document.createElement('a');\r\n        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\r\n        element.setAttribute('download', filename);\r\n\r\n        element.style.display = 'none';\r\n        document.body.appendChild(element);\r\n\r\n        element.click();\r\n\r\n        document.body.removeChild(element);\r\n    }\r\n    let ground = new Playground(canvasElement, context2D, new Styles(20, 20));\r\n    buttonVisualise.onclick = visualise;\r\n    buttonConvert.onclick = () => {\r\n        let penta = visualise();\r\n        if (penta.hasWarningsOrErrors()) {\r\n            alert(\"Please fix any errors and warnings before converting to JSON\");\r\n            return;\r\n        }\r\n        let pentaJson = PentaJson.fromPentatonic(penta.penta);\r\n        let jsonString = JSON.stringify(pentaJson);\r\n        download(pentaJson.name + \".json\", jsonString);\r\n    }\r\n\r\n};","import {Styles} from \"./Styles\";\r\nimport {PentaWarningError} from \"./PentaWarningError\";\r\nimport {Pentatonic} from \"./Pentatonic\";\r\nimport {RelativePosition} from \"./relativePosition\";\r\n\r\nexport class Playground {\r\n    private canvasElement: HTMLCanvasElement;\r\n    private context: CanvasRenderingContext2D;\r\n\r\n    private styles: Styles;\r\n\r\n    private cellSize: number;\r\n    private offsetX = 30;\r\n    private offsetY = 30;\r\n    private totalWidth: number;\r\n\r\n    constructor(canvasElement: HTMLCanvasElement, context: CanvasRenderingContext2D, styles: Styles) {\r\n        this.canvasElement = canvasElement;\r\n        this.totalWidth = this.canvasElement.parentElement.getBoundingClientRect().width-1;\r\n        this.canvasElement.setAttribute(\"width\", this.totalWidth.toString());\r\n\r\n        this.context = context;\r\n        this.styles = styles;\r\n\r\n        this.canvasElement.style.border = this.styles.canvasBorderWidth + \"px solid \" + this.styles.canvasBorderColor;\r\n//        this.canvasElement.style.margin = \"auto 20px\";\r\n        this.canvasElement.style.background = this.styles.background;\r\n\r\n    }\r\n\r\n    drawCenterSpot(xAxis: number, yAxis: number, radius: number) {\r\n        this.context.beginPath();\r\n        this.context.arc(xAxis, yAxis, radius, 0, 2 * Math.PI);\r\n        this.context.fillStyle = this.styles.fillColor;\r\n        this.context.fill();\r\n        this.context.lineWidth = this.styles.lineWidth;\r\n        this.context.strokeStyle = this.styles.borderColor;\r\n        this.context.stroke();\r\n    }\r\n\r\n    drawCorner(xAxis: number, yAxis: number) {\r\n        this.context.beginPath();\r\n        this.context.arc(xAxis, yAxis, 10, 0, 2 * Math.PI);\r\n        this.context.fillStyle = this.styles.fillColor;\r\n        this.context.fill();\r\n        this.context.lineWidth = this.styles.lineWidth;\r\n        this.context.strokeStyle = this.styles.borderColor;\r\n        this.context.stroke();\r\n    }\r\n\r\n    writeText(text: string, xAxis: number, yAxis: number, font: string = this.styles.font.Heading,\r\n              color: string = this.styles.textColor) {\r\n        this.context.font = font;\r\n        this.context.fillStyle = color;\r\n        this.context.fillText(text, xAxis, yAxis);\r\n\r\n    }\r\n\r\n    drawLine(x1: number, y1: number, x2: number, y2: number) {\r\n        this.context.beginPath();\r\n        this.context.lineWidth = this.styles.borderWidth;\r\n        this.context.fillStyle = this.styles.borderColor;\r\n        this.context.strokeStyle = this.styles.borderColor;\r\n        this.context.moveTo(x1, y1);\r\n        this.context.lineTo(x2, y2);\r\n        this.context.stroke();\r\n        this.context.fill();\r\n    }\r\n\r\n    drawDiffLine(x1: number, y1: number, x2: number, y2: number) {\r\n        this.context.beginPath();\r\n        this.context.lineWidth = this.styles.diffWidth;\r\n        this.context.fillStyle = this.styles.diffColor;\r\n        this.context.strokeStyle = this.styles.diffColor;\r\n        this.context.moveTo(x1, y1);\r\n        this.context.lineTo(x2, y2);\r\n        this.context.stroke();\r\n        this.context.fill();\r\n    }\r\n\r\n\r\n    drawArrowLine(x1: number, y1: number, x2: number, y2: number, isReverseArrow = false) {\r\n        let i;\r\n        this.context.beginPath();\r\n        this.context.moveTo(x1, y1);\r\n        this.context.lineTo(x2, y2);\r\n        this.context.strokeStyle = this.styles.fillColor;\r\n        this.context.lineWidth = this.styles.lineWidth;\r\n        this.context.stroke();\r\n\r\n        let x2ofLine = x2;\r\n        let y2OfLine = y2;\r\n\r\n        if (!isReverseArrow) {\r\n            for (i = 0; i <= 2; i++) {\r\n                x1 = x2ofLine;\r\n                y1 = ((i == 0) || (i == 2)) ? (y2OfLine - 4) : (y2OfLine + 4);\r\n                x2 = (i == 2) ? (x2ofLine) : (x2ofLine + 4);\r\n                y2 = (i == 2) ? (y2OfLine + 4) : y2OfLine;\r\n\r\n                this.context.beginPath();\r\n                this.context.moveTo(x1, y1);\r\n                this.context.lineTo(x2, y2);\r\n                this.context.lineWidth = this.styles.lineWidth;\r\n                this.context.strokeStyle = this.styles.fillColor;\r\n                this.context.stroke();\r\n            }\r\n        }\r\n        else {\r\n            for (i = 0; i <= 2; i++) {\r\n                x1 = x2ofLine;\r\n                y1 = ((i == 0) || (i == 2)) ? (y2OfLine + 4) : (y2OfLine - 4);\r\n                x2 = (i == 2) ? (x2ofLine) : (x2ofLine - 4);\r\n                y2 = (i == 2) ? (y2OfLine - 4) : y2OfLine;\r\n\r\n                this.context.beginPath();\r\n                this.context.moveTo(x1, y1);\r\n                this.context.lineTo(x2, y2);\r\n                this.context.lineWidth = 2;\r\n                this.context.strokeStyle = this.styles.fillColor;\r\n                this.context.stroke();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    //Rectangular Area\r\n    drawRectangleThinLine(xAxis: number, yAxis: number, width: number, height: number) {\r\n        this.context.beginPath();\r\n        this.context.fillStyle = this.styles.fillColor;\r\n        this.context.fill();\r\n        this.context.fillRect(xAxis, yAxis, width, height);\r\n        this.context.lineWidth = this.styles.lineWidth;\r\n        this.context.strokeStyle = this.styles.lineColor;\r\n        this.context.strokeRect(xAxis, yAxis, width, height);\r\n    }\r\n\r\n    drawRectangleBorderLine(xAxis: number, yAxis: number, width: number, height: number) {\r\n        this.context.beginPath();\r\n        // this.context.fillStyle = this.styles.fillColor;\r\n        // this.context.fill();\r\n        // this.context.fillRect(xAxis, yAxis, width, height);\r\n        this.context.lineWidth = this.styles.borderWidth;\r\n        this.context.strokeStyle = this.styles.borderColor;\r\n        this.context.strokeRect(xAxis, yAxis, width, height);\r\n    }\r\n\r\n\r\n    drawPentatonic(pentaWarningError: PentaWarningError, errors: Node, warnings: Node, success: Node) {\r\n        console.log(\"trying to draw: \", pentaWarningError);\r\n        console.log(\"errors: \" + pentaWarningError.errors);\r\n        console.log(\"Warnings: \" + pentaWarningError.warnings);\r\n\r\n        let t: HTMLDivElement = <HTMLDivElement>errors;\r\n        if (pentaWarningError.errors.length > 0) {\r\n            t.innerHTML = \"<ul><li>\" + pentaWarningError.errors.join(\"</li><li>\") + \"</li></ul>\";\r\n        } else {\r\n            t.innerText = \"\";\r\n        }\r\n        if (pentaWarningError.warnings.length > 0) {\r\n            (<HTMLDivElement>warnings).innerHTML =\r\n                \"<ul><li>\" + pentaWarningError.warnings.join(\"</li><li>\") + \"</li></ul>\";\r\n        } else {\r\n            warnings.textContent = \"\";\r\n        }\r\n        if (pentaWarningError.errors.length == 0 && pentaWarningError.warnings.length == 0) {\r\n            success.textContent = \"Success!\";\r\n        } else {\r\n            success.textContent = \"\";\r\n        }\r\n        let pentatonic = pentaWarningError.penta;\r\n        this.cellSize = (this.totalWidth - 2 * this.offsetX) / pentatonic.columns;\r\n        let heightCanvas = this.totalWidth * pentatonic.lines / pentatonic.columns;\r\n        this.canvasElement.setAttribute(\"height\", heightCanvas.toString());\r\n\r\n        this.drawEachCell(pentatonic);\r\n        if (pentaWarningError.errors.length > 0) return;\r\n        this.drawVerticalSeparations(pentatonic);\r\n        this.drawHorizontalSeparations(pentatonic);\r\n        this.drawAllClues(pentatonic);\r\n    }\r\n\r\n    private drawEachCell(pentatonic: Pentatonic) {\r\n        for (let i = 0; i < pentatonic.lines; i++) {\r\n            for (let j = 0; j < pentatonic.columns; j++) {\r\n                this.drawRectangleThinLine(this.offsetX + j * this.cellSize, this.offsetY + i * this.cellSize, this.cellSize, this.cellSize);\r\n            }\r\n        }\r\n        this.drawRectangleBorderLine(this.offsetX, this.offsetY, pentatonic.columns * this.cellSize, pentatonic.lines * this.cellSize);\r\n    }\r\n\r\n    private drawVerticalSeparations(pentatonic: Pentatonic) {\r\n        for (let i = 0; i < pentatonic.lines; i++) {\r\n            for (let j = 1; j < pentatonic.columns; j++) {\r\n                if (pentatonic.cells[i][j].area.id != pentatonic.cells[i][j - 1].area.id) {\r\n                    this.drawLine(this.offsetX + j * this.cellSize,\r\n                        this.offsetY + i * this.cellSize,\r\n                        this.offsetX + j * this.cellSize,\r\n                        this.offsetY + (i + 1) * this.cellSize);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    private drawHorizontalSeparations(pentatonic: Pentatonic) {\r\n        for (let j = 0; j < pentatonic.columns; j++) {\r\n            for (let i = 1; i < pentatonic.lines; i++) {\r\n                if (pentatonic.cells[i][j].area.id != pentatonic.cells[i - 1][j].area.id) {\r\n                    this.drawLine(this.offsetX + j * this.cellSize,\r\n                        this.offsetY + i * this.cellSize,\r\n                        this.offsetX + (j + 1) * this.cellSize,\r\n                        this.offsetY + i * this.cellSize);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private drawAllClues(pentatonic: Pentatonic) {\r\n        pentatonic.cellArray().filter(cell => cell.values.length == 1 || pentatonic.sistersHave(cell.position))\r\n            .forEach(c => {\r\n                if (c.values.length == 1) {\r\n                    this.writeText(c.values[0], this.offsetX + c.position.j * this.cellSize + this.cellSize / 3,\r\n                        this.offsetY + c.position.i * this.cellSize + this.cellSize * 3 / 5);\r\n                }\r\n                if (pentatonic.sistersHave(c.position)) {\r\n                    this.writeText(pentatonic.getSisterSymbol(c.position),\r\n                        this.offsetX + c.position.j * this.cellSize + 0.2 * this.cellSize,\r\n                        this.offsetY + c.position.i * this.cellSize + 0.4 * this.cellSize, this.styles.font.Default, this.styles.sisterColor);\r\n                }\r\n            });\r\n        this.drawDiffOnes(pentatonic);\r\n\r\n    }\r\n\r\n    private drawDiffOnes(pentatonic: Pentatonic) {\r\n        pentatonic.diffOnes.forEach(diffOne => {\r\n            let xArray: number[] = [];\r\n            let yArray: number[] = [];\r\n\r\n            for (let k = 0; k < 5; k++) {\r\n                xArray.push(this.offsetX + diffOne.position1.j * this.cellSize + (this.cellSize * k) / 4);\r\n                yArray.push(this.offsetY + diffOne.position1.i * this.cellSize + (this.cellSize * k) / 4);\r\n            }\r\n            let xStart, xEnd, yStart, yEnd: number;\r\n            switch (diffOne.position1.getPositionRelativeToMe(diffOne.position2)) {\r\n                case RelativePosition.TOP:\r\n                    xStart = xArray[2];\r\n                    xEnd = xArray[2];\r\n                    yStart = 2 * yArray[0] - yArray[1];\r\n                    yEnd = yArray[1];\r\n                    break;\r\n                case RelativePosition.RIGHT:\r\n                    xStart = 2 * xArray[4] - xArray[3];\r\n                    xEnd = xArray[3];\r\n                    yStart = yArray[2];\r\n                    yEnd = yArray[2];\r\n                    break;\r\n                case RelativePosition.BOTTOM:\r\n                    xStart = xArray[2];\r\n                    xEnd = xArray[2];\r\n                    yStart = 2 * yArray[4] - yArray[3];\r\n                    yEnd = yArray[3];\r\n                    break;\r\n                case  RelativePosition.LEFT:\r\n                    xStart = 2 * xArray[0] - xArray[1];\r\n                    xEnd = xArray[1];\r\n                    yStart = yArray[2];\r\n                    yEnd = yArray[2];\r\n                    break;\r\n                case RelativePosition.TOP_RIGHT:\r\n                    xStart = 2 * xArray[4] - xArray[3];\r\n                    xEnd = xArray[3];\r\n                    yStart = 2 * yArray[0] - yArray[1];\r\n                    yEnd = yArray[1];\r\n                    break;\r\n                case RelativePosition.BOTTOM_RIGHT:\r\n                    xStart = 2 * xArray[4] - xArray[3];\r\n                    xEnd = xArray[3];\r\n                    yStart = 2 * yArray[4] - yArray[3];\r\n                    yEnd = yArray[3];\r\n                    break;\r\n                case RelativePosition.BOTTOM_LEFT:\r\n                    xStart = 2 * xArray[0] - xArray[1];\r\n                    xEnd = xArray[1];\r\n                    yStart = 2 * yArray[4] - yArray[3];\r\n                    yEnd = yArray[3];\r\n                    break;\r\n                case RelativePosition.TOP_LEFT:\r\n                    xStart = 2 * xArray[0] - xArray[1];\r\n                    xEnd = xArray[1];\r\n                    yStart = 2 * yArray[0] - yArray[1];\r\n                    yEnd = yArray[1];\r\n                    break;\r\n                case RelativePosition.ILLEGAL:\r\n                    console.log(\"Illegal position\");\r\n                    return;\r\n            }\r\n            this.drawDiffLine(xStart, yStart, xEnd, yEnd);\r\n        })\r\n    }\r\n}\r\n","export class Styles {\r\n    widthCell: number;\r\n    heightCell: number;\r\n    background: string;\r\n    borderColor: string;\r\n    lineColor: string;\r\n    lineWidth: number;\r\n    borderWidth: number;\r\n    canvasBorderWidth: number;\r\n    canvasBorderColor: string;\r\n    fillColor: string;\r\n    textColor: string;\r\n    font: { Default: string, Heading: string };\r\n    diffColor: string;\r\n    diffWidth: number;\r\n    sisterColor: string;\r\n\r\n    constructor(width: number, height: number) {\r\n        this.widthCell = width;\r\n        this.heightCell = height;\r\n        this.background = \"#fff5ea\";\r\n        this.borderColor = \"#343653\";\r\n        this.canvasBorderColor =\"#ae0066\";\r\n        this.canvasBorderWidth = 1;\r\n        this.lineWidth = 2;\r\n        this.borderWidth = 10;\r\n        this.diffWidth = 5;\r\n        this.fillColor = \"#fff0e6\";\r\n        this.textColor = \"#d62061\";\r\n        this.lineColor = \"#6dc2ff\";\r\n        this.diffColor = \"#ff2955\";\r\n        this.sisterColor = \"#339bcb\";\r\n        this.font = {Default: \"27px 'Segoe UI',Arial,sans-serif\", Heading: \"44px 'Segoe UI',Arial,sans-serif\"};\r\n    }\r\n\r\n}","import {PentaWarningError} from \"./PentaWarningError\";\r\nimport {Area} from \"./area\";\r\nimport {Cell} from \"./Cell\";\r\nimport {Position} from \"./position\";\r\nimport {Diff} from \"./diff\";\r\nimport {Sister} from \"./sister\";\r\n\r\nexport class Serializer {\r\n    private static minLines: number = 2;\r\n\r\n    static serialize(textContent: string): PentaWarningError {\r\n        let pentaWarningError = new PentaWarningError();\r\n        let penta = pentaWarningError.penta;\r\n        console.log(\"We want to serialize: \" + textContent);\r\n        let lines = textContent.split(/[\\r\\n]+/);\r\n        if (lines.length < this.minLines) {\r\n            pentaWarningError.addError(\"Text for penta should contain: \\n\" +\r\n                \"author, nbLine nbCols, penta\");\r\n            return pentaWarningError;\r\n        }\r\n        penta.author = lines[0].trim();\r\n        console.log(\"Author is :\" + penta.author);\r\n\r\n        let lineCol = lines[1].trim().split(\" \").map(s => Number(s));\r\n        console.log(\"We have lineCol: \" + lineCol);\r\n        if (lineCol.length != 2) {\r\n            pentaWarningError.addError(\r\n                \"2nd line should provide nb of lines and columns like this \\\"nbLines nbCols\\\"\");\r\n            return pentaWarningError;\r\n        }\r\n        penta.lines = lineCol[0];\r\n        penta.columns = lineCol[1];\r\n        if (lines.length < this.minLines + penta.lines) {\r\n            pentaWarningError.addError(\"You didn't provide a pentatonic with \" + penta.lines + \" lines\");\r\n            return pentaWarningError;\r\n        }\r\n\r\n        this.fillAreas(pentaWarningError, lines, 2);\r\n        if (pentaWarningError.errors.length > 0) return pentaWarningError;\r\n        this.fillEnonce(pentaWarningError, lines, 2 + penta.lines);\r\n\r\n        return pentaWarningError;\r\n    }\r\n\r\n    static fillAreas(penta: PentaWarningError, lines: Array<string>, startLine: number) {\r\n        let mapAreas: { [key: string]: Area } = {};\r\n        let line: string;\r\n        for (let index = startLine; index < startLine + penta.penta.lines; index++) {\r\n            let i = index - startLine;\r\n            line = lines[index].trim();\r\n            if (line == \"\" || line == null) {\r\n                continue;\r\n            }\r\n            let lineCells = [];\r\n            if(line.length != penta.penta.columns) {\r\n                penta.addError(\r\n                    \"Mismatch between number of columns (\" + penta.penta.columns +\r\n                    \") and the size of the line\\\"\" + line + \"\\\" (cf. line number \" + (index + 1) + \")\");\r\n                break;\r\n            }\r\n\r\n            for (let j = 0; j < penta.penta.columns; j++) {\r\n                let cell = new Cell(i, j);\r\n                let area = mapAreas[line[j]];\r\n                if (area == null) {\r\n                    area = new Area(line[j]);\r\n                    mapAreas[line[j]] = area;\r\n                }\r\n                cell.area = area;\r\n                lineCells.push(cell);\r\n            }\r\n            penta.penta.cells.push(lineCells);\r\n        }\r\n        let warnings = penta.penta.fillAreaSize();\r\n        penta.addWarnings(warnings);\r\n    }\r\n\r\n    static fillEnonce(penta: PentaWarningError, lines: Array<string>, startLine: number) {\r\n        let line: string;\r\n        let countArray: number = lines.length;\r\n        let toSister: { [c: string]: Array<Position> } = {};\r\n        for (let i = startLine; i < countArray; i++) {\r\n            line = lines[i].trim();\r\n            if (line == \"\") continue;\r\n\r\n            // we got a number or a constraint\r\n            if (line.startsWith(\"-\")) {\r\n                // DiffOne\r\n                let lineCols = line.substr(1).split(\",\").map(n => +n);\r\n                if (lineCols.length != 4) {\r\n                    penta.addError(\"For a diffOne, you should have 4 numbers: \\\"-i1,j1,i2,j2\\\" for example. But you typed \\\"\" + line + \"\\\"\");\r\n                    break;\r\n                }\r\n                let pos1 = new Position(lineCols[0], lineCols[1]);\r\n                let pos2 = new Position(lineCols[2], lineCols[3]);\r\n                if (pos1 == pos2) {\r\n                    penta.addError(\"Difference one should concern 2 different positions. But you typed \\\"\" + line + \"\\\"\");\r\n                    continue;\r\n                }\r\n                if (!pos1.isNear(pos2)) {\r\n                    penta.addWarning(\"Difference one should concert 2 near positions. But you typed \\\"\" + line + \"\\\"\");\r\n                }\r\n                penta.penta.diffOnes.push(new Diff(pos1, pos2));\r\n                continue;\r\n            }\r\n            // we got a\r\n            let split = line.split(\",\");\r\n            if (split.length != 3) {\r\n                penta.addError(\"Bad input, should be n,i,j, but was \" + line);\r\n                continue;\r\n            }\r\n            if (split[0].length != 1) {\r\n                penta.addError(\"Bad input: \" + split[0] + \" in line \" + line);\r\n                continue;\r\n            }\r\n            let nb = split[0];\r\n            let nLine = +split[1];\r\n            let nCol = +split[2];\r\n            if (nLine >= penta.penta.lines) {\r\n                penta.addError(\r\n                    \"Line i = \" + nLine + \" is out of bounds in \\\"\" + line + \"\\\": number of lines = \" + penta.penta.lines + \" (cf. line \" + (i + 1) + \")\");\r\n                continue;\r\n            }\r\n            if (nCol >= penta.penta.columns) {\r\n                penta.addError(\r\n                    \"Column j = \" + nCol + \" is out of bounds in \\\"\" + line + \"\\\": number of columns = \" + penta.penta.columns + \" (cf. line \" + (i + 1) + \")\");\r\n                continue;\r\n            }\r\n            let cell = penta.penta.cells[nLine][nCol];\r\n            let n: number = +nb;\r\n            if (!Number.isNaN(n)) {\r\n                console.log(\"nb is \" + nb);\r\n                let n: number = +nb;\r\n                console.log(\"Success converting nb to number: \" + n);\r\n                cell.values.push(nb);\r\n            } else {\r\n                if (toSister[nb] == null) {\r\n                    toSister[nb] = [new Position(nLine, nCol)];\r\n                } else {\r\n                    toSister[nb].push(new Position(nLine, nCol));\r\n                }\r\n            }\r\n        }\r\n        for (let keyChar in toSister) {\r\n            penta.penta.sisters.push(new Sister(keyChar, keyChar, toSister[keyChar]));\r\n        }\r\n    }\r\n\r\n}","import {Pentatonic} from \"./Pentatonic\";\r\n\r\nexport class PentaWarningError {\r\n    penta: Pentatonic;\r\n    warnings: Array<string>;\r\n    errors: Array<string>;\r\n\r\n    constructor() {\r\n        this.penta = new Pentatonic();\r\n        this.warnings = [];\r\n        this.errors = [];\r\n    }\r\n\r\n    public addWarning(warn: string) {\r\n        this.warnings.push(warn);\r\n    }\r\n\r\n    public addWarnings(warnings: Array<string>) {\r\n        warnings.forEach(warn => this.addWarning(warn));\r\n    }\r\n\r\n    public addError(error: string) {\r\n        this.errors.push(error);\r\n    }\r\n\r\n    public hasWarningsOrErrors() {\r\n        return this.warnings.length > 0 || this.errors.length > 0;\r\n    }\r\n}","import {Cell} from \"./Cell\";\r\nimport {Area} from \"./area\";\r\nimport {Diff} from \"./diff\";\r\nimport {Sister} from \"./sister\";\r\nimport {Position} from \"./position\";\r\n\r\nexport class Pentatonic {\r\n    id: number = 0;\r\n    version: number = 0;\r\n    areas: string = \"\";\r\n    difficulty: number = 0;\r\n    author: string = \"\";\r\n    filename: string = \"\";\r\n    lines: number;\r\n    columns: number;\r\n    cells: Array<Array<Cell>>;\r\n    diffOnes: Array<Diff>;\r\n    sisters: Array<Sister>;\r\n    private MAX_AREA_SIZE: number = 5;\r\n\r\n    constructor(lines: number = 0, columns: number = 0) {\r\n        this.lines = lines;\r\n        this.columns = columns;\r\n        this.cells = [];\r\n        this.diffOnes = [];\r\n        this.sisters = [];\r\n    }\r\n\r\n    fillAreaSize(): Array<string> {\r\n        let warnings: Array<string> = [];\r\n        let allAreas = this.getAllAreas();\r\n        allAreas.forEach(area => {\r\n            let areaCells: Set<Cell> = this.getAreaCells(area);\r\n            let size = areaCells.size;\r\n            areaCells.forEach(c => c.area.size = size);\r\n            if (size > this.MAX_AREA_SIZE) {\r\n                warnings.push(\r\n                    \"Area with id \" + area.id + \" is bigger than the max (\" + size + \" > \" + this.MAX_AREA_SIZE + \")\");\r\n            }\r\n        });\r\n        return warnings;\r\n    }\r\n\r\n    public cellArray(): Array<Cell> {\r\n        let res: Array<Cell> = [];\r\n        for (let row of this.cells) {\r\n            for (let cell of row) {\r\n                res.push(cell);\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n\r\n    public getAllAreas(): Set<Area> {\r\n        let set: Set<Area> = new Set();\r\n        let merge: Array<Cell> = this.cellArray();\r\n\r\n        merge.forEach((c: Cell) => {\r\n            set.add(c.area)\r\n        });\r\n        return set;\r\n    }\r\n\r\n    private getAreaCells(area: Area): Set<Cell> {\r\n        return new Set(this.cellArray().filter(c => c.area.id == area.id));\r\n    }\r\n\r\n    public getAreaPositions(area: Area): Set<Position> {\r\n        return new Set<Position>(this.cellArray().filter(c => c.area.id == area.id).map(cell => cell.position));\r\n    }\r\n\r\n    public diffOnesHave(position: Position): boolean {\r\n        for (let diff of this.diffOnes) {\r\n            if (diff.position1 == position || diff.position2 == position) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public sistersHave(position: Position): boolean {\r\n        for (let sis of this.sisters) {\r\n            if (sis.positions.filter(pos => pos.i == position.i && pos.j == position.j).length > 0) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getSisterSymbol(position: Position): string {\r\n        for (let sis of this.sisters) {\r\n            if (sis.positions.filter(pos => pos.i == position.i && pos.j == position.j).length > 0) return sis.symbol;\r\n        }\r\n        return \"\";\r\n    }\r\n}","export class Area {\r\n    id: string;\r\n    size: number;\r\n\r\n    constructor(id: string = \"0\", size: number = 0) {\r\n        this.id = id;\r\n        this.size = size;\r\n    }\r\n}","import {Area} from \"./area\";\r\nimport {Position} from \"./position\";\r\n\r\nexport class Cell {\r\n    position: Position;\r\n    area: Area;\r\n    values: Array<string>;\r\n\r\n    constructor(i: number, j: number) {\r\n        this.position = new Position(i, j);\r\n        this.values = [];\r\n    }\r\n}","import {Position} from \"./position\";\r\n\r\nexport class Diff {\r\n    position1: Position;\r\n    position2: Position;\r\n\r\n    constructor(pos1: Position, pos2: Position) {\r\n        this.position1 = pos1;\r\n        this.position2 = pos2;\r\n    }\r\n}","import {Position} from \"./position\";\r\n\r\nexport class Sister {\r\n    id: string;\r\n    symbol: string;\r\n    positions: Array<Position>;\r\n\r\n    constructor(id: string, symbol: string, positions: Array<Position>) {\r\n        this.id = id;\r\n        this.symbol = symbol;\r\n        this.positions = positions;\r\n    }\r\n}","import {PentaWarningError} from \"./PentaWarningError\";\r\nimport {Position} from \"./position\";\r\nimport {Area} from \"./area\";\r\n\r\nexport class PentaChecker {\r\n    static check(pentaWithWarnings: PentaWarningError) {\r\n        PentaChecker.checkAreas(pentaWithWarnings);\r\n    }\r\n\r\n    private static checkAreas(pentaWithWarnings: PentaWarningError) {\r\n        let penta = pentaWithWarnings.penta;\r\n        penta.getAllAreas().forEach((area: Area) => {\r\n            let areaPositions = penta.getAreaPositions(area);\r\n            // To array\r\n            let positionsArray: Array<Position> = [];\r\n            areaPositions.forEach(p => positionsArray.push(p));\r\n            // Check adjacency\r\n            if (!this.checkAdjacent(positionsArray)) {\r\n                pentaWithWarnings.addWarning(\"Probable error with area id \" + area.id + \": it has disjoint areas!\");\r\n            }\r\n        })\r\n    }\r\n\r\n    private static checkAdjacent(areaPositions: Array<Position>): boolean {\r\n        if (areaPositions.length == 0) return true;\r\n        // We create a set to store the adjacent elements\r\n        let processed: Array<Position> = [];\r\n        // We will add different elements in that set, that will be the values of the variable element\r\n        // The first element we add is the first of the input set\r\n        let element: Position = areaPositions[0];\r\n        // As long as there is a coincident element, we repeat the process\r\n        while (element != null) {\r\n            // We start by adding the element to the processed ones\r\n            processed.push(element);\r\n            // We remove it from the input\r\n            let indexToRemove = areaPositions.indexOf(element, 0);\r\n            if (indexToRemove > -1) {\r\n                areaPositions.splice(indexToRemove, 1);\r\n            }\r\n            // We get a new element to add\r\n            element = this.getFirstAdjacentSets(processed, areaPositions)\r\n        }\r\n        // If the input is empty, it means that every element has been successfully added\r\n        // to the processed ones, thus this input is correct\r\n        return areaPositions.length == 0;\r\n    }\r\n\r\n    private static getFirstAdjacent(position: Position, others: Array<Position>): Position {\r\n        for (let p of others) {\r\n            if (position.isAdjacent(p)) return p;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private static getFirstAdjacentSets(pos1: Array<Position>, pos2: Array<Position>): Position {\r\n        for (let p of pos1) {\r\n            let firstAdj = this.getFirstAdjacent(p, pos2);\r\n            if (firstAdj != null) return firstAdj;\r\n        }\r\n        return null;\r\n    }\r\n\r\n}","import {Value} from \"./value\";\r\nimport {Sister} from \"./sister\";\r\nimport {Diff} from \"./diff\";\r\nimport {Pentatonic} from \"./Pentatonic\";\r\n\r\nexport class PentaJson {\r\n    author: String;\r\n    values: Array<Value>;\r\n    height: number;\r\n    width: number;\r\n    difficulty: number;\r\n    name: String;\r\n    data: Array<Array<String>>;\r\n    differences: Array<Diff>;\r\n    sisters: Array<Sister>;\r\n\r\n    constructor() {\r\n        // this.height = height;\r\n        // this.author = author;\r\n        this.values = [];\r\n        // this.width = width;\r\n        // this.difficulty = difficulty;\r\n        // this.name = name;\r\n        this.data = [];\r\n        this.differences = [];\r\n        this.sisters = [];\r\n    }\r\n\r\n    static fromPentatonic(penta: Pentatonic): PentaJson {\r\n        let res = new PentaJson();\r\n        res.author = penta.author;\r\n        res.difficulty = penta.difficulty;\r\n        res.name = penta.filename;\r\n        res.width = penta.columns;\r\n        res.height = penta.lines;\r\n        res.differences = penta.diffOnes;\r\n        res.sisters = penta.sisters;\r\n\r\n        res.data = penta.cells.map(row => row.map(cell => cell.area.id));\r\n        res.values = penta.cellArray()\r\n            .filter(cell => cell.values.length == 1)\r\n            .map(cell => new Value(+cell.values[0], cell.position.i, cell.position.j));\r\n\r\n        return res;\r\n    }\r\n}\r\n\r\n","export class Value {\r\n    val: number;\r\n    i: number;\r\n    j: number;\r\n\r\n    constructor(val: number, i: number, j: number) {\r\n        this.val = val;\r\n        this.i = i;\r\n        this.j = j;\r\n    }\r\n}"],"sourceRoot":""}