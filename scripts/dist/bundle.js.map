{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/relativePosition.ts","webpack:///./src/position.ts","webpack:///./src/doDraw.ts","webpack:///./src/playground.ts","webpack:///./src/Styles.ts","webpack:///./src/serializer.ts","webpack:///./src/PentaWarningError.ts","webpack:///./src/Pentatonic.ts","webpack:///./src/area.ts","webpack:///./src/Cell.ts","webpack:///./src/diff.ts","webpack:///./src/sister.ts","webpack:///./src/PentaChecker.ts","webpack:///./src/pentaJson.ts","webpack:///./src/value.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","RelativePosition","relativePosition_1","Position","[object Object]","j","this","pos","Math","abs","position","isNear","ILLEGAL","bottom","right","TOP_LEFT","TOP","TOP_RIGHT","LEFT","RIGHT","BOTTOM_LEFT","BOTTOM","BOTTOM_RIGHT","playground_1","Styles_1","serializer_1","PentaChecker_1","pentaJson_1","window","onload","textEditPenta","document","getElementById","buttonVisualise","buttonConvert","inputDifficulty","inputTitle","errors","warnings","success","canvasElement","context2D","getContext","visualise","penta","Serializer","serialize","difficulty","filename","PentaChecker","check","ground","drawPentatonic","Playground","Styles","onclick","pentaJson","PentaJson","fromPentatonic","jsonString","JSON","stringify","text","element","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","download","context","styles","offsetX","offsetY","totalWidth","parentElement","getBoundingClientRect","width","toString","border","canvasBorderWidth","canvasBorderColor","margin","background","xAxis","yAxis","radius","beginPath","arc","PI","fillStyle","fillColor","fill","lineWidth","strokeStyle","borderColor","stroke","font","Heading","color","textColor","fillText","x1","y1","x2","y2","borderWidth","moveTo","lineTo","diffWidth","diffColor","isReverseArrow","x2ofLine","y2OfLine","height","fillRect","lineColor","strokeRect","pentaWarningError","console","log","length","innerHTML","join","innerText","textContent","pentatonic","cellSize","columns","heightCanvas","lines","drawEachCell","drawVerticalSeparations","drawHorizontalSeparations","drawAllClues","drawRectangleThinLine","drawRectangleBorderLine","cells","area","id","drawLine","cellArray","filter","cell","values","sistersHave","forEach","writeText","getSisterSymbol","Default","sisterColor","drawDiffOnes","diffOnes","diffOne","xStart","xEnd","yStart","yEnd","xArray","yArray","k","push","position1","getPositionRelativeToMe","position2","drawDiffLine","widthCell","heightCell","PentaWarningError_1","area_1","Cell_1","position_1","diff_1","sister_1","PentaWarningError","split","minLines","addError","author","trim","lineCol","map","Number","fillAreas","fillEnonce","startLine","line","mapAreas","index","lineCells","Cell","Area","fillAreaSize","addWarnings","countArray","toSister","startsWith","lineCols","substr","pos1","pos2","addWarning","Diff","nb","nLine","nCol","isNaN","keyChar","sisters","Sister","Pentatonic_1","Pentatonic","warn","error","version","areas","MAX_AREA_SIZE","getAllAreas","areaCells","getAreaCells","size","res","row","set","Set","add","diff","sis","positions","symbol","pentaWithWarnings","checkAreas","areaPositions","getAreaPositions","checkAdjacent","value_1","data","differences","Value","val"],"mappings":"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","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","export enum RelativePosition {\r\n    TOP, TOP_RIGHT, RIGHT, BOTTOM_RIGHT, BOTTOM, BOTTOM_LEFT, LEFT, TOP_LEFT, ILLEGAL\r\n}","import {RelativePosition} from \"./relativePosition\";\r\n\r\nexport class Position {\r\n\r\n    i: number;\r\n    j: number;\r\n\r\n    constructor(i: number, j: number) {\r\n        this.i = i;\r\n        this.j = j;\r\n    }\r\n\r\n    isNear(pos: Position): boolean {\r\n        if (Math.abs(pos.i - this.i) > 1 || Math.abs(pos.j - this.j) > 1) {\r\n            return false;\r\n        }\r\n        if (pos.i == this.i && pos.j == this.j) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    getPositionRelativeToMe(position: Position): RelativePosition {\r\n        if (!position.isNear(this)) {\r\n            return RelativePosition.ILLEGAL;\r\n        }\r\n        /**\r\n         * bottom == 1 => bottom\r\n         * bottom == 0 => middle\r\n         * bottom == -1 => top\r\n         */\r\n        let bottom = position.i - this.i;\r\n        /**\r\n         * right == 1 => right\r\n         * right == 0 => middle\r\n         * right == -1 => left\r\n         */\r\n        let right = position.j - this.j;\r\n        if (Math.abs(bottom) > 1 || Math.abs(right) > 1) return RelativePosition.ILLEGAL;\r\n\r\n        if (bottom < 0 && right < 0) return RelativePosition.TOP_LEFT;\r\n        if (bottom < 0 && right == 0) return RelativePosition.TOP;\r\n        if (bottom < 0 && right > 0) return RelativePosition.TOP_RIGHT;\r\n\r\n        if (bottom == 0 && right < 0) return RelativePosition.LEFT;\r\n        if (bottom == 0 && right > 0) return RelativePosition.RIGHT;\r\n\r\n        if (bottom > 0 && right < 0) return RelativePosition.BOTTOM_LEFT;\r\n        if (bottom > 0 && right == 0) return RelativePosition.BOTTOM;\r\n        if (bottom > 0 && right > 0) return RelativePosition.BOTTOM_RIGHT;\r\n        return RelativePosition.ILLEGAL;\r\n    }\r\n\r\n}\r\n\r\n","import {Playground} from \"./playground\";\r\nimport {Styles} from \"./Styles\";\r\nimport {PentaWarningError} from \"./PentaWarningError\";\r\nimport {Serializer} from \"./serializer\";\r\nimport {PentaChecker} from \"./PentaChecker\";\r\nimport {PentaJson} from \"./pentaJson\";\r\nwindow.onload = function () {\r\n    let textEditPenta = document.getElementById(\"text-penta\") as HTMLTextAreaElement;\r\n    let buttonVisualise = document.getElementById(\"btn-visualise\") as HTMLButtonElement;\r\n    let buttonConvert = document.getElementById(\"btn-convert\") as HTMLButtonElement;\r\n\r\n    let inputDifficulty = document.getElementById(\"difficulty-input\") as HTMLInputElement;\r\n    let inputTitle = document.getElementById(\"title-input\") as HTMLInputElement;\r\n    let errors: Node = document.getElementById(\"errors\");\r\n    let warnings: Node = document.getElementById(\"warnings\");\r\n    let success: Node = document.getElementById(\"success\");\r\n    let canvasElement = document.getElementById(\"penta-representation\") as HTMLCanvasElement;\r\n    let context2D: CanvasRenderingContext2D = canvasElement.getContext(\"2d\");\r\n\r\n    function visualise(): PentaWarningError {\r\n        let penta: PentaWarningError = Serializer.serialize(textEditPenta.value);\r\n        penta.penta.difficulty = +inputDifficulty.value;\r\n        penta.penta.filename = inputTitle.value;\r\n        PentaChecker.check(penta);\r\n        ground.drawPentatonic(penta, errors, warnings, success);\r\n        return penta;\r\n    }\r\n\r\n    function download(filename: string, text: string) {\r\n        let element = document.createElement('a');\r\n        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\r\n        element.setAttribute('download', filename);\r\n\r\n        element.style.display = 'none';\r\n        document.body.appendChild(element);\r\n\r\n        element.click();\r\n\r\n        document.body.removeChild(element);\r\n    }\r\n    let ground = new Playground(canvasElement, context2D, new Styles(20, 20));\r\n    buttonVisualise.onclick = visualise;\r\n    buttonConvert.onclick = () => {\r\n        let penta = visualise();\r\n        let pentaJson = PentaJson.fromPentatonic(penta.penta);\r\n        let jsonString = JSON.stringify(pentaJson);\r\n        download(pentaJson.name + \".json\", jsonString);\r\n    }\r\n\r\n};","import {Styles} from \"./Styles\";\r\nimport {PentaWarningError} from \"./PentaWarningError\";\r\nimport {Pentatonic} from \"./Pentatonic\";\r\nimport {RelativePosition} from \"./relativePosition\";\r\n\r\nexport class Playground {\r\n    private canvasElement: HTMLCanvasElement;\r\n    private context: CanvasRenderingContext2D;\r\n\r\n    private styles: Styles;\r\n\r\n    private cellSize: number;\r\n    private offsetX = 30;\r\n    private offsetY = 30;\r\n    private totalWidth: number;\r\n\r\n    constructor(canvasElement: HTMLCanvasElement, context: CanvasRenderingContext2D, styles: Styles) {\r\n        this.canvasElement = canvasElement;\r\n        this.totalWidth = this.canvasElement.parentElement.getBoundingClientRect().width;\r\n        this.canvasElement.setAttribute(\"width\", this.totalWidth.toString());\r\n\r\n        this.context = context;\r\n        this.styles = styles;\r\n\r\n        this.canvasElement.style.border = this.styles.canvasBorderWidth + \"px solid \" + this.styles.canvasBorderColor;\r\n        this.canvasElement.style.margin = \"auto 20px\";\r\n        this.canvasElement.style.background = this.styles.background;\r\n\r\n    }\r\n\r\n    drawCenterSpot(xAxis: number, yAxis: number, radius: number) {\r\n        this.context.beginPath();\r\n        this.context.arc(xAxis, yAxis, radius, 0, 2 * Math.PI);\r\n        this.context.fillStyle = this.styles.fillColor;\r\n        this.context.fill();\r\n        this.context.lineWidth = this.styles.lineWidth;\r\n        this.context.strokeStyle = this.styles.borderColor;\r\n        this.context.stroke();\r\n    }\r\n\r\n    drawCorner(xAxis: number, yAxis: number) {\r\n        this.context.beginPath();\r\n        this.context.arc(xAxis, yAxis, 10, 0, 2 * Math.PI);\r\n        this.context.fillStyle = this.styles.fillColor;\r\n        this.context.fill();\r\n        this.context.lineWidth = this.styles.lineWidth;\r\n        this.context.strokeStyle = this.styles.borderColor;\r\n        this.context.stroke();\r\n    }\r\n\r\n    writeText(text: string, xAxis: number, yAxis: number, font: string = this.styles.font.Heading,\r\n              color: string = this.styles.textColor) {\r\n        this.context.font = font;\r\n        this.context.fillStyle = color;\r\n        this.context.fillText(text, xAxis, yAxis);\r\n\r\n    }\r\n\r\n    drawLine(x1: number, y1: number, x2: number, y2: number) {\r\n        this.context.beginPath();\r\n        this.context.lineWidth = this.styles.borderWidth;\r\n        this.context.fillStyle = this.styles.borderColor;\r\n        this.context.strokeStyle = this.styles.borderColor;\r\n        this.context.moveTo(x1, y1);\r\n        this.context.lineTo(x2, y2);\r\n        this.context.stroke();\r\n        this.context.fill();\r\n    }\r\n\r\n    drawDiffLine(x1: number, y1: number, x2: number, y2: number) {\r\n        this.context.beginPath();\r\n        this.context.lineWidth = this.styles.diffWidth;\r\n        this.context.fillStyle = this.styles.diffColor;\r\n        this.context.strokeStyle = this.styles.diffColor;\r\n        this.context.moveTo(x1, y1);\r\n        this.context.lineTo(x2, y2);\r\n        this.context.stroke();\r\n        this.context.fill();\r\n    }\r\n\r\n\r\n    drawArrowLine(x1: number, y1: number, x2: number, y2: number, isReverseArrow = false) {\r\n        let i;\r\n        this.context.beginPath();\r\n        this.context.moveTo(x1, y1);\r\n        this.context.lineTo(x2, y2);\r\n        this.context.strokeStyle = this.styles.fillColor;\r\n        this.context.lineWidth = this.styles.lineWidth;\r\n        this.context.stroke();\r\n\r\n        let x2ofLine = x2;\r\n        let y2OfLine = y2;\r\n\r\n        if (!isReverseArrow) {\r\n            for (i = 0; i <= 2; i++) {\r\n                x1 = x2ofLine;\r\n                y1 = ((i == 0) || (i == 2)) ? (y2OfLine - 4) : (y2OfLine + 4);\r\n                x2 = (i == 2) ? (x2ofLine) : (x2ofLine + 4);\r\n                y2 = (i == 2) ? (y2OfLine + 4) : y2OfLine;\r\n\r\n                this.context.beginPath();\r\n                this.context.moveTo(x1, y1);\r\n                this.context.lineTo(x2, y2);\r\n                this.context.lineWidth = this.styles.lineWidth;\r\n                this.context.strokeStyle = this.styles.fillColor;\r\n                this.context.stroke();\r\n            }\r\n        }\r\n        else {\r\n            for (i = 0; i <= 2; i++) {\r\n                x1 = x2ofLine;\r\n                y1 = ((i == 0) || (i == 2)) ? (y2OfLine + 4) : (y2OfLine - 4);\r\n                x2 = (i == 2) ? (x2ofLine) : (x2ofLine - 4);\r\n                y2 = (i == 2) ? (y2OfLine - 4) : y2OfLine;\r\n\r\n                this.context.beginPath();\r\n                this.context.moveTo(x1, y1);\r\n                this.context.lineTo(x2, y2);\r\n                this.context.lineWidth = 2;\r\n                this.context.strokeStyle = this.styles.fillColor;\r\n                this.context.stroke();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    //Rectangular Area\r\n    drawRectangleThinLine(xAxis: number, yAxis: number, width: number, height: number) {\r\n        this.context.beginPath();\r\n        this.context.fillStyle = this.styles.fillColor;\r\n        this.context.fill();\r\n        this.context.fillRect(xAxis, yAxis, width, height);\r\n        this.context.lineWidth = this.styles.lineWidth;\r\n        this.context.strokeStyle = this.styles.lineColor;\r\n        this.context.strokeRect(xAxis, yAxis, width, height);\r\n    }\r\n\r\n    drawRectangleBorderLine(xAxis: number, yAxis: number, width: number, height: number) {\r\n        this.context.beginPath();\r\n        // this.context.fillStyle = this.styles.fillColor;\r\n        // this.context.fill();\r\n        // this.context.fillRect(xAxis, yAxis, width, height);\r\n        this.context.lineWidth = this.styles.borderWidth;\r\n        this.context.strokeStyle = this.styles.borderColor;\r\n        this.context.strokeRect(xAxis, yAxis, width, height);\r\n    }\r\n\r\n\r\n    drawPentatonic(pentaWarningError: PentaWarningError, errors: Node, warnings: Node, success: Node) {\r\n        console.log(\"trying to draw: \", pentaWarningError);\r\n        console.log(\"errors: \" + pentaWarningError.errors);\r\n        console.log(\"Warnings: \" + pentaWarningError.warnings);\r\n\r\n        let t: HTMLDivElement = <HTMLDivElement>errors;\r\n        if (pentaWarningError.errors.length > 0) {\r\n            t.innerHTML = \"<ul><li>\" + pentaWarningError.errors.join(\"</li><li>\") + \"</li></ul>\";\r\n        } else {\r\n            t.innerText = \"\";\r\n        }\r\n        if (pentaWarningError.warnings.length > 0) {\r\n            (<HTMLDivElement>warnings).innerHTML =\r\n                \"<ul><li>\" + pentaWarningError.warnings.join(\"</li><li>\") + \"</li></ul>\";\r\n        } else {\r\n            warnings.textContent = \"\";\r\n        }\r\n        if (pentaWarningError.errors.length == 0 && pentaWarningError.warnings.length == 0) {\r\n            success.textContent = \"Success!\";\r\n        } else {\r\n            success.textContent = \"\";\r\n        }\r\n        let pentatonic = pentaWarningError.penta;\r\n        this.cellSize = (this.totalWidth - 2 * this.offsetX) / pentatonic.columns;\r\n        let heightCanvas = this.totalWidth * pentatonic.lines / pentatonic.columns;\r\n        this.canvasElement.setAttribute(\"height\", heightCanvas.toString());\r\n\r\n        this.drawEachCell(pentatonic);\r\n        if (pentaWarningError.errors.length > 0) return;\r\n        this.drawVerticalSeparations(pentatonic);\r\n        this.drawHorizontalSeparations(pentatonic);\r\n        this.drawAllClues(pentatonic);\r\n    }\r\n\r\n    private drawEachCell(pentatonic: Pentatonic) {\r\n        for (let i = 0; i < pentatonic.lines; i++) {\r\n            for (let j = 0; j < pentatonic.columns; j++) {\r\n                this.drawRectangleThinLine(this.offsetX + j * this.cellSize, this.offsetY + i * this.cellSize, this.cellSize, this.cellSize);\r\n            }\r\n        }\r\n        this.drawRectangleBorderLine(this.offsetX, this.offsetY, pentatonic.columns * this.cellSize, pentatonic.lines * this.cellSize);\r\n    }\r\n\r\n    private drawVerticalSeparations(pentatonic: Pentatonic) {\r\n        for (let i = 0; i < pentatonic.lines; i++) {\r\n            for (let j = 1; j < pentatonic.columns; j++) {\r\n                if (pentatonic.cells[i][j].area.id != pentatonic.cells[i][j - 1].area.id) {\r\n                    this.drawLine(this.offsetX + j * this.cellSize,\r\n                        this.offsetY + i * this.cellSize,\r\n                        this.offsetX + j * this.cellSize,\r\n                        this.offsetY + (i + 1) * this.cellSize);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    private drawHorizontalSeparations(pentatonic: Pentatonic) {\r\n        for (let j = 0; j < pentatonic.columns; j++) {\r\n            for (let i = 1; i < pentatonic.lines; i++) {\r\n                if (pentatonic.cells[i][j].area.id != pentatonic.cells[i - 1][j].area.id) {\r\n                    this.drawLine(this.offsetX + j * this.cellSize,\r\n                        this.offsetY + i * this.cellSize,\r\n                        this.offsetX + (j + 1) * this.cellSize,\r\n                        this.offsetY + i * this.cellSize);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private drawAllClues(pentatonic: Pentatonic) {\r\n        pentatonic.cellArray().filter(cell => cell.values.length == 1 || pentatonic.sistersHave(cell.position))\r\n            .forEach(c => {\r\n                if (c.values.length == 1) {\r\n                    this.writeText(c.values[0], this.offsetX + c.position.j * this.cellSize + this.cellSize / 3,\r\n                        this.offsetY + c.position.i * this.cellSize + this.cellSize * 3 / 5);\r\n                }\r\n                if (pentatonic.sistersHave(c.position)) {\r\n                    this.writeText(pentatonic.getSisterSymbol(c.position),\r\n                        this.offsetX + c.position.j * this.cellSize + 0.2 * this.cellSize,\r\n                        this.offsetY + c.position.i * this.cellSize + 0.4 * this.cellSize, this.styles.font.Default, this.styles.sisterColor);\r\n                }\r\n            });\r\n        this.drawDiffOnes(pentatonic);\r\n\r\n    }\r\n\r\n    private drawDiffOnes(pentatonic: Pentatonic) {\r\n        pentatonic.diffOnes.forEach(diffOne => {\r\n            let xArray: number[] = [];\r\n            let yArray: number[] = [];\r\n\r\n            for (let k = 0; k < 5; k++) {\r\n                xArray.push(this.offsetX + diffOne.position1.j * this.cellSize + (this.cellSize * k) / 4);\r\n                yArray.push(this.offsetY + diffOne.position1.i * this.cellSize + (this.cellSize * k) / 4);\r\n            }\r\n            let xStart, xEnd, yStart, yEnd: number;\r\n            switch (diffOne.position1.getPositionRelativeToMe(diffOne.position2)) {\r\n                case RelativePosition.TOP:\r\n                    xStart = xArray[2];\r\n                    xEnd = xArray[2];\r\n                    yStart = 2 * yArray[0] - yArray[1];\r\n                    yEnd = yArray[1];\r\n                    break;\r\n                case RelativePosition.RIGHT:\r\n                    xStart = 2 * xArray[4] - xArray[3];\r\n                    xEnd = xArray[3];\r\n                    yStart = yArray[2];\r\n                    yEnd = yArray[2];\r\n                    break;\r\n                case RelativePosition.BOTTOM:\r\n                    xStart = xArray[2];\r\n                    xEnd = xArray[2];\r\n                    yStart = 2 * yArray[4] - yArray[3];\r\n                    yEnd = yArray[3];\r\n                    break;\r\n                case  RelativePosition.LEFT:\r\n                    xStart = 2 * xArray[0] - xArray[1];\r\n                    xEnd = xArray[1];\r\n                    yStart = yArray[2];\r\n                    yEnd = yArray[2];\r\n                    break;\r\n                case RelativePosition.TOP_RIGHT:\r\n                    xStart = 2 * xArray[4] - xArray[3];\r\n                    xEnd = xArray[3];\r\n                    yStart = 2 * yArray[0] - yArray[1];\r\n                    yEnd = yArray[1];\r\n                    break;\r\n                case RelativePosition.BOTTOM_RIGHT:\r\n                    xStart = 2 * xArray[4] - xArray[3];\r\n                    xEnd = xArray[3];\r\n                    yStart = 2 * yArray[4] - yArray[3];\r\n                    yEnd = yArray[3];\r\n                    break;\r\n                case RelativePosition.BOTTOM_LEFT:\r\n                    xStart = 2 * xArray[0] - xArray[1];\r\n                    xEnd = xArray[1];\r\n                    yStart = 2 * yArray[4] - yArray[3];\r\n                    yEnd = yArray[3];\r\n                    break;\r\n                case RelativePosition.TOP_LEFT:\r\n                    xStart = 2 * xArray[0] - xArray[1];\r\n                    xEnd = xArray[1];\r\n                    yStart = 2 * yArray[0] - yArray[1];\r\n                    yEnd = yArray[1];\r\n                    break;\r\n                case RelativePosition.ILLEGAL:\r\n                    console.log(\"Illegal position\");\r\n                    return;\r\n            }\r\n            this.drawDiffLine(xStart, yStart, xEnd, yEnd);\r\n        })\r\n    }\r\n}\r\n","export class Styles {\r\n    widthCell: number;\r\n    heightCell: number;\r\n    background: string;\r\n    borderColor: string;\r\n    lineColor: string;\r\n    lineWidth: number;\r\n    borderWidth: number;\r\n    canvasBorderWidth: number;\r\n    canvasBorderColor: string;\r\n    fillColor: string;\r\n    textColor: string;\r\n    font: { Default: string, Heading: string };\r\n    diffColor: string;\r\n    diffWidth: number;\r\n    sisterColor: string;\r\n\r\n    constructor(width: number, height: number) {\r\n        this.widthCell = width;\r\n        this.heightCell = height;\r\n        this.background = \"#fff5ea\";\r\n        this.borderColor = \"#343653\";\r\n        this.canvasBorderColor =\"#ae0066\";\r\n        this.canvasBorderWidth = 1;\r\n        this.lineWidth = 2;\r\n        this.borderWidth = 10;\r\n        this.diffWidth = 5;\r\n        this.fillColor = \"#fff0e6\";\r\n        this.textColor = \"#d62061\";\r\n        this.lineColor = \"#6dc2ff\";\r\n        this.diffColor = \"#ff2955\";\r\n        this.sisterColor = \"#339bcb\";\r\n        this.font = {Default: \"27px 'Segoe UI',Arial,sans-serif\", Heading: \"44px 'Segoe UI',Arial,sans-serif\"};\r\n    }\r\n\r\n}","import {PentaWarningError} from \"./PentaWarningError\";\r\nimport {Area} from \"./area\";\r\nimport {Cell} from \"./Cell\";\r\nimport {Position} from \"./position\";\r\nimport {Diff} from \"./diff\";\r\nimport {Sister} from \"./sister\";\r\n\r\nexport class Serializer {\r\n    private static minLines: number = 2;\r\n\r\n    static serialize(textContent: string): PentaWarningError {\r\n        let pentaWarningError = new PentaWarningError();\r\n        let penta = pentaWarningError.penta;\r\n        console.log(\"We want to serialize: \" + textContent);\r\n        let lines = textContent.split(/[\\r\\n]+/);\r\n        if (lines.length < this.minLines) {\r\n            pentaWarningError.addError(\"Text for penta should contain: \\n\" +\r\n                \"author, nbLine nbCols, penta\");\r\n            return pentaWarningError;\r\n        }\r\n        penta.author = lines[0].trim();\r\n        console.log(\"Author is :\" + penta.author);\r\n\r\n        let lineCol = lines[1].trim().split(\" \").map(s => Number(s));\r\n        console.log(\"We have lineCol: \" + lineCol);\r\n        if (lineCol.length != 2) {\r\n            pentaWarningError.addError(\r\n                \"2nd line should provide nb of lines and columns like this \\\"nbLines nbCols\\\"\");\r\n            return pentaWarningError;\r\n        }\r\n        penta.lines = lineCol[0];\r\n        penta.columns = lineCol[1];\r\n        if (lines.length < this.minLines + penta.lines) {\r\n            pentaWarningError.addError(\"You didn't provide a pentatonic with \" + penta.lines + \" lines\");\r\n            return pentaWarningError;\r\n        }\r\n\r\n        this.fillAreas(pentaWarningError, lines, 2);\r\n        if (pentaWarningError.errors.length > 0) return pentaWarningError;\r\n        this.fillEnonce(pentaWarningError, lines, 2 + penta.lines);\r\n\r\n        return pentaWarningError;\r\n    }\r\n\r\n    static fillAreas(penta: PentaWarningError, lines: Array<string>, startLine: number) {\r\n        let mapAreas: { [key: string]: Area } = {};\r\n        let line: string;\r\n        for (let index = startLine; index < startLine + penta.penta.lines; index++) {\r\n            let i = index - startLine;\r\n            line = lines[index].trim();\r\n            if (line == \"\" || line == null) {\r\n                continue;\r\n            }\r\n            let lineCells = [];\r\n            if(line.length != penta.penta.columns) {\r\n                penta.addError(\r\n                    \"Mismatch between number of columns (\" + penta.penta.columns +\r\n                    \") and the size of the line\\\"\" + line + \"\\\" (cf. line number \" + (index + 1) + \")\");\r\n                break;\r\n            }\r\n\r\n            for (let j = 0; j < penta.penta.columns; j++) {\r\n                let cell = new Cell(i, j);\r\n                let area = mapAreas[line[j]];\r\n                if (area == null) {\r\n                    area = new Area(line[j]);\r\n                    mapAreas[line[j]] = area;\r\n                }\r\n                cell.area = area;\r\n                lineCells.push(cell);\r\n            }\r\n            penta.penta.cells.push(lineCells);\r\n        }\r\n        let warnings = penta.penta.fillAreaSize();\r\n        penta.addWarnings(warnings);\r\n    }\r\n\r\n    static fillEnonce(penta: PentaWarningError, lines: Array<string>, startLine: number) {\r\n        let line: string;\r\n        let countArray: number = lines.length;\r\n        let toSister: { [c: string]: Array<Position> } = {};\r\n        for (let i = startLine; i < countArray; i++) {\r\n            line = lines[i].trim();\r\n            if (line == \"\") continue;\r\n\r\n            // we got a number or a constraint\r\n            if (line.startsWith(\"-\")) {\r\n                // DiffOne\r\n                let lineCols = line.substr(1).split(\",\").map(n => +n);\r\n                if (lineCols.length != 4) {\r\n                    penta.addError(\"For a diffOne, you should have 4 numbers: \\\"-i1,j1,i2,j2\\\" for example. But you typed \\\"\" + line + \"\\\"\");\r\n                    break;\r\n                }\r\n                let pos1 = new Position(lineCols[0], lineCols[1]);\r\n                let pos2 = new Position(lineCols[2], lineCols[3]);\r\n                if (pos1 == pos2) {\r\n                    penta.addError(\"Difference one should concern 2 different positions. But you typed \\\"\" + line + \"\\\"\");\r\n                    continue;\r\n                }\r\n                if (!pos1.isNear(pos2)) {\r\n                    penta.addWarning(\"Difference one should concert 2 near positions. But you typed \\\"\" + line + \"\\\"\");\r\n                }\r\n                penta.penta.diffOnes.push(new Diff(pos1, pos2));\r\n                continue;\r\n            }\r\n            // we got a\r\n            let split = line.split(\",\");\r\n            if (split.length != 3) {\r\n                penta.addError(\"Bad input, should be n,i,j, but was \" + line);\r\n                continue;\r\n            }\r\n            if (split[0].length != 1) {\r\n                penta.addError(\"Bad input: \" + split[0] + \" in line \" + line);\r\n                continue;\r\n            }\r\n            let nb = split[0];\r\n            let nLine = +split[1];\r\n            let nCol = +split[2];\r\n            if (nLine >= penta.penta.lines) {\r\n                penta.addError(\r\n                    \"Line i = \" + nLine + \" is out of bounds in \\\"\" + line + \"\\\": number of lines = \" + penta.penta.lines + \" (cf. line \" + (i + 1) + \")\");\r\n                continue;\r\n            }\r\n            if (nCol >= penta.penta.columns) {\r\n                penta.addError(\r\n                    \"Column j = \" + nCol + \" is out of bounds in \\\"\" + line + \"\\\": number of columns = \" + penta.penta.columns + \" (cf. line \" + (i + 1) + \")\");\r\n                continue;\r\n            }\r\n            let cell = penta.penta.cells[nLine][nCol];\r\n            let n: number = +nb;\r\n            if (!Number.isNaN(n)) {\r\n                console.log(\"nb is \" + nb);\r\n                let n: number = +nb;\r\n                console.log(\"Success converting nb to number: \" + n);\r\n                cell.values.push(nb);\r\n            } else {\r\n                if (toSister[nb] == null) {\r\n                    toSister[nb] = [new Position(nLine, nCol)];\r\n                } else {\r\n                    toSister[nb].push(new Position(nLine, nCol));\r\n                }\r\n            }\r\n        }\r\n        for (let keyChar in toSister) {\r\n            penta.penta.sisters.push(new Sister(keyChar, keyChar, toSister[keyChar]));\r\n        }\r\n    }\r\n\r\n}","import {Pentatonic} from \"./Pentatonic\";\r\n\r\nexport class PentaWarningError {\r\n    penta: Pentatonic;\r\n    warnings: Array<string>;\r\n    errors: Array<string>;\r\n\r\n    constructor() {\r\n        this.penta = new Pentatonic();\r\n        this.warnings = [];\r\n        this.errors = [];\r\n    }\r\n\r\n    public addWarning(warn: string) {\r\n        this.warnings.push(warn);\r\n    }\r\n\r\n    public addWarnings(warnings: Array<string>) {\r\n        warnings.forEach(warn => this.addWarning(warn));\r\n    }\r\n\r\n    public addError(error: string) {\r\n        this.errors.push(error);\r\n    }\r\n\r\n}","import {Cell} from \"./Cell\";\r\nimport {Area} from \"./area\";\r\nimport {Diff} from \"./diff\";\r\nimport {Sister} from \"./sister\";\r\nimport {Position} from \"./position\";\r\n\r\nexport class Pentatonic {\r\n    id: number = 0;\r\n    version: number = 0;\r\n    areas: string = \"\";\r\n    difficulty: number = 0;\r\n    author: string = \"\";\r\n    filename: string = \"\";\r\n    lines: number;\r\n    columns: number;\r\n    cells: Array<Array<Cell>>;\r\n    diffOnes: Array<Diff>;\r\n    sisters: Array<Sister>;\r\n    private MAX_AREA_SIZE: number = 5;\r\n\r\n    constructor(lines: number = 0, columns: number = 0) {\r\n        this.lines = lines;\r\n        this.columns = columns;\r\n        this.cells = [];\r\n        this.diffOnes = [];\r\n        this.sisters = [];\r\n    }\r\n\r\n    fillAreaSize(): Array<string> {\r\n        let warnings: Array<string> = [];\r\n        let allAreas = this.getAllAreas();\r\n        allAreas.forEach(area => {\r\n            let areaCells: Set<Cell> = this.getAreaCells(area);\r\n            let size = areaCells.size;\r\n            areaCells.forEach(c => c.area.size = size);\r\n            if (size > this.MAX_AREA_SIZE) {\r\n                warnings.push(\r\n                    \"Area with id \" + area.id + \" is bigger than the max (\" + size + \" > \" + this.MAX_AREA_SIZE + \")\");\r\n            }\r\n        });\r\n        return warnings;\r\n    }\r\n\r\n    public cellArray(): Array<Cell> {\r\n        let res: Array<Cell> = [];\r\n        for (let row of this.cells) {\r\n            for (let cell of row) {\r\n                res.push(cell);\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n\r\n    public getAllAreas(): Set<Area> {\r\n        let set: Set<Area> = new Set();\r\n        let merge: Array<Cell> = this.cellArray();\r\n\r\n        merge.forEach((c: Cell) => {\r\n            set.add(c.area)\r\n        });\r\n        return set;\r\n    }\r\n\r\n    private getAreaCells(area: Area): Set<Cell> {\r\n        return new Set(this.cellArray().filter(c => c.area.id == area.id));\r\n    }\r\n\r\n    public getAreaPositions(area: Area): Set<Position> {\r\n        return new Set<Position>(this.cellArray().filter(c => c.area.id == area.id).map(cell => cell.position));\r\n    }\r\n\r\n    public diffOnesHave(position: Position): boolean {\r\n        for (let diff of this.diffOnes) {\r\n            if (diff.position1 == position || diff.position2 == position) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public sistersHave(position: Position): boolean {\r\n        for (let sis of this.sisters) {\r\n            if (sis.positions.filter(pos => pos.i == position.i && pos.j == position.j).length > 0) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getSisterSymbol(position: Position): string {\r\n        for (let sis of this.sisters) {\r\n            if (sis.positions.filter(pos => pos.i == position.i && pos.j == position.j).length > 0) return sis.symbol;\r\n        }\r\n        return \"\";\r\n    }\r\n}","export class Area {\r\n    id: string;\r\n    size: number;\r\n\r\n    constructor(id: string = \"0\", size: number = 0) {\r\n        this.id = id;\r\n        this.size = size;\r\n    }\r\n}","import {Area} from \"./area\";\r\nimport {Position} from \"./position\";\r\n\r\nexport class Cell {\r\n    position: Position;\r\n    area: Area;\r\n    values: Array<string>;\r\n\r\n    constructor(i: number, j: number) {\r\n        this.position = new Position(i, j);\r\n        this.values = [];\r\n    }\r\n}","import {Position} from \"./position\";\r\n\r\nexport class Diff {\r\n    position1: Position;\r\n    position2: Position;\r\n\r\n    constructor(pos1: Position, pos2: Position) {\r\n        this.position1 = pos1;\r\n        this.position2 = pos2;\r\n    }\r\n}","import {Position} from \"./position\";\r\n\r\nexport class Sister {\r\n    id: string;\r\n    symbol: string;\r\n    positions: Array<Position>;\r\n\r\n    constructor(id: string, symbol: string, positions: Array<Position>) {\r\n        this.id = id;\r\n        this.symbol = symbol;\r\n        this.positions = positions;\r\n    }\r\n}","import {PentaWarningError} from \"./PentaWarningError\";\r\nimport {Position} from \"./position\";\r\n\r\nexport class PentaChecker {\r\n    static check(pentaWithWarnings: PentaWarningError) {\r\n        PentaChecker.checkAreas(pentaWithWarnings);\r\n    }\r\n\r\n    private static checkAreas(pentaWithWarnings: PentaWarningError) {\r\n        let penta = pentaWithWarnings.penta;\r\n        penta.getAllAreas().forEach(area => {\r\n            let areaPositions = penta.getAreaPositions(area);\r\n            if (!this.checkAdjacent(areaPositions)) {\r\n                pentaWithWarnings.addWarning(\"Probable error with area id \" + area.id + \": it has disjoint areas!\");\r\n            }\r\n        })\r\n    }\r\n\r\n    private static checkAdjacent(areaPositions: Set<Position>): boolean {\r\n        // TODO algo\r\n        return true;\r\n    }\r\n}","import {Value} from \"./value\";\r\nimport {Sister} from \"./sister\";\r\nimport {Diff} from \"./diff\";\r\nimport {Pentatonic} from \"./Pentatonic\";\r\n\r\nexport class PentaJson {\r\n    author: String;\r\n    values: Array<Value>;\r\n    height: number;\r\n    width: number;\r\n    difficulty: number;\r\n    name: String;\r\n    data: Array<Array<String>>;\r\n    differences: Array<Diff>;\r\n    sisters: Array<Sister>;\r\n\r\n    constructor() {\r\n        // this.height = height;\r\n        // this.author = author;\r\n        this.values = [];\r\n        // this.width = width;\r\n        // this.difficulty = difficulty;\r\n        // this.name = name;\r\n        this.data = [];\r\n        this.differences = [];\r\n        this.sisters = [];\r\n    }\r\n\r\n    static fromPentatonic(penta: Pentatonic): PentaJson {\r\n        let res = new PentaJson();\r\n        res.author = penta.author;\r\n        res.difficulty = penta.difficulty;\r\n        res.name = penta.filename;\r\n        res.width = penta.columns;\r\n        res.height = penta.lines;\r\n        res.differences = penta.diffOnes;\r\n        res.sisters = penta.sisters;\r\n\r\n        res.data = penta.cells.map(row => row.map(cell => cell.area.id));\r\n        res.values = penta.cellArray()\r\n            .filter(cell => cell.values.length == 1)\r\n            .map(cell => new Value(+cell.values[0], cell.position.i, cell.position.j));\r\n\r\n        return res;\r\n    }\r\n}\r\n\r\n","export class Value {\r\n    val: number;\r\n    i: number;\r\n    j: number;\r\n\r\n    constructor(val: number, i: number, j: number) {\r\n        this.val = val;\r\n        this.i = i;\r\n        this.j = j;\r\n    }\r\n}"],"sourceRoot":""}