{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/relativePosition.ts","webpack:///./src/position.ts","webpack:///./src/doDraw.ts","webpack:///./src/playground.ts","webpack:///./src/Styles.ts","webpack:///./src/serializer.ts","webpack:///./src/PentaWarningError.ts","webpack:///./src/Pentatonic.ts","webpack:///./src/area.ts","webpack:///./src/Cell.ts","webpack:///./src/diff.ts","webpack:///./src/sister.ts","webpack:///./src/PentaChecker.ts","webpack:///./src/pentaJson.ts","webpack:///./src/value.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","RelativePosition","relativePosition_1","Position","[object Object]","j","this","pos","Math","abs","position","isNear","ILLEGAL","bottom","right","TOP_LEFT","TOP","TOP_RIGHT","LEFT","RIGHT","BOTTOM_LEFT","BOTTOM","BOTTOM_RIGHT","playground_1","Styles_1","serializer_1","PentaChecker_1","pentaJson_1","window","onload","textEditPenta","document","getElementById","buttonVisualise","buttonConvert","inputDifficulty","inputTitle","errors","warnings","success","canvasElement","context2D","getContext","visualise","penta","Serializer","serialize","difficulty","filename","PentaChecker","check","ground","drawPentatonic","Playground","Styles","onclick","hasWarningsOrErrors","alert","pentaJson","PentaJson","fromPentatonic","jsonString","JSON","stringify","text","element","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","download","context","styles","offsetX","offsetY","totalWidth","parentElement","getBoundingClientRect","width","toString","border","canvasBorderWidth","canvasBorderColor","margin","background","xAxis","yAxis","radius","beginPath","arc","PI","fillStyle","fillColor","fill","lineWidth","strokeStyle","borderColor","stroke","font","Heading","color","textColor","fillText","x1","y1","x2","y2","borderWidth","moveTo","lineTo","diffWidth","diffColor","isReverseArrow","x2ofLine","y2OfLine","height","fillRect","lineColor","strokeRect","pentaWarningError","console","log","length","innerHTML","join","innerText","textContent","pentatonic","cellSize","columns","heightCanvas","lines","drawEachCell","drawVerticalSeparations","drawHorizontalSeparations","drawAllClues","drawRectangleThinLine","drawRectangleBorderLine","cells","area","id","drawLine","cellArray","filter","cell","values","sistersHave","forEach","writeText","getSisterSymbol","Default","sisterColor","drawDiffOnes","diffOnes","diffOne","xStart","xEnd","yStart","yEnd","xArray","yArray","k","push","position1","getPositionRelativeToMe","position2","drawDiffLine","widthCell","heightCell","PentaWarningError_1","area_1","Cell_1","position_1","diff_1","sister_1","PentaWarningError","split","minLines","addError","author","trim","lineCol","map","Number","fillAreas","fillEnonce","startLine","line","mapAreas","index","lineCells","Cell","Area","fillAreaSize","addWarnings","countArray","toSister","startsWith","lineCols","substr","pos1","pos2","addWarning","Diff","nb","nLine","nCol","isNaN","keyChar","sisters","Sister","Pentatonic_1","Pentatonic","warn","error","version","areas","MAX_AREA_SIZE","getAllAreas","areaCells","getAreaCells","size","res","row","set","Set","add","diff","sis","positions","symbol","pentaWithWarnings","checkAreas","areaPositions","getAreaPositions","checkAdjacent","value_1","data","differences","Value","val"],"mappings":"aACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,mFClFA,SAAYC,GACRA,IAAA,aAAKA,IAAA,yBAAWA,IAAA,iBAAOA,IAAA,+BAAcA,IAAA,mBAAQA,IAAA,6BAAaA,IAAA,eAAMA,IAAA,uBAAUA,IAAA,qBAD9E,CAAYlC,EAAAkC,mBAAAlC,EAAAkC,iBAAgB,oFCA5B,MAAAC,EAAArC,EAAA,GAEAE,EAAAoC,SAAA,MAKIC,YAAYnC,EAAWoC,GACnBC,KAAKrC,EAAIA,EACTqC,KAAKD,EAAIA,EAGbD,OAAOG,GACH,QAAIC,KAAKC,IAAIF,EAAItC,EAAIqC,KAAKrC,GAAK,GAAKuC,KAAKC,IAAIF,EAAIF,EAAIC,KAAKD,GAAK,GAG3DE,EAAItC,GAAKqC,KAAKrC,GAAKsC,EAAIF,GAAKC,KAAKD,GAMzCD,wBAAwBM,GACpB,IAAKA,EAASC,OAAOL,MACjB,OAAOJ,EAAAD,iBAAiBW,QAO5B,IAAIC,EAASH,EAASzC,EAAIqC,KAAKrC,EAM3B6C,EAAQJ,EAASL,EAAIC,KAAKD,EAC9B,OAAIG,KAAKC,IAAII,GAAU,GAAKL,KAAKC,IAAIK,GAAS,EAAUZ,EAAAD,iBAAiBW,QAErEC,EAAS,GAAKC,EAAQ,EAAUZ,EAAAD,iBAAiBc,SACjDF,EAAS,GAAc,GAATC,EAAmBZ,EAAAD,iBAAiBe,IAClDH,EAAS,GAAKC,EAAQ,EAAUZ,EAAAD,iBAAiBgB,UAEvC,GAAVJ,GAAeC,EAAQ,EAAUZ,EAAAD,iBAAiBiB,KACxC,GAAVL,GAAeC,EAAQ,EAAUZ,EAAAD,iBAAiBkB,MAElDN,EAAS,GAAKC,EAAQ,EAAUZ,EAAAD,iBAAiBmB,YACjDP,EAAS,GAAc,GAATC,EAAmBZ,EAAAD,iBAAiBoB,OAClDR,EAAS,GAAKC,EAAQ,EAAUZ,EAAAD,iBAAiBqB,aAC9CpB,EAAAD,iBAAiBW,yFClDhC,MAAAW,EAAA1D,EAAA,GACA2D,EAAA3D,EAAA,GAEA4D,EAAA5D,EAAA,GACA6D,EAAA7D,EAAA,IACA8D,EAAA9D,EAAA,IACA+D,OAAOC,OAAS,WACZ,IAAIC,EAAgBC,SAASC,eAAe,cACxCC,EAAkBF,SAASC,eAAe,iBAC1CE,EAAgBH,SAASC,eAAe,eAExCG,EAAkBJ,SAASC,eAAe,oBAC1CI,EAAaL,SAASC,eAAe,eACrCK,EAAeN,SAASC,eAAe,UACvCM,EAAiBP,SAASC,eAAe,YACzCO,EAAgBR,SAASC,eAAe,WACxCQ,EAAgBT,SAASC,eAAe,wBACxCS,EAAsCD,EAAcE,WAAW,MAEnE,SAASC,IACL,IAAIC,EAA2BnB,EAAAoB,WAAWC,UAAUhB,EAAc5C,OAKlE,OAJA0D,EAAMA,MAAMG,YAAcZ,EAAgBjD,MAC1C0D,EAAMA,MAAMI,SAAWZ,EAAWlD,MAClCwC,EAAAuB,aAAaC,MAAMN,GACnBO,EAAOC,eAAeR,EAAOP,EAAQC,EAAUC,GACxCK,EAeX,IAAIO,EAAS,IAAI5B,EAAA8B,WAAWb,EAAeC,EAAW,IAAIjB,EAAA8B,OAAO,GAAI,KACrErB,EAAgBsB,QAAUZ,EAC1BT,EAAcqB,QAAU,MACpB,IAAIX,EAAQD,IACZ,GAAIC,EAAMY,sBAEN,YADAC,MAAM,gEAGV,IAAIC,EAAY/B,EAAAgC,UAAUC,eAAehB,EAAMA,OAC3CiB,EAAaC,KAAKC,UAAUL,IArBpC,SAAkBV,EAAkBgB,GAChC,IAAIC,EAAUlC,SAASmC,cAAc,KACrCD,EAAQE,aAAa,OAAQ,iCAAmCC,mBAAmBJ,IACnFC,EAAQE,aAAa,WAAYnB,GAEjCiB,EAAQI,MAAMC,QAAU,OACxBvC,SAASwC,KAAKC,YAAYP,GAE1BA,EAAQQ,QAER1C,SAASwC,KAAKG,YAAYT,GAY1BU,CAASjB,EAAUlF,KAAO,QAASqF,qFC/C3C,MAAA3D,EAAArC,EAAA,GAEAE,EAAAsF,WAAA,MAWIjD,YAAYoC,EAAkCoC,EAAmCC,GAJzEvE,KAAAwE,QAAU,GACVxE,KAAAyE,QAAU,GAIdzE,KAAKkC,cAAgBA,EACrBlC,KAAK0E,WAAa1E,KAAKkC,cAAcyC,cAAcC,wBAAwBC,MAC3E7E,KAAKkC,cAAc2B,aAAa,QAAS7D,KAAK0E,WAAWI,YAEzD9E,KAAKsE,QAAUA,EACftE,KAAKuE,OAASA,EAEdvE,KAAKkC,cAAc6B,MAAMgB,OAAS/E,KAAKuE,OAAOS,kBAAoB,YAAchF,KAAKuE,OAAOU,kBAC5FjF,KAAKkC,cAAc6B,MAAMmB,OAAS,YAClClF,KAAKkC,cAAc6B,MAAMoB,WAAanF,KAAKuE,OAAOY,WAItDrF,eAAesF,EAAeC,EAAeC,GACzCtF,KAAKsE,QAAQiB,YACbvF,KAAKsE,QAAQkB,IAAIJ,EAAOC,EAAOC,EAAQ,EAAG,EAAIpF,KAAKuF,IACnDzF,KAAKsE,QAAQoB,UAAY1F,KAAKuE,OAAOoB,UACrC3F,KAAKsE,QAAQsB,OACb5F,KAAKsE,QAAQuB,UAAY7F,KAAKuE,OAAOsB,UACrC7F,KAAKsE,QAAQwB,YAAc9F,KAAKuE,OAAOwB,YACvC/F,KAAKsE,QAAQ0B,SAGjBlG,WAAWsF,EAAeC,GACtBrF,KAAKsE,QAAQiB,YACbvF,KAAKsE,QAAQkB,IAAIJ,EAAOC,EAAO,GAAI,EAAG,EAAInF,KAAKuF,IAC/CzF,KAAKsE,QAAQoB,UAAY1F,KAAKuE,OAAOoB,UACrC3F,KAAKsE,QAAQsB,OACb5F,KAAKsE,QAAQuB,UAAY7F,KAAKuE,OAAOsB,UACrC7F,KAAKsE,QAAQwB,YAAc9F,KAAKuE,OAAOwB,YACvC/F,KAAKsE,QAAQ0B,SAGjBlG,UAAU4D,EAAc0B,EAAeC,EAAeY,EAAejG,KAAKuE,OAAO0B,KAAKC,QAC5EC,EAAgBnG,KAAKuE,OAAO6B,WAClCpG,KAAKsE,QAAQ2B,KAAOA,EACpBjG,KAAKsE,QAAQoB,UAAYS,EACzBnG,KAAKsE,QAAQ+B,SAAS3C,EAAM0B,EAAOC,GAIvCvF,SAASwG,EAAYC,EAAYC,EAAYC,GACzCzG,KAAKsE,QAAQiB,YACbvF,KAAKsE,QAAQuB,UAAY7F,KAAKuE,OAAOmC,YACrC1G,KAAKsE,QAAQoB,UAAY1F,KAAKuE,OAAOwB,YACrC/F,KAAKsE,QAAQwB,YAAc9F,KAAKuE,OAAOwB,YACvC/F,KAAKsE,QAAQqC,OAAOL,EAAIC,GACxBvG,KAAKsE,QAAQsC,OAAOJ,EAAIC,GACxBzG,KAAKsE,QAAQ0B,SACbhG,KAAKsE,QAAQsB,OAGjB9F,aAAawG,EAAYC,EAAYC,EAAYC,GAC7CzG,KAAKsE,QAAQiB,YACbvF,KAAKsE,QAAQuB,UAAY7F,KAAKuE,OAAOsC,UACrC7G,KAAKsE,QAAQoB,UAAY1F,KAAKuE,OAAOuC,UACrC9G,KAAKsE,QAAQwB,YAAc9F,KAAKuE,OAAOuC,UACvC9G,KAAKsE,QAAQqC,OAAOL,EAAIC,GACxBvG,KAAKsE,QAAQsC,OAAOJ,EAAIC,GACxBzG,KAAKsE,QAAQ0B,SACbhG,KAAKsE,QAAQsB,OAIjB9F,cAAcwG,EAAYC,EAAYC,EAAYC,EAAYM,GAAiB,GAC3E,IAAIpJ,EACJqC,KAAKsE,QAAQiB,YACbvF,KAAKsE,QAAQqC,OAAOL,EAAIC,GACxBvG,KAAKsE,QAAQsC,OAAOJ,EAAIC,GACxBzG,KAAKsE,QAAQwB,YAAc9F,KAAKuE,OAAOoB,UACvC3F,KAAKsE,QAAQuB,UAAY7F,KAAKuE,OAAOsB,UACrC7F,KAAKsE,QAAQ0B,SAEb,IAAIgB,EAAWR,EACXS,EAAWR,EAEf,GAAKM,EAgBD,IAAKpJ,EAAI,EAAGA,GAAK,EAAGA,IAChB2I,EAAKU,EACLT,EAAY,GAAL5I,GAAiB,GAALA,EAAYsJ,EAAW,EAAMA,EAAW,EAC3DT,EAAW,GAAL7I,EAAU,EAAcqJ,EAAW,EACzCP,EAAW,GAAL9I,EAAWsJ,EAAW,EAAKA,EAEjCjH,KAAKsE,QAAQiB,YACbvF,KAAKsE,QAAQqC,OAAOL,EAAIC,GACxBvG,KAAKsE,QAAQsC,OAAOJ,EAAIC,GACxBzG,KAAKsE,QAAQuB,UAAY,EACzB7F,KAAKsE,QAAQwB,YAAc9F,KAAKuE,OAAOoB,UACvC3F,KAAKsE,QAAQ0B,cA1BjB,IAAKrI,EAAI,EAAGA,GAAK,EAAGA,IAChB2I,EAAKU,EACLT,EAAY,GAAL5I,GAAiB,GAALA,EAAYsJ,EAAW,EAAMA,EAAW,EAC3DT,EAAW,GAAL7I,EAAU,EAAcqJ,EAAW,EACzCP,EAAW,GAAL9I,EAAWsJ,EAAW,EAAKA,EAEjCjH,KAAKsE,QAAQiB,YACbvF,KAAKsE,QAAQqC,OAAOL,EAAIC,GACxBvG,KAAKsE,QAAQsC,OAAOJ,EAAIC,GACxBzG,KAAKsE,QAAQuB,UAAY7F,KAAKuE,OAAOsB,UACrC7F,KAAKsE,QAAQwB,YAAc9F,KAAKuE,OAAOoB,UACvC3F,KAAKsE,QAAQ0B,SAsBzBlG,sBAAsBsF,EAAeC,EAAeR,EAAeqC,GAC/DlH,KAAKsE,QAAQiB,YACbvF,KAAKsE,QAAQoB,UAAY1F,KAAKuE,OAAOoB,UACrC3F,KAAKsE,QAAQsB,OACb5F,KAAKsE,QAAQ6C,SAAS/B,EAAOC,EAAOR,EAAOqC,GAC3ClH,KAAKsE,QAAQuB,UAAY7F,KAAKuE,OAAOsB,UACrC7F,KAAKsE,QAAQwB,YAAc9F,KAAKuE,OAAO6C,UACvCpH,KAAKsE,QAAQ+C,WAAWjC,EAAOC,EAAOR,EAAOqC,GAGjDpH,wBAAwBsF,EAAeC,EAAeR,EAAeqC,GACjElH,KAAKsE,QAAQiB,YAIbvF,KAAKsE,QAAQuB,UAAY7F,KAAKuE,OAAOmC,YACrC1G,KAAKsE,QAAQwB,YAAc9F,KAAKuE,OAAOwB,YACvC/F,KAAKsE,QAAQ+C,WAAWjC,EAAOC,EAAOR,EAAOqC,GAIjDpH,eAAewH,EAAsCvF,EAAcC,EAAgBC,GAC/EsF,QAAQC,IAAI,mBAAoBF,GAChCC,QAAQC,IAAI,WAAaF,EAAkBvF,QAC3CwF,QAAQC,IAAI,aAAeF,EAAkBtF,UAE7C,IAAInD,EAAoCkD,EACpCuF,EAAkBvF,OAAO0F,OAAS,EAClC5I,EAAE6I,UAAY,WAAaJ,EAAkBvF,OAAO4F,KAAK,aAAe,aAExE9I,EAAE+I,UAAY,GAEdN,EAAkBtF,SAASyF,OAAS,EACnBzF,EAAU0F,UACvB,WAAaJ,EAAkBtF,SAAS2F,KAAK,aAAe,aAEhE3F,EAAS6F,YAAc,GAEY,GAAnCP,EAAkBvF,OAAO0F,QAAoD,GAArCH,EAAkBtF,SAASyF,OACnExF,EAAQ4F,YAAc,WAEtB5F,EAAQ4F,YAAc,GAE1B,IAAIC,EAAaR,EAAkBhF,MACnCtC,KAAK+H,UAAY/H,KAAK0E,WAAa,EAAI1E,KAAKwE,SAAWsD,EAAWE,QAClE,IAAIC,EAAejI,KAAK0E,WAAaoD,EAAWI,MAAQJ,EAAWE,QACnEhI,KAAKkC,cAAc2B,aAAa,SAAUoE,EAAanD,YAEvD9E,KAAKmI,aAAaL,GACdR,EAAkBvF,OAAO0F,OAAS,IACtCzH,KAAKoI,wBAAwBN,GAC7B9H,KAAKqI,0BAA0BP,GAC/B9H,KAAKsI,aAAaR,IAGdhI,aAAagI,GACjB,IAAK,IAAInK,EAAI,EAAGA,EAAImK,EAAWI,MAAOvK,IAClC,IAAK,IAAIoC,EAAI,EAAGA,EAAI+H,EAAWE,QAASjI,IACpCC,KAAKuI,sBAAsBvI,KAAKwE,QAAUzE,EAAIC,KAAK+H,SAAU/H,KAAKyE,QAAU9G,EAAIqC,KAAK+H,SAAU/H,KAAK+H,SAAU/H,KAAK+H,UAG3H/H,KAAKwI,wBAAwBxI,KAAKwE,QAASxE,KAAKyE,QAASqD,EAAWE,QAAUhI,KAAK+H,SAAUD,EAAWI,MAAQlI,KAAK+H,UAGjHjI,wBAAwBgI,GAC5B,IAAK,IAAInK,EAAI,EAAGA,EAAImK,EAAWI,MAAOvK,IAClC,IAAK,IAAIoC,EAAI,EAAGA,EAAI+H,EAAWE,QAASjI,IAChC+H,EAAWW,MAAM9K,GAAGoC,GAAG2I,KAAKC,IAAMb,EAAWW,MAAM9K,GAAGoC,EAAI,GAAG2I,KAAKC,IAClE3I,KAAK4I,SAAS5I,KAAKwE,QAAUzE,EAAIC,KAAK+H,SAClC/H,KAAKyE,QAAU9G,EAAIqC,KAAK+H,SACxB/H,KAAKwE,QAAUzE,EAAIC,KAAK+H,SACxB/H,KAAKyE,SAAW9G,EAAI,GAAKqC,KAAK+H,UAO1CjI,0BAA0BgI,GAC9B,IAAK,IAAI/H,EAAI,EAAGA,EAAI+H,EAAWE,QAASjI,IACpC,IAAK,IAAIpC,EAAI,EAAGA,EAAImK,EAAWI,MAAOvK,IAC9BmK,EAAWW,MAAM9K,GAAGoC,GAAG2I,KAAKC,IAAMb,EAAWW,MAAM9K,EAAI,GAAGoC,GAAG2I,KAAKC,IAClE3I,KAAK4I,SAAS5I,KAAKwE,QAAUzE,EAAIC,KAAK+H,SAClC/H,KAAKyE,QAAU9G,EAAIqC,KAAK+H,SACxB/H,KAAKwE,SAAWzE,EAAI,GAAKC,KAAK+H,SAC9B/H,KAAKyE,QAAU9G,EAAIqC,KAAK+H,UAMpCjI,aAAagI,GACjBA,EAAWe,YAAYC,OAAOC,GAA8B,GAAtBA,EAAKC,OAAOvB,QAAeK,EAAWmB,YAAYF,EAAK3I,WACxF8I,QAAQlL,IACkB,GAAnBA,EAAEgL,OAAOvB,QACTzH,KAAKmJ,UAAUnL,EAAEgL,OAAO,GAAIhJ,KAAKwE,QAAUxG,EAAEoC,SAASL,EAAIC,KAAK+H,SAAW/H,KAAK+H,SAAW,EACtF/H,KAAKyE,QAAUzG,EAAEoC,SAASzC,EAAIqC,KAAK+H,SAA2B,EAAhB/H,KAAK+H,SAAe,GAEtED,EAAWmB,YAAYjL,EAAEoC,WACzBJ,KAAKmJ,UAAUrB,EAAWsB,gBAAgBpL,EAAEoC,UACxCJ,KAAKwE,QAAUxG,EAAEoC,SAASL,EAAIC,KAAK+H,SAAW,GAAM/H,KAAK+H,SACzD/H,KAAKyE,QAAUzG,EAAEoC,SAASzC,EAAIqC,KAAK+H,SAAW,GAAM/H,KAAK+H,SAAU/H,KAAKuE,OAAO0B,KAAKoD,QAASrJ,KAAKuE,OAAO+E,eAGzHtJ,KAAKuJ,aAAazB,GAIdhI,aAAagI,GACjBA,EAAW0B,SAASN,QAAQO,IACxB,IAOIC,EAAQC,EAAMC,EAAQC,EAPtBC,EAAmB,GACnBC,EAAmB,GAEvB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACnBF,EAAOG,KAAKjK,KAAKwE,QAAUiF,EAAQS,UAAUnK,EAAIC,KAAK+H,SAAY/H,KAAK+H,SAAWiC,EAAK,GACvFD,EAAOE,KAAKjK,KAAKyE,QAAUgF,EAAQS,UAAUvM,EAAIqC,KAAK+H,SAAY/H,KAAK+H,SAAWiC,EAAK,GAG3F,OAAQP,EAAQS,UAAUC,wBAAwBV,EAAQW,YACtD,KAAKxK,EAAAD,iBAAiBe,IAClBgJ,EAASI,EAAO,GAChBH,EAAOG,EAAO,GACdF,EAAS,EAAIG,EAAO,GAAKA,EAAO,GAChCF,EAAOE,EAAO,GACd,MACJ,KAAKnK,EAAAD,iBAAiBkB,MAClB6I,EAAS,EAAII,EAAO,GAAKA,EAAO,GAChCH,EAAOG,EAAO,GACdF,EAASG,EAAO,GAChBF,EAAOE,EAAO,GACd,MACJ,KAAKnK,EAAAD,iBAAiBoB,OAClB2I,EAASI,EAAO,GAChBH,EAAOG,EAAO,GACdF,EAAS,EAAIG,EAAO,GAAKA,EAAO,GAChCF,EAAOE,EAAO,GACd,MACJ,KAAMnK,EAAAD,iBAAiBiB,KACnB8I,EAAS,EAAII,EAAO,GAAKA,EAAO,GAChCH,EAAOG,EAAO,GACdF,EAASG,EAAO,GAChBF,EAAOE,EAAO,GACd,MACJ,KAAKnK,EAAAD,iBAAiBgB,UAClB+I,EAAS,EAAII,EAAO,GAAKA,EAAO,GAChCH,EAAOG,EAAO,GACdF,EAAS,EAAIG,EAAO,GAAKA,EAAO,GAChCF,EAAOE,EAAO,GACd,MACJ,KAAKnK,EAAAD,iBAAiBqB,aAClB0I,EAAS,EAAII,EAAO,GAAKA,EAAO,GAChCH,EAAOG,EAAO,GACdF,EAAS,EAAIG,EAAO,GAAKA,EAAO,GAChCF,EAAOE,EAAO,GACd,MACJ,KAAKnK,EAAAD,iBAAiBmB,YAClB4I,EAAS,EAAII,EAAO,GAAKA,EAAO,GAChCH,EAAOG,EAAO,GACdF,EAAS,EAAIG,EAAO,GAAKA,EAAO,GAChCF,EAAOE,EAAO,GACd,MACJ,KAAKnK,EAAAD,iBAAiBc,SAClBiJ,EAAS,EAAII,EAAO,GAAKA,EAAO,GAChCH,EAAOG,EAAO,GACdF,EAAS,EAAIG,EAAO,GAAKA,EAAO,GAChCF,EAAOE,EAAO,GACd,MACJ,KAAKnK,EAAAD,iBAAiBW,QAElB,YADAiH,QAAQC,IAAI,oBAGpBxH,KAAKqK,aAAaX,EAAQE,EAAQD,EAAME,sFC1SpDpM,EAAAuF,OAAA,MAiBIlD,YAAY+E,EAAeqC,GACvBlH,KAAKsK,UAAYzF,EACjB7E,KAAKuK,WAAarD,EAClBlH,KAAKmF,WAAa,UAClBnF,KAAK+F,YAAc,UACnB/F,KAAKiF,kBAAmB,UACxBjF,KAAKgF,kBAAoB,EACzBhF,KAAK6F,UAAY,EACjB7F,KAAK0G,YAAc,GACnB1G,KAAK6G,UAAY,EACjB7G,KAAK2F,UAAY,UACjB3F,KAAKoG,UAAY,UACjBpG,KAAKoH,UAAY,UACjBpH,KAAK8G,UAAY,UACjB9G,KAAKsJ,YAAc,UACnBtJ,KAAKiG,KAAO,CAACoD,QAAS,mCAAoCnD,QAAS,qHChC3E,MAAAsE,EAAAjN,EAAA,GACAkN,EAAAlN,EAAA,GACAmN,EAAAnN,EAAA,GACAoN,EAAApN,EAAA,GACAqN,EAAArN,EAAA,IACAsN,EAAAtN,EAAA,IAEA,MAAagF,EAGTzC,iBAAiB+H,GACb,IAAIP,EAAoB,IAAIkD,EAAAM,kBACxBxI,EAAQgF,EAAkBhF,MAC9BiF,QAAQC,IAAI,yBAA2BK,GACvC,IAAIK,EAAQL,EAAYkD,MAAM,WAC9B,GAAI7C,EAAMT,OAASzH,KAAKgL,SAGpB,OAFA1D,EAAkB2D,SAAS,iEAEpB3D,EAEXhF,EAAM4I,OAAShD,EAAM,GAAGiD,OACxB5D,QAAQC,IAAI,cAAgBlF,EAAM4I,QAElC,IAAIE,EAAUlD,EAAM,GAAGiD,OAAOJ,MAAM,KAAKM,IAAI3L,GAAK4L,OAAO5L,IAEzD,OADA6H,QAAQC,IAAI,oBAAsB4D,GACZ,GAAlBA,EAAQ3D,QACRH,EAAkB2D,SACd,8EACG3D,IAEXhF,EAAM4F,MAAQkD,EAAQ,GACtB9I,EAAM0F,QAAUoD,EAAQ,GACpBlD,EAAMT,OAASzH,KAAKgL,SAAW1I,EAAM4F,OACrCZ,EAAkB2D,SAAS,wCAA0C3I,EAAM4F,MAAQ,UAC5EZ,IAGXtH,KAAKuL,UAAUjE,EAAmBY,EAAO,GACrCZ,EAAkBvF,OAAO0F,OAAS,EAAUH,GAChDtH,KAAKwL,WAAWlE,EAAmBY,EAAO,EAAI5F,EAAM4F,OAE7CZ,KAGXxH,iBAAiBwC,EAA0B4F,EAAsBuD,GAC7D,IACIC,EADAC,EAAoC,GAExC,IAAK,IAAIC,EAAQH,EAAWG,EAAQH,EAAYnJ,EAAMA,MAAM4F,MAAO0D,IAAS,CACxE,IAAIjO,EAAIiO,EAAQH,EAEhB,GAAY,KADZC,EAAOxD,EAAM0D,GAAOT,SACM,MAARO,EACd,SAEJ,IAAIG,EAAY,GAChB,GAAGH,EAAKjE,QAAUnF,EAAMA,MAAM0F,QAAS,CACnC1F,EAAM2I,SACF,uCAAyC3I,EAAMA,MAAM0F,QACrD,8BAAiC0D,EAAO,uBAA0BE,EAAQ,GAAK,KACnF,MAGJ,IAAK,IAAI7L,EAAI,EAAGA,EAAIuC,EAAMA,MAAM0F,QAASjI,IAAK,CAC1C,IAAIgJ,EAAO,IAAI2B,EAAAoB,KAAKnO,EAAGoC,GACnB2I,EAAOiD,EAASD,EAAK3L,IACb,MAAR2I,IACAA,EAAO,IAAI+B,EAAAsB,KAAKL,EAAK3L,IACrB4L,EAASD,EAAK3L,IAAM2I,GAExBK,EAAKL,KAAOA,EACZmD,EAAU5B,KAAKlB,GAEnBzG,EAAMA,MAAMmG,MAAMwB,KAAK4B,GAE3B,IAAI7J,EAAWM,EAAMA,MAAM0J,eAC3B1J,EAAM2J,YAAYjK,GAGtBlC,kBAAkBwC,EAA0B4F,EAAsBuD,GAC9D,IAAIC,EACAQ,EAAqBhE,EAAMT,OAC3B0E,EAA6C,GACjD,IAAK,IAAIxO,EAAI8N,EAAW9N,EAAIuO,EAAYvO,IAAK,CAEzC,GAAY,KADZ+N,EAAOxD,EAAMvK,GAAGwN,QACA,SAGhB,GAAIO,EAAKU,WAAW,KAAM,CAEtB,IAAIC,EAAWX,EAAKY,OAAO,GAAGvB,MAAM,KAAKM,IAAIjM,IAAMA,GACnD,GAAuB,GAAnBiN,EAAS5E,OAAa,CACtBnF,EAAM2I,SAAS,wFAA6FS,EAAO,KACnH,MAEJ,IAAIa,EAAO,IAAI5B,EAAA9K,SAASwM,EAAS,GAAIA,EAAS,IAC1CG,EAAO,IAAI7B,EAAA9K,SAASwM,EAAS,GAAIA,EAAS,IAC9C,GAAIE,GAAQC,EAAM,CACdlK,EAAM2I,SAAS,uEAA0ES,EAAO,KAChG,SAECa,EAAKlM,OAAOmM,IACblK,EAAMmK,WAAW,kEAAqEf,EAAO,KAEjGpJ,EAAMA,MAAMkH,SAASS,KAAK,IAAIW,EAAA8B,KAAKH,EAAMC,IACzC,SAGJ,IAAIzB,EAAQW,EAAKX,MAAM,KACvB,GAAoB,GAAhBA,EAAMtD,OAAa,CACnBnF,EAAM2I,SAAS,uCAAyCS,GACxD,SAEJ,GAAuB,GAAnBX,EAAM,GAAGtD,OAAa,CACtBnF,EAAM2I,SAAS,cAAgBF,EAAM,GAAK,YAAcW,GACxD,SAEJ,IAAIiB,EAAK5B,EAAM,GACX6B,GAAS7B,EAAM,GACf8B,GAAQ9B,EAAM,GAClB,GAAI6B,GAAStK,EAAMA,MAAM4F,MAAO,CAC5B5F,EAAM2I,SACF,YAAc2B,EAAQ,yBAA4BlB,EAAO,wBAA2BpJ,EAAMA,MAAM4F,MAAQ,eAAiBvK,EAAI,GAAK,KACtI,SAEJ,GAAIkP,GAAQvK,EAAMA,MAAM0F,QAAS,CAC7B1F,EAAM2I,SACF,cAAgB4B,EAAO,yBAA4BnB,EAAO,0BAA6BpJ,EAAMA,MAAM0F,QAAU,eAAiBrK,EAAI,GAAK,KAC3I,SAEJ,IAAIoL,EAAOzG,EAAMA,MAAMmG,MAAMmE,GAAOC,GAChCzN,GAAauN,EACjB,GAAKrB,OAAOwB,MAAM1N,GAMM,MAAhB+M,EAASQ,GACTR,EAASQ,GAAM,CAAC,IAAIhC,EAAA9K,SAAS+M,EAAOC,IAEpCV,EAASQ,GAAI1C,KAAK,IAAIU,EAAA9K,SAAS+M,EAAOC,QATxB,CAClBtF,QAAQC,IAAI,SAAWmF,GACvB,IAAIvN,GAAauN,EACjBpF,QAAQC,IAAI,oCAAsCpI,GAClD2J,EAAKC,OAAOiB,KAAK0C,IASzB,IAAK,IAAII,KAAWZ,EAChB7J,EAAMA,MAAM0K,QAAQ/C,KAAK,IAAIY,EAAAoC,OAAOF,EAASA,EAASZ,EAASY,MAxIxDxK,EAAAyI,SAAmB,EADtCvN,EAAA8E,4FCPA,MAAA2K,EAAA3P,EAAA,GAEAE,EAAAqN,kBAAA,MAKIhL,cACIE,KAAKsC,MAAQ,IAAI4K,EAAAC,WACjBnN,KAAKgC,SAAW,GAChBhC,KAAK+B,OAAS,GAGXjC,WAAWsN,GACdpN,KAAKgC,SAASiI,KAAKmD,GAGhBtN,YAAYkC,GACfA,EAASkH,QAAQkE,GAAQpN,KAAKyM,WAAWW,IAGtCtN,SAASuN,GACZrN,KAAK+B,OAAOkI,KAAKoD,GAGdvN,sBACH,OAAOE,KAAKgC,SAASyF,OAAS,GAAKzH,KAAK+B,OAAO0F,OAAS,mFCpBhEhK,EAAA0P,WAAA,MAcIrN,YAAYoI,EAAgB,EAAGF,EAAkB,GAbjDhI,KAAA2I,GAAa,EACb3I,KAAAsN,QAAkB,EAClBtN,KAAAuN,MAAgB,GAChBvN,KAAAyC,WAAqB,EACrBzC,KAAAkL,OAAiB,GACjBlL,KAAA0C,SAAmB,GAMX1C,KAAAwN,cAAwB,EAG5BxN,KAAKkI,MAAQA,EACblI,KAAKgI,QAAUA,EACfhI,KAAKyI,MAAQ,GACbzI,KAAKwJ,SAAW,GAChBxJ,KAAKgN,QAAU,GAGnBlN,eACI,IAAIkC,EAA0B,GAW9B,OAVehC,KAAKyN,cACXvE,QAAQR,IACb,IAAIgF,EAAuB1N,KAAK2N,aAAajF,GACzCkF,EAAOF,EAAUE,KACrBF,EAAUxE,QAAQlL,GAAKA,EAAE0K,KAAKkF,KAAOA,GACjCA,EAAO5N,KAAKwN,eACZxL,EAASiI,KACL,gBAAkBvB,EAAKC,GAAK,4BAA8BiF,EAAO,MAAQ5N,KAAKwN,cAAgB,OAGnGxL,EAGJlC,YACH,IAAI+N,EAAmB,GACvB,IAAK,IAAIC,KAAO9N,KAAKyI,MACjB,IAAK,IAAIM,KAAQ+E,EACbD,EAAI5D,KAAKlB,GAGjB,OAAO8E,EAGJ/N,cACH,IAAIiO,EAAiB,IAAIC,IAMzB,OALyBhO,KAAK6I,YAExBK,QAASlL,IACX+P,EAAIE,IAAIjQ,EAAE0K,QAEPqF,EAGHjO,aAAa4I,GACjB,OAAO,IAAIsF,IAAIhO,KAAK6I,YAAYC,OAAO9K,GAAKA,EAAE0K,KAAKC,IAAMD,EAAKC,KAG3D7I,iBAAiB4I,GACpB,OAAO,IAAIsF,IAAchO,KAAK6I,YAAYC,OAAO9K,GAAKA,EAAE0K,KAAKC,IAAMD,EAAKC,IAAI0C,IAAItC,GAAQA,EAAK3I,WAG1FN,aAAaM,GAChB,IAAK,IAAI8N,KAAQlO,KAAKwJ,SAClB,GAAI0E,EAAKhE,WAAa9J,GAAY8N,EAAK9D,WAAahK,EAAU,OAAO,EAEzE,OAAO,EAGJN,YAAYM,GACf,IAAK,IAAI+N,KAAOnO,KAAKgN,QACjB,GAAImB,EAAIC,UAAUtF,OAAO7I,GAAOA,EAAItC,GAAKyC,EAASzC,GAAKsC,EAAIF,GAAKK,EAASL,GAAG0H,OAAS,EAAG,OAAO,EAEnG,OAAO,EAGX3H,gBAAgBM,GACZ,IAAK,IAAI+N,KAAOnO,KAAKgN,QACjB,GAAImB,EAAIC,UAAUtF,OAAO7I,GAAOA,EAAItC,GAAKyC,EAASzC,GAAKsC,EAAIF,GAAKK,EAASL,GAAG0H,OAAS,EAAG,OAAO0G,EAAIE,OAEvG,MAAO,oFCzFf5Q,EAAAsO,KAAA,MAIIjM,YAAY6I,EAAa,IAAKiF,EAAe,GACzC5N,KAAK2I,GAAKA,EACV3I,KAAK4N,KAAOA,mFCLpB,MAAAjD,EAAApN,EAAA,GAEAE,EAAAqO,KAAA,MAKIhM,YAAYnC,EAAWoC,GACnBC,KAAKI,SAAW,IAAIuK,EAAA9K,SAASlC,EAAGoC,GAChCC,KAAKgJ,OAAS,oFCRtBvL,EAAAiP,KAAA,MAII5M,YAAYyM,EAAgBC,GACxBxM,KAAKkK,UAAYqC,EACjBvM,KAAKoK,UAAYoC,mFCNzB/O,EAAAwP,OAAA,MAKInN,YAAY6I,EAAY0F,EAAgBD,GACpCpO,KAAK2I,GAAKA,EACV3I,KAAKqO,OAASA,EACdrO,KAAKoO,UAAYA,mFCPzB,MAAazL,EACT7C,aAAawO,GACT3L,EAAa4L,WAAWD,GAGpBxO,kBAAkBwO,GACtB,IAAIhM,EAAQgM,EAAkBhM,MAC9BA,EAAMmL,cAAcvE,QAAQR,IACxB,IAAI8F,EAAgBlM,EAAMmM,iBAAiB/F,GACtC1I,KAAK0O,cAAcF,IACpBF,EAAkB7B,WAAW,+BAAiC/D,EAAKC,GAAK,8BAK5E7I,qBAAqB0O,GAEzB,OAAO,GAjBf/Q,EAAAkF,8FCHA,MAAAgM,EAAApR,EAAA,IAKA,MAAa8F,EAWTvD,cAGIE,KAAKgJ,OAAS,GAIdhJ,KAAK4O,KAAO,GACZ5O,KAAK6O,YAAc,GACnB7O,KAAKgN,QAAU,GAGnBlN,sBAAsBwC,GAClB,IAAIuL,EAAM,IAAIxK,EAcd,OAbAwK,EAAI3C,OAAS5I,EAAM4I,OACnB2C,EAAIpL,WAAaH,EAAMG,WACvBoL,EAAI3P,KAAOoE,EAAMI,SACjBmL,EAAIhJ,MAAQvC,EAAM0F,QAClB6F,EAAI3G,OAAS5E,EAAM4F,MACnB2F,EAAIgB,YAAcvM,EAAMkH,SACxBqE,EAAIb,QAAU1K,EAAM0K,QAEpBa,EAAIe,KAAOtM,EAAMmG,MAAM4C,IAAIyC,GAAOA,EAAIzC,IAAItC,GAAQA,EAAKL,KAAKC,KAC5DkF,EAAI7E,OAAS1G,EAAMuG,YACdC,OAAOC,GAA8B,GAAtBA,EAAKC,OAAOvB,QAC3B4D,IAAItC,GAAQ,IAAI4F,EAAAG,OAAO/F,EAAKC,OAAO,GAAID,EAAK3I,SAASzC,EAAGoL,EAAK3I,SAASL,IAEpE8N,GAtCfpQ,EAAA4F,2FCLA5F,EAAAqR,MAAA,MAKIhP,YAAYiP,EAAapR,EAAWoC,GAChCC,KAAK+O,IAAMA,EACX/O,KAAKrC,EAAIA,EACTqC,KAAKD,EAAIA","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","export enum RelativePosition {\r\n    TOP, TOP_RIGHT, RIGHT, BOTTOM_RIGHT, BOTTOM, BOTTOM_LEFT, LEFT, TOP_LEFT, ILLEGAL\r\n}","import {RelativePosition} from \"./relativePosition\";\r\n\r\nexport class Position {\r\n\r\n    i: number;\r\n    j: number;\r\n\r\n    constructor(i: number, j: number) {\r\n        this.i = i;\r\n        this.j = j;\r\n    }\r\n\r\n    isNear(pos: Position): boolean {\r\n        if (Math.abs(pos.i - this.i) > 1 || Math.abs(pos.j - this.j) > 1) {\r\n            return false;\r\n        }\r\n        if (pos.i == this.i && pos.j == this.j) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    getPositionRelativeToMe(position: Position): RelativePosition {\r\n        if (!position.isNear(this)) {\r\n            return RelativePosition.ILLEGAL;\r\n        }\r\n        /**\r\n         * bottom == 1 => bottom\r\n         * bottom == 0 => middle\r\n         * bottom == -1 => top\r\n         */\r\n        let bottom = position.i - this.i;\r\n        /**\r\n         * right == 1 => right\r\n         * right == 0 => middle\r\n         * right == -1 => left\r\n         */\r\n        let right = position.j - this.j;\r\n        if (Math.abs(bottom) > 1 || Math.abs(right) > 1) return RelativePosition.ILLEGAL;\r\n\r\n        if (bottom < 0 && right < 0) return RelativePosition.TOP_LEFT;\r\n        if (bottom < 0 && right == 0) return RelativePosition.TOP;\r\n        if (bottom < 0 && right > 0) return RelativePosition.TOP_RIGHT;\r\n\r\n        if (bottom == 0 && right < 0) return RelativePosition.LEFT;\r\n        if (bottom == 0 && right > 0) return RelativePosition.RIGHT;\r\n\r\n        if (bottom > 0 && right < 0) return RelativePosition.BOTTOM_LEFT;\r\n        if (bottom > 0 && right == 0) return RelativePosition.BOTTOM;\r\n        if (bottom > 0 && right > 0) return RelativePosition.BOTTOM_RIGHT;\r\n        return RelativePosition.ILLEGAL;\r\n    }\r\n\r\n}\r\n\r\n","import {Playground} from \"./playground\";\r\nimport {Styles} from \"./Styles\";\r\nimport {PentaWarningError} from \"./PentaWarningError\";\r\nimport {Serializer} from \"./serializer\";\r\nimport {PentaChecker} from \"./PentaChecker\";\r\nimport {PentaJson} from \"./pentaJson\";\r\nwindow.onload = function () {\r\n    let textEditPenta = document.getElementById(\"text-penta\") as HTMLTextAreaElement;\r\n    let buttonVisualise = document.getElementById(\"btn-visualise\") as HTMLButtonElement;\r\n    let buttonConvert = document.getElementById(\"btn-convert\") as HTMLButtonElement;\r\n\r\n    let inputDifficulty = document.getElementById(\"difficulty-input\") as HTMLInputElement;\r\n    let inputTitle = document.getElementById(\"title-input\") as HTMLInputElement;\r\n    let errors: Node = document.getElementById(\"errors\");\r\n    let warnings: Node = document.getElementById(\"warnings\");\r\n    let success: Node = document.getElementById(\"success\");\r\n    let canvasElement = document.getElementById(\"penta-representation\") as HTMLCanvasElement;\r\n    let context2D: CanvasRenderingContext2D = canvasElement.getContext(\"2d\");\r\n\r\n    function visualise(): PentaWarningError {\r\n        let penta: PentaWarningError = Serializer.serialize(textEditPenta.value);\r\n        penta.penta.difficulty = +inputDifficulty.value;\r\n        penta.penta.filename = inputTitle.value;\r\n        PentaChecker.check(penta);\r\n        ground.drawPentatonic(penta, errors, warnings, success);\r\n        return penta;\r\n    }\r\n\r\n    function download(filename: string, text: string) {\r\n        let element = document.createElement('a');\r\n        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\r\n        element.setAttribute('download', filename);\r\n\r\n        element.style.display = 'none';\r\n        document.body.appendChild(element);\r\n\r\n        element.click();\r\n\r\n        document.body.removeChild(element);\r\n    }\r\n    let ground = new Playground(canvasElement, context2D, new Styles(20, 20));\r\n    buttonVisualise.onclick = visualise;\r\n    buttonConvert.onclick = () => {\r\n        let penta = visualise();\r\n        if (penta.hasWarningsOrErrors()) {\r\n            alert(\"Please fix any errors and warnings before converting to JSON\");\r\n            return;\r\n        }\r\n        let pentaJson = PentaJson.fromPentatonic(penta.penta);\r\n        let jsonString = JSON.stringify(pentaJson);\r\n        download(pentaJson.name + \".json\", jsonString);\r\n    }\r\n\r\n};","import {Styles} from \"./Styles\";\r\nimport {PentaWarningError} from \"./PentaWarningError\";\r\nimport {Pentatonic} from \"./Pentatonic\";\r\nimport {RelativePosition} from \"./relativePosition\";\r\n\r\nexport class Playground {\r\n    private canvasElement: HTMLCanvasElement;\r\n    private context: CanvasRenderingContext2D;\r\n\r\n    private styles: Styles;\r\n\r\n    private cellSize: number;\r\n    private offsetX = 30;\r\n    private offsetY = 30;\r\n    private totalWidth: number;\r\n\r\n    constructor(canvasElement: HTMLCanvasElement, context: CanvasRenderingContext2D, styles: Styles) {\r\n        this.canvasElement = canvasElement;\r\n        this.totalWidth = this.canvasElement.parentElement.getBoundingClientRect().width;\r\n        this.canvasElement.setAttribute(\"width\", this.totalWidth.toString());\r\n\r\n        this.context = context;\r\n        this.styles = styles;\r\n\r\n        this.canvasElement.style.border = this.styles.canvasBorderWidth + \"px solid \" + this.styles.canvasBorderColor;\r\n        this.canvasElement.style.margin = \"auto 20px\";\r\n        this.canvasElement.style.background = this.styles.background;\r\n\r\n    }\r\n\r\n    drawCenterSpot(xAxis: number, yAxis: number, radius: number) {\r\n        this.context.beginPath();\r\n        this.context.arc(xAxis, yAxis, radius, 0, 2 * Math.PI);\r\n        this.context.fillStyle = this.styles.fillColor;\r\n        this.context.fill();\r\n        this.context.lineWidth = this.styles.lineWidth;\r\n        this.context.strokeStyle = this.styles.borderColor;\r\n        this.context.stroke();\r\n    }\r\n\r\n    drawCorner(xAxis: number, yAxis: number) {\r\n        this.context.beginPath();\r\n        this.context.arc(xAxis, yAxis, 10, 0, 2 * Math.PI);\r\n        this.context.fillStyle = this.styles.fillColor;\r\n        this.context.fill();\r\n        this.context.lineWidth = this.styles.lineWidth;\r\n        this.context.strokeStyle = this.styles.borderColor;\r\n        this.context.stroke();\r\n    }\r\n\r\n    writeText(text: string, xAxis: number, yAxis: number, font: string = this.styles.font.Heading,\r\n              color: string = this.styles.textColor) {\r\n        this.context.font = font;\r\n        this.context.fillStyle = color;\r\n        this.context.fillText(text, xAxis, yAxis);\r\n\r\n    }\r\n\r\n    drawLine(x1: number, y1: number, x2: number, y2: number) {\r\n        this.context.beginPath();\r\n        this.context.lineWidth = this.styles.borderWidth;\r\n        this.context.fillStyle = this.styles.borderColor;\r\n        this.context.strokeStyle = this.styles.borderColor;\r\n        this.context.moveTo(x1, y1);\r\n        this.context.lineTo(x2, y2);\r\n        this.context.stroke();\r\n        this.context.fill();\r\n    }\r\n\r\n    drawDiffLine(x1: number, y1: number, x2: number, y2: number) {\r\n        this.context.beginPath();\r\n        this.context.lineWidth = this.styles.diffWidth;\r\n        this.context.fillStyle = this.styles.diffColor;\r\n        this.context.strokeStyle = this.styles.diffColor;\r\n        this.context.moveTo(x1, y1);\r\n        this.context.lineTo(x2, y2);\r\n        this.context.stroke();\r\n        this.context.fill();\r\n    }\r\n\r\n\r\n    drawArrowLine(x1: number, y1: number, x2: number, y2: number, isReverseArrow = false) {\r\n        let i;\r\n        this.context.beginPath();\r\n        this.context.moveTo(x1, y1);\r\n        this.context.lineTo(x2, y2);\r\n        this.context.strokeStyle = this.styles.fillColor;\r\n        this.context.lineWidth = this.styles.lineWidth;\r\n        this.context.stroke();\r\n\r\n        let x2ofLine = x2;\r\n        let y2OfLine = y2;\r\n\r\n        if (!isReverseArrow) {\r\n            for (i = 0; i <= 2; i++) {\r\n                x1 = x2ofLine;\r\n                y1 = ((i == 0) || (i == 2)) ? (y2OfLine - 4) : (y2OfLine + 4);\r\n                x2 = (i == 2) ? (x2ofLine) : (x2ofLine + 4);\r\n                y2 = (i == 2) ? (y2OfLine + 4) : y2OfLine;\r\n\r\n                this.context.beginPath();\r\n                this.context.moveTo(x1, y1);\r\n                this.context.lineTo(x2, y2);\r\n                this.context.lineWidth = this.styles.lineWidth;\r\n                this.context.strokeStyle = this.styles.fillColor;\r\n                this.context.stroke();\r\n            }\r\n        }\r\n        else {\r\n            for (i = 0; i <= 2; i++) {\r\n                x1 = x2ofLine;\r\n                y1 = ((i == 0) || (i == 2)) ? (y2OfLine + 4) : (y2OfLine - 4);\r\n                x2 = (i == 2) ? (x2ofLine) : (x2ofLine - 4);\r\n                y2 = (i == 2) ? (y2OfLine - 4) : y2OfLine;\r\n\r\n                this.context.beginPath();\r\n                this.context.moveTo(x1, y1);\r\n                this.context.lineTo(x2, y2);\r\n                this.context.lineWidth = 2;\r\n                this.context.strokeStyle = this.styles.fillColor;\r\n                this.context.stroke();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    //Rectangular Area\r\n    drawRectangleThinLine(xAxis: number, yAxis: number, width: number, height: number) {\r\n        this.context.beginPath();\r\n        this.context.fillStyle = this.styles.fillColor;\r\n        this.context.fill();\r\n        this.context.fillRect(xAxis, yAxis, width, height);\r\n        this.context.lineWidth = this.styles.lineWidth;\r\n        this.context.strokeStyle = this.styles.lineColor;\r\n        this.context.strokeRect(xAxis, yAxis, width, height);\r\n    }\r\n\r\n    drawRectangleBorderLine(xAxis: number, yAxis: number, width: number, height: number) {\r\n        this.context.beginPath();\r\n        // this.context.fillStyle = this.styles.fillColor;\r\n        // this.context.fill();\r\n        // this.context.fillRect(xAxis, yAxis, width, height);\r\n        this.context.lineWidth = this.styles.borderWidth;\r\n        this.context.strokeStyle = this.styles.borderColor;\r\n        this.context.strokeRect(xAxis, yAxis, width, height);\r\n    }\r\n\r\n\r\n    drawPentatonic(pentaWarningError: PentaWarningError, errors: Node, warnings: Node, success: Node) {\r\n        console.log(\"trying to draw: \", pentaWarningError);\r\n        console.log(\"errors: \" + pentaWarningError.errors);\r\n        console.log(\"Warnings: \" + pentaWarningError.warnings);\r\n\r\n        let t: HTMLDivElement = <HTMLDivElement>errors;\r\n        if (pentaWarningError.errors.length > 0) {\r\n            t.innerHTML = \"<ul><li>\" + pentaWarningError.errors.join(\"</li><li>\") + \"</li></ul>\";\r\n        } else {\r\n            t.innerText = \"\";\r\n        }\r\n        if (pentaWarningError.warnings.length > 0) {\r\n            (<HTMLDivElement>warnings).innerHTML =\r\n                \"<ul><li>\" + pentaWarningError.warnings.join(\"</li><li>\") + \"</li></ul>\";\r\n        } else {\r\n            warnings.textContent = \"\";\r\n        }\r\n        if (pentaWarningError.errors.length == 0 && pentaWarningError.warnings.length == 0) {\r\n            success.textContent = \"Success!\";\r\n        } else {\r\n            success.textContent = \"\";\r\n        }\r\n        let pentatonic = pentaWarningError.penta;\r\n        this.cellSize = (this.totalWidth - 2 * this.offsetX) / pentatonic.columns;\r\n        let heightCanvas = this.totalWidth * pentatonic.lines / pentatonic.columns;\r\n        this.canvasElement.setAttribute(\"height\", heightCanvas.toString());\r\n\r\n        this.drawEachCell(pentatonic);\r\n        if (pentaWarningError.errors.length > 0) return;\r\n        this.drawVerticalSeparations(pentatonic);\r\n        this.drawHorizontalSeparations(pentatonic);\r\n        this.drawAllClues(pentatonic);\r\n    }\r\n\r\n    private drawEachCell(pentatonic: Pentatonic) {\r\n        for (let i = 0; i < pentatonic.lines; i++) {\r\n            for (let j = 0; j < pentatonic.columns; j++) {\r\n                this.drawRectangleThinLine(this.offsetX + j * this.cellSize, this.offsetY + i * this.cellSize, this.cellSize, this.cellSize);\r\n            }\r\n        }\r\n        this.drawRectangleBorderLine(this.offsetX, this.offsetY, pentatonic.columns * this.cellSize, pentatonic.lines * this.cellSize);\r\n    }\r\n\r\n    private drawVerticalSeparations(pentatonic: Pentatonic) {\r\n        for (let i = 0; i < pentatonic.lines; i++) {\r\n            for (let j = 1; j < pentatonic.columns; j++) {\r\n                if (pentatonic.cells[i][j].area.id != pentatonic.cells[i][j - 1].area.id) {\r\n                    this.drawLine(this.offsetX + j * this.cellSize,\r\n                        this.offsetY + i * this.cellSize,\r\n                        this.offsetX + j * this.cellSize,\r\n                        this.offsetY + (i + 1) * this.cellSize);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    private drawHorizontalSeparations(pentatonic: Pentatonic) {\r\n        for (let j = 0; j < pentatonic.columns; j++) {\r\n            for (let i = 1; i < pentatonic.lines; i++) {\r\n                if (pentatonic.cells[i][j].area.id != pentatonic.cells[i - 1][j].area.id) {\r\n                    this.drawLine(this.offsetX + j * this.cellSize,\r\n                        this.offsetY + i * this.cellSize,\r\n                        this.offsetX + (j + 1) * this.cellSize,\r\n                        this.offsetY + i * this.cellSize);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private drawAllClues(pentatonic: Pentatonic) {\r\n        pentatonic.cellArray().filter(cell => cell.values.length == 1 || pentatonic.sistersHave(cell.position))\r\n            .forEach(c => {\r\n                if (c.values.length == 1) {\r\n                    this.writeText(c.values[0], this.offsetX + c.position.j * this.cellSize + this.cellSize / 3,\r\n                        this.offsetY + c.position.i * this.cellSize + this.cellSize * 3 / 5);\r\n                }\r\n                if (pentatonic.sistersHave(c.position)) {\r\n                    this.writeText(pentatonic.getSisterSymbol(c.position),\r\n                        this.offsetX + c.position.j * this.cellSize + 0.2 * this.cellSize,\r\n                        this.offsetY + c.position.i * this.cellSize + 0.4 * this.cellSize, this.styles.font.Default, this.styles.sisterColor);\r\n                }\r\n            });\r\n        this.drawDiffOnes(pentatonic);\r\n\r\n    }\r\n\r\n    private drawDiffOnes(pentatonic: Pentatonic) {\r\n        pentatonic.diffOnes.forEach(diffOne => {\r\n            let xArray: number[] = [];\r\n            let yArray: number[] = [];\r\n\r\n            for (let k = 0; k < 5; k++) {\r\n                xArray.push(this.offsetX + diffOne.position1.j * this.cellSize + (this.cellSize * k) / 4);\r\n                yArray.push(this.offsetY + diffOne.position1.i * this.cellSize + (this.cellSize * k) / 4);\r\n            }\r\n            let xStart, xEnd, yStart, yEnd: number;\r\n            switch (diffOne.position1.getPositionRelativeToMe(diffOne.position2)) {\r\n                case RelativePosition.TOP:\r\n                    xStart = xArray[2];\r\n                    xEnd = xArray[2];\r\n                    yStart = 2 * yArray[0] - yArray[1];\r\n                    yEnd = yArray[1];\r\n                    break;\r\n                case RelativePosition.RIGHT:\r\n                    xStart = 2 * xArray[4] - xArray[3];\r\n                    xEnd = xArray[3];\r\n                    yStart = yArray[2];\r\n                    yEnd = yArray[2];\r\n                    break;\r\n                case RelativePosition.BOTTOM:\r\n                    xStart = xArray[2];\r\n                    xEnd = xArray[2];\r\n                    yStart = 2 * yArray[4] - yArray[3];\r\n                    yEnd = yArray[3];\r\n                    break;\r\n                case  RelativePosition.LEFT:\r\n                    xStart = 2 * xArray[0] - xArray[1];\r\n                    xEnd = xArray[1];\r\n                    yStart = yArray[2];\r\n                    yEnd = yArray[2];\r\n                    break;\r\n                case RelativePosition.TOP_RIGHT:\r\n                    xStart = 2 * xArray[4] - xArray[3];\r\n                    xEnd = xArray[3];\r\n                    yStart = 2 * yArray[0] - yArray[1];\r\n                    yEnd = yArray[1];\r\n                    break;\r\n                case RelativePosition.BOTTOM_RIGHT:\r\n                    xStart = 2 * xArray[4] - xArray[3];\r\n                    xEnd = xArray[3];\r\n                    yStart = 2 * yArray[4] - yArray[3];\r\n                    yEnd = yArray[3];\r\n                    break;\r\n                case RelativePosition.BOTTOM_LEFT:\r\n                    xStart = 2 * xArray[0] - xArray[1];\r\n                    xEnd = xArray[1];\r\n                    yStart = 2 * yArray[4] - yArray[3];\r\n                    yEnd = yArray[3];\r\n                    break;\r\n                case RelativePosition.TOP_LEFT:\r\n                    xStart = 2 * xArray[0] - xArray[1];\r\n                    xEnd = xArray[1];\r\n                    yStart = 2 * yArray[0] - yArray[1];\r\n                    yEnd = yArray[1];\r\n                    break;\r\n                case RelativePosition.ILLEGAL:\r\n                    console.log(\"Illegal position\");\r\n                    return;\r\n            }\r\n            this.drawDiffLine(xStart, yStart, xEnd, yEnd);\r\n        })\r\n    }\r\n}\r\n","export class Styles {\r\n    widthCell: number;\r\n    heightCell: number;\r\n    background: string;\r\n    borderColor: string;\r\n    lineColor: string;\r\n    lineWidth: number;\r\n    borderWidth: number;\r\n    canvasBorderWidth: number;\r\n    canvasBorderColor: string;\r\n    fillColor: string;\r\n    textColor: string;\r\n    font: { Default: string, Heading: string };\r\n    diffColor: string;\r\n    diffWidth: number;\r\n    sisterColor: string;\r\n\r\n    constructor(width: number, height: number) {\r\n        this.widthCell = width;\r\n        this.heightCell = height;\r\n        this.background = \"#fff5ea\";\r\n        this.borderColor = \"#343653\";\r\n        this.canvasBorderColor =\"#ae0066\";\r\n        this.canvasBorderWidth = 1;\r\n        this.lineWidth = 2;\r\n        this.borderWidth = 10;\r\n        this.diffWidth = 5;\r\n        this.fillColor = \"#fff0e6\";\r\n        this.textColor = \"#d62061\";\r\n        this.lineColor = \"#6dc2ff\";\r\n        this.diffColor = \"#ff2955\";\r\n        this.sisterColor = \"#339bcb\";\r\n        this.font = {Default: \"27px 'Segoe UI',Arial,sans-serif\", Heading: \"44px 'Segoe UI',Arial,sans-serif\"};\r\n    }\r\n\r\n}","import {PentaWarningError} from \"./PentaWarningError\";\r\nimport {Area} from \"./area\";\r\nimport {Cell} from \"./Cell\";\r\nimport {Position} from \"./position\";\r\nimport {Diff} from \"./diff\";\r\nimport {Sister} from \"./sister\";\r\n\r\nexport class Serializer {\r\n    private static minLines: number = 2;\r\n\r\n    static serialize(textContent: string): PentaWarningError {\r\n        let pentaWarningError = new PentaWarningError();\r\n        let penta = pentaWarningError.penta;\r\n        console.log(\"We want to serialize: \" + textContent);\r\n        let lines = textContent.split(/[\\r\\n]+/);\r\n        if (lines.length < this.minLines) {\r\n            pentaWarningError.addError(\"Text for penta should contain: \\n\" +\r\n                \"author, nbLine nbCols, penta\");\r\n            return pentaWarningError;\r\n        }\r\n        penta.author = lines[0].trim();\r\n        console.log(\"Author is :\" + penta.author);\r\n\r\n        let lineCol = lines[1].trim().split(\" \").map(s => Number(s));\r\n        console.log(\"We have lineCol: \" + lineCol);\r\n        if (lineCol.length != 2) {\r\n            pentaWarningError.addError(\r\n                \"2nd line should provide nb of lines and columns like this \\\"nbLines nbCols\\\"\");\r\n            return pentaWarningError;\r\n        }\r\n        penta.lines = lineCol[0];\r\n        penta.columns = lineCol[1];\r\n        if (lines.length < this.minLines + penta.lines) {\r\n            pentaWarningError.addError(\"You didn't provide a pentatonic with \" + penta.lines + \" lines\");\r\n            return pentaWarningError;\r\n        }\r\n\r\n        this.fillAreas(pentaWarningError, lines, 2);\r\n        if (pentaWarningError.errors.length > 0) return pentaWarningError;\r\n        this.fillEnonce(pentaWarningError, lines, 2 + penta.lines);\r\n\r\n        return pentaWarningError;\r\n    }\r\n\r\n    static fillAreas(penta: PentaWarningError, lines: Array<string>, startLine: number) {\r\n        let mapAreas: { [key: string]: Area } = {};\r\n        let line: string;\r\n        for (let index = startLine; index < startLine + penta.penta.lines; index++) {\r\n            let i = index - startLine;\r\n            line = lines[index].trim();\r\n            if (line == \"\" || line == null) {\r\n                continue;\r\n            }\r\n            let lineCells = [];\r\n            if(line.length != penta.penta.columns) {\r\n                penta.addError(\r\n                    \"Mismatch between number of columns (\" + penta.penta.columns +\r\n                    \") and the size of the line\\\"\" + line + \"\\\" (cf. line number \" + (index + 1) + \")\");\r\n                break;\r\n            }\r\n\r\n            for (let j = 0; j < penta.penta.columns; j++) {\r\n                let cell = new Cell(i, j);\r\n                let area = mapAreas[line[j]];\r\n                if (area == null) {\r\n                    area = new Area(line[j]);\r\n                    mapAreas[line[j]] = area;\r\n                }\r\n                cell.area = area;\r\n                lineCells.push(cell);\r\n            }\r\n            penta.penta.cells.push(lineCells);\r\n        }\r\n        let warnings = penta.penta.fillAreaSize();\r\n        penta.addWarnings(warnings);\r\n    }\r\n\r\n    static fillEnonce(penta: PentaWarningError, lines: Array<string>, startLine: number) {\r\n        let line: string;\r\n        let countArray: number = lines.length;\r\n        let toSister: { [c: string]: Array<Position> } = {};\r\n        for (let i = startLine; i < countArray; i++) {\r\n            line = lines[i].trim();\r\n            if (line == \"\") continue;\r\n\r\n            // we got a number or a constraint\r\n            if (line.startsWith(\"-\")) {\r\n                // DiffOne\r\n                let lineCols = line.substr(1).split(\",\").map(n => +n);\r\n                if (lineCols.length != 4) {\r\n                    penta.addError(\"For a diffOne, you should have 4 numbers: \\\"-i1,j1,i2,j2\\\" for example. But you typed \\\"\" + line + \"\\\"\");\r\n                    break;\r\n                }\r\n                let pos1 = new Position(lineCols[0], lineCols[1]);\r\n                let pos2 = new Position(lineCols[2], lineCols[3]);\r\n                if (pos1 == pos2) {\r\n                    penta.addError(\"Difference one should concern 2 different positions. But you typed \\\"\" + line + \"\\\"\");\r\n                    continue;\r\n                }\r\n                if (!pos1.isNear(pos2)) {\r\n                    penta.addWarning(\"Difference one should concert 2 near positions. But you typed \\\"\" + line + \"\\\"\");\r\n                }\r\n                penta.penta.diffOnes.push(new Diff(pos1, pos2));\r\n                continue;\r\n            }\r\n            // we got a\r\n            let split = line.split(\",\");\r\n            if (split.length != 3) {\r\n                penta.addError(\"Bad input, should be n,i,j, but was \" + line);\r\n                continue;\r\n            }\r\n            if (split[0].length != 1) {\r\n                penta.addError(\"Bad input: \" + split[0] + \" in line \" + line);\r\n                continue;\r\n            }\r\n            let nb = split[0];\r\n            let nLine = +split[1];\r\n            let nCol = +split[2];\r\n            if (nLine >= penta.penta.lines) {\r\n                penta.addError(\r\n                    \"Line i = \" + nLine + \" is out of bounds in \\\"\" + line + \"\\\": number of lines = \" + penta.penta.lines + \" (cf. line \" + (i + 1) + \")\");\r\n                continue;\r\n            }\r\n            if (nCol >= penta.penta.columns) {\r\n                penta.addError(\r\n                    \"Column j = \" + nCol + \" is out of bounds in \\\"\" + line + \"\\\": number of columns = \" + penta.penta.columns + \" (cf. line \" + (i + 1) + \")\");\r\n                continue;\r\n            }\r\n            let cell = penta.penta.cells[nLine][nCol];\r\n            let n: number = +nb;\r\n            if (!Number.isNaN(n)) {\r\n                console.log(\"nb is \" + nb);\r\n                let n: number = +nb;\r\n                console.log(\"Success converting nb to number: \" + n);\r\n                cell.values.push(nb);\r\n            } else {\r\n                if (toSister[nb] == null) {\r\n                    toSister[nb] = [new Position(nLine, nCol)];\r\n                } else {\r\n                    toSister[nb].push(new Position(nLine, nCol));\r\n                }\r\n            }\r\n        }\r\n        for (let keyChar in toSister) {\r\n            penta.penta.sisters.push(new Sister(keyChar, keyChar, toSister[keyChar]));\r\n        }\r\n    }\r\n\r\n}","import {Pentatonic} from \"./Pentatonic\";\r\n\r\nexport class PentaWarningError {\r\n    penta: Pentatonic;\r\n    warnings: Array<string>;\r\n    errors: Array<string>;\r\n\r\n    constructor() {\r\n        this.penta = new Pentatonic();\r\n        this.warnings = [];\r\n        this.errors = [];\r\n    }\r\n\r\n    public addWarning(warn: string) {\r\n        this.warnings.push(warn);\r\n    }\r\n\r\n    public addWarnings(warnings: Array<string>) {\r\n        warnings.forEach(warn => this.addWarning(warn));\r\n    }\r\n\r\n    public addError(error: string) {\r\n        this.errors.push(error);\r\n    }\r\n\r\n    public hasWarningsOrErrors() {\r\n        return this.warnings.length > 0 || this.errors.length > 0;\r\n    }\r\n}","import {Cell} from \"./Cell\";\r\nimport {Area} from \"./area\";\r\nimport {Diff} from \"./diff\";\r\nimport {Sister} from \"./sister\";\r\nimport {Position} from \"./position\";\r\n\r\nexport class Pentatonic {\r\n    id: number = 0;\r\n    version: number = 0;\r\n    areas: string = \"\";\r\n    difficulty: number = 0;\r\n    author: string = \"\";\r\n    filename: string = \"\";\r\n    lines: number;\r\n    columns: number;\r\n    cells: Array<Array<Cell>>;\r\n    diffOnes: Array<Diff>;\r\n    sisters: Array<Sister>;\r\n    private MAX_AREA_SIZE: number = 5;\r\n\r\n    constructor(lines: number = 0, columns: number = 0) {\r\n        this.lines = lines;\r\n        this.columns = columns;\r\n        this.cells = [];\r\n        this.diffOnes = [];\r\n        this.sisters = [];\r\n    }\r\n\r\n    fillAreaSize(): Array<string> {\r\n        let warnings: Array<string> = [];\r\n        let allAreas = this.getAllAreas();\r\n        allAreas.forEach(area => {\r\n            let areaCells: Set<Cell> = this.getAreaCells(area);\r\n            let size = areaCells.size;\r\n            areaCells.forEach(c => c.area.size = size);\r\n            if (size > this.MAX_AREA_SIZE) {\r\n                warnings.push(\r\n                    \"Area with id \" + area.id + \" is bigger than the max (\" + size + \" > \" + this.MAX_AREA_SIZE + \")\");\r\n            }\r\n        });\r\n        return warnings;\r\n    }\r\n\r\n    public cellArray(): Array<Cell> {\r\n        let res: Array<Cell> = [];\r\n        for (let row of this.cells) {\r\n            for (let cell of row) {\r\n                res.push(cell);\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n\r\n    public getAllAreas(): Set<Area> {\r\n        let set: Set<Area> = new Set();\r\n        let merge: Array<Cell> = this.cellArray();\r\n\r\n        merge.forEach((c: Cell) => {\r\n            set.add(c.area)\r\n        });\r\n        return set;\r\n    }\r\n\r\n    private getAreaCells(area: Area): Set<Cell> {\r\n        return new Set(this.cellArray().filter(c => c.area.id == area.id));\r\n    }\r\n\r\n    public getAreaPositions(area: Area): Set<Position> {\r\n        return new Set<Position>(this.cellArray().filter(c => c.area.id == area.id).map(cell => cell.position));\r\n    }\r\n\r\n    public diffOnesHave(position: Position): boolean {\r\n        for (let diff of this.diffOnes) {\r\n            if (diff.position1 == position || diff.position2 == position) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public sistersHave(position: Position): boolean {\r\n        for (let sis of this.sisters) {\r\n            if (sis.positions.filter(pos => pos.i == position.i && pos.j == position.j).length > 0) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getSisterSymbol(position: Position): string {\r\n        for (let sis of this.sisters) {\r\n            if (sis.positions.filter(pos => pos.i == position.i && pos.j == position.j).length > 0) return sis.symbol;\r\n        }\r\n        return \"\";\r\n    }\r\n}","export class Area {\r\n    id: string;\r\n    size: number;\r\n\r\n    constructor(id: string = \"0\", size: number = 0) {\r\n        this.id = id;\r\n        this.size = size;\r\n    }\r\n}","import {Area} from \"./area\";\r\nimport {Position} from \"./position\";\r\n\r\nexport class Cell {\r\n    position: Position;\r\n    area: Area;\r\n    values: Array<string>;\r\n\r\n    constructor(i: number, j: number) {\r\n        this.position = new Position(i, j);\r\n        this.values = [];\r\n    }\r\n}","import {Position} from \"./position\";\r\n\r\nexport class Diff {\r\n    position1: Position;\r\n    position2: Position;\r\n\r\n    constructor(pos1: Position, pos2: Position) {\r\n        this.position1 = pos1;\r\n        this.position2 = pos2;\r\n    }\r\n}","import {Position} from \"./position\";\r\n\r\nexport class Sister {\r\n    id: string;\r\n    symbol: string;\r\n    positions: Array<Position>;\r\n\r\n    constructor(id: string, symbol: string, positions: Array<Position>) {\r\n        this.id = id;\r\n        this.symbol = symbol;\r\n        this.positions = positions;\r\n    }\r\n}","import {PentaWarningError} from \"./PentaWarningError\";\r\nimport {Position} from \"./position\";\r\n\r\nexport class PentaChecker {\r\n    static check(pentaWithWarnings: PentaWarningError) {\r\n        PentaChecker.checkAreas(pentaWithWarnings);\r\n    }\r\n\r\n    private static checkAreas(pentaWithWarnings: PentaWarningError) {\r\n        let penta = pentaWithWarnings.penta;\r\n        penta.getAllAreas().forEach(area => {\r\n            let areaPositions = penta.getAreaPositions(area);\r\n            if (!this.checkAdjacent(areaPositions)) {\r\n                pentaWithWarnings.addWarning(\"Probable error with area id \" + area.id + \": it has disjoint areas!\");\r\n            }\r\n        })\r\n    }\r\n\r\n    private static checkAdjacent(areaPositions: Set<Position>): boolean {\r\n        // TODO algo\r\n        return true;\r\n    }\r\n}","import {Value} from \"./value\";\r\nimport {Sister} from \"./sister\";\r\nimport {Diff} from \"./diff\";\r\nimport {Pentatonic} from \"./Pentatonic\";\r\n\r\nexport class PentaJson {\r\n    author: String;\r\n    values: Array<Value>;\r\n    height: number;\r\n    width: number;\r\n    difficulty: number;\r\n    name: String;\r\n    data: Array<Array<String>>;\r\n    differences: Array<Diff>;\r\n    sisters: Array<Sister>;\r\n\r\n    constructor() {\r\n        // this.height = height;\r\n        // this.author = author;\r\n        this.values = [];\r\n        // this.width = width;\r\n        // this.difficulty = difficulty;\r\n        // this.name = name;\r\n        this.data = [];\r\n        this.differences = [];\r\n        this.sisters = [];\r\n    }\r\n\r\n    static fromPentatonic(penta: Pentatonic): PentaJson {\r\n        let res = new PentaJson();\r\n        res.author = penta.author;\r\n        res.difficulty = penta.difficulty;\r\n        res.name = penta.filename;\r\n        res.width = penta.columns;\r\n        res.height = penta.lines;\r\n        res.differences = penta.diffOnes;\r\n        res.sisters = penta.sisters;\r\n\r\n        res.data = penta.cells.map(row => row.map(cell => cell.area.id));\r\n        res.values = penta.cellArray()\r\n            .filter(cell => cell.values.length == 1)\r\n            .map(cell => new Value(+cell.values[0], cell.position.i, cell.position.j));\r\n\r\n        return res;\r\n    }\r\n}\r\n\r\n","export class Value {\r\n    val: number;\r\n    i: number;\r\n    j: number;\r\n\r\n    constructor(val: number, i: number, j: number) {\r\n        this.val = val;\r\n        this.i = i;\r\n        this.j = j;\r\n    }\r\n}"],"sourceRoot":""}